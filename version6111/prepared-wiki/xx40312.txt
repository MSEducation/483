[[GNU Compiler for Java]]

CATEGORIES: GNU Project software, Java development tools, Free compilers and interpreters, Java platform

The GNU Compiler for Java (GCJ) is a free compiler software for the Java programming language and a part of the GNU Compiler Collection.http://gcc.gnu.org/java/[tpl]cite book |last=Campbell |first=Bill |date= |title=Introduction to Compiler Construction in a Java World |url=http://books.google.com/books?id=-b8WjLY2eKEC&pg=PA277&lpg=PA277&dq=gnu+java+compiler&source=bl&ots=Es6HExUiAZ&sig=Nz2kiAVzQv0gB8aLU57C8j6L7Tc&hl=en&sa=X&ei=VpXzUsClO6mCygHKxIGYBg&ved=0CDsQ6AEwAzgU#v=onepage&q=gnu%20java%20compiler&f=false |location= |publisher=CRC Press Taylor & Francis Group |isbn=978-1-4398-6088-5 |accessdate=2/6/2014 [/tpl]
GCJ can compile Java source code to Java Virtual Machine bytecode or to machine code for a number of CPU architectures. It can also compile class files and whole JARs that contain bytecode.http://www.linuxjournal.com/article/4860http://freecode.com/projects/gcj

==History==

The GCJ runtime-libraries original source is from GNU Classpath project, but there is a code difference between the  libgcj  libraries. GCJ 4.3  [tpl]clarify-span|integrates with ecj|date=August 2012[/tpl], the Eclipse Compiler for Java.
In 2007 a lot of work was done to implement support for Java's two graphical APIs in GNU Classpath: AWT and Swing .
As of 2013 there have been no new developments announced from GCJGCJ: News and the product is currently in maintenance mode.
Software support for AWT is still in development. The next planned support feature after AWT support is a software support for Swing.The GCJ FAQ - GNU Project - Free Software Foundation (FSF)

==Performance==

The compilation function in GCJ should have a faster start-up time than the equivalent bytecode launched in a JVM when compiling Java code into machine code.GCJ: The GNU Static Java Compiler

==CNI (Compiled Native Interface)==

The CNI (Compiled Native Interface, previously named 'Cygnus Native Interface') is a software framework for the GCJ that allows Java code to call, and be called, by native applications (programs specific to a hardware and operating-system platform) and libraries written in C++.
CNI closely resembles the JNI (Java Native Interface) framework which comes as a standard with various Java virtual machines.

===Comparison of language use===

the authors of CNI claim for various advantages over JNI:The GCJ FAQ - GNU Project - Free Software Foundation (FSF)

CNI depends on Java classes appearing as C++ classes. For example,[ref]
The example comes from: http://gcc.gnu.org/onlinedocs/gcj/Objects-and-Classes.html#Objects-and-Classes[/ref]
given a Java class,
one can use the class thus:

==See also==

==References==

==External links==


