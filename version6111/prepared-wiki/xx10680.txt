[[Run-length encoding]]

CATEGORIES: Lossless compression algorithms

Run-length encoding (RLE) is a very simple form of data compression in which runs of data (that is, sequences in which the same data value occurs in many consecutive data elements) are stored as a single data value and count, rather than as the original run.  This is most useful on data that contains many such runs: for example, simple graphic images such as icons, line drawings, and animations. It is not useful with files that don't have many runs as it could greatly increase the file size.
RLE may also be used to refer to an early graphics file format supported by CompuServe for compressing black and white images, but was widely supplanted by their later Graphics Interchange Format. RLE also refers to a little-used image format in Windows 3.x, with the extension rle, which is a Run Length Encoded Bitmap, used to compress the Windows 3.x startup screen.
Typical applications of this encoding are when the source information comprises long substrings of the same character or binary digit.

==Example==

For example, consider a screen containing plain black text on a solid white background.  There will be many long runs of white pixels in the blank space, and many short runs of black pixels within the text.  Let us take a hypothetical single scan line, with B representing a black pixel and W representing white:
If we apply the run-length encoding (RLE) data compression algorithm to the above hypothetical scan line, we get the following:
This is to be interpreted as twelve Ws, one B, twelve Ws, three Bs, etc.
The run-length code represents the original 67 characters in only 18.  Of course, the actual format used for the storage of images is generally binary rather than ASCII characters like this, but the principle remains the same.  Even binary data files can be compressed with this method; file format specifications often dictate repeated bytes in files as padding space.  However, newer compression methods such as DEFLATE often use LZ77-based algorithms, a generalization of run-length encoding that can take advantage of runs of strings of characters (such as BWWBWWBWWBWW).
Run-length encoding can be expressed in multiple ways to accommodate data properties as well as additional compression algorithms.  For instance, one popular method encodes run lengths for runs of two or more characters only, using an "escape" symbol to identify runs, or using the character itself as the escape, so that any time a character appears twice it denotes a run.  On the previous example, this would give the following:
This would be interpreted as a run of twelve Ws, a B, a run of twelve Ws, a run of three Bs, etc.  In data where runs are less frequent, this can significantly improve the compression rate.
One other matter is the application of additional compression algorithms.  Even with the runs extracted, the frequencies of different characters may be large, allowing for further compression; however, if the run lengths are written in the file in the locations where the runs occurred, the presence of these numbers interrupts the normal flow and makes it harder to compress.  To overcome this, some run-length encoders separate the data and escape symbols from the run lengths, so that the two can be handled independently.  For the example data, this would result in two outputs, the string "WWBWWBBWWBWW" and the numbers (12,12,3,24,14).

==Applications==

Run-length encoding performs lossless data compression and is well suited to palette-based bitmapped images such as computer icons. It does not work well at all on continuous-tone images such as photographs, although JPEG uses it quite effectively on the coefficients that remain after transforming and quantizing image blocks.
Common formats for run-length encoded data include Truevision TGA, PackBits, PCX and ILBM.
Run-length encoding is used in fax machines (combined with other techniques into Modified Huffman coding).  It is relatively efficient because most faxed documents are generally white space, with occasional interruptions of black.

==See also==

==External links==


