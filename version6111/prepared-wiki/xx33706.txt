[[Inequation]]

CATEGORIES: Elementary algebra

In mathematics, an inequation is a statement that an inequality holds between two values.[tpl]cite book |title=The A to Z of Mathematics: A Basic Guide |author=Thomas H. Sidebotham |page=252 |publisher=John Wiley and Sons |year=2002 |isbn=0-471-15045-2[/tpl] It is usually written in the form of a pair of expressions denoting the values in question, with a relational sign between them indicating the specific inequality relation. Some examples of inequations are:
Some authors apply the term only to inequations in which the inequality relation is, specifically, not-equal-to (â‰ ).[tpl]MathWorld|title=Inequation|urlname=Inequation[/tpl]

==Chains of inequations==

A shorthand notation is used for the conjunction of several inequations involving common expressions, by chaining them together. For example, the chain
is shorthand for

==Solving inequations==

Similar to equation solving, inequation solving means finding what values (numbers, functions, sets, etc.) fulfill a condition stated in the form of an inequation or a conjunction of several inequations.
These expressions contain one or more unknowns, which are free variables for which values are sought that cause the condition to be fulfilled. 
To be precise, what is sought are often not necessarily actual values, but, more in general, mathematical expressions. 
A solution of the equation is an assignment of expressions to the unknowns that satisfies the inequation(s); in other words, expressions such that, when they are substituted for the unknowns, the inequations become true propositions.
Often, an additional objective expression is given that is to be minimized by an optimal solution.
See Linear_programming#Example for a larger example.
Computer support in solving inequations is described in constraint programming;
in particular,  the simplex algorithm finds optimal solutions of linear inequations. 
The programming language Prolog III supports solving algorithms for particular classes of inequalities (and other relations) as a basic language feature, see constraint logic programming.

==Special==

 f(x) \ge 0 \\
 g(x) > 0\\
 f(x) < \left [ g(x) \right ]^2 \quad
\end{cases}

==See also==

==References==


