[[Role-based access control]]

CATEGORIES: Computer security models, Access control

In computer systems security, role-based access control (RBAC)[tpl] cite conference | author = Ferraiolo, D.F. and Kuhn, D.R. | title = Role-Based Access Control | booktitle=15th National Computer Security Conference |date=October 1992 | pages=554–563 | url = http://csrc.nist.gov/groups/SNS/rbac/documents/ferraiolo-kuhn-92.pdf | format = PDF [/tpl][tpl] cite journal | author = Sandhu, R., Coyne, E.J., Feinstein, H.L. and Youman, C.E. | title = Role-Based Access Control Models | journal = IEEE Computer | volume=29 | issue=2 |date=August 1996 | pages=38–47 | publisher=IEEE Press | url = http://csrc.nist.gov/rbac/sandhu96.pdf | format=PDF | doi=10.1109/2.485845[/tpl] is an approach to restricting system access to authorized users. It is used by the majority of enterprises with more than 500 employees,[tpl] cite book | author = A.C. O'Connor and R.J. Loomis | title = Economic Analysis of Role-Based Access Control |date=December 2010 | format=PDF | publisher = Research Triangle Institute | url = http://csrc.nist.gov/groups/SNS/rbac/documents/20101219_RBAC2_Final_Report.pdf [/tpl] and can implement mandatory access control (MAC) or discretionary access control (DAC). RBAC is sometimes referred to as role-based security.

==Design==

Within an organization, roles are created for various job functions. The permissions to perform certain operations are assigned to specific roles. Members or staff (or other system users) are assigned particular roles, and through those role assignments acquire the computer permissions to perform particular computer-system functions. Since users are not assigned permissions directly, but only acquire them through their role (or roles), management of individual user rights becomes a matter of simply assigning appropriate roles to the user's account; this simplifies common operations, such as adding a user, or changing a user's department.
Three primary rules are defined for RBAC:
Additional constraints may be applied as well, and roles can be combined in a hierarchy where higher-level roles subsume permissions owned by sub-roles.
With the concepts of role hierarchy and constraints, one can control RBAC to create or simulate lattice-based access control (LBAC). Thus RBAC can be considered to be a superset of LBAC.
When defining an RBAC model, the following conventions are useful:
A constraint places a restrictive rule on the potential inheritance of permissions from opposing roles, thus it can be used to achieve appropriate separation of duties. For example, the same person should not be allowed to both create a login account and to authorize the account creation.
Thus, using set theory notation:
A subject may have multiple simultaneous sessions with different permissions.thumb|RBAC

===Standardized levels===

The NIST/ANSI/INCITS RBAC standard (2004) recognizes three levels of RBAC:[tpl]cite book|author1=Alberto Belussi|author2=Barbara Catania|author3=Eliseo Clementini|coauthors=Elena Ferrari|title=Spatial Data on the Web: Modeling and Management|url=http://books.google.com/books?id=wtDj6VEG7SIC&pg=PA194|year=2007|publisher=Springer|isbn=978-3-540-69878-4|page=194[/tpl]

==Relation to other models==

RBAC is a flexible access control technology whose flexibility allows it to implement DAC[tpl] cite conference | author = Ravi Sandhu, Qamar Munawer | title = How to do discretionary access control using roles | booktitle=3rd ACM Workshop on Role-Based Access Control |date=October 1998 | pages=47–54 [/tpl] or MAC.[tpl] cite conference | author = Sylvia Osborn, Ravi Sandhu, and Qamar Munawer | title = Configuring role-based access control to enforce mandatory and discretionary access control policies | booktitle=ACM Transactions on Information and System Security (TISSEC) | year = 2000 | pages=85–106 [/tpl] DAC with groups (e.g., as implemented in POSIX file systems) can emulate RBAC.[tpl]Cite journal|first1=Achim D.|last1=Brucker|first2=Burkhart|last2=Wolff|title=A Verification Approach for Applied System Security|journal=International Journal on Software Tools for Technology (STTT)|year=2005|doi=10.1007/s10009-004-0176-3|url=http://www.brucker.ch/bibliography/abstract/brucker.ea-verification-2005.en.html[/tpl] MAC can simulate RBAC if the role graph is restricted to a tree rather than a partially ordered set.[tpl] cite conference | author = D.R. Kuhn | title = Role Based Access Control on MLS Systems Without Kernel Changes | booktitle=Third ACM Workshop on Role Based Access Control | year = 1998 | pages=25–32 | url = http://csrc.nist.gov/groups/SNS/rbac/documents/design_implementation/kuhn-98.pdf | format = PDF [/tpl]
Prior to the development of RBAC, the Bell-LaPadula (BLP) model was synonymous with MAC and file system permissions were synonymous with DAC. These were considered to be the only known models for access control: if a model was not BLP, it was considered to be a DAC model, and vice versa. Research in the late 1990s demonstrated that RBAC falls in neither category.National Institute of Standards and Technology FAQ on RBAC models and standardsDavid Ferraiolo and Richard Kuhn Unlike context-based access control (CBAC), RBAC does not look at the message context (such as a connection's source). RBAC has also been criticized for leading to role explosion,[tpl] cite conference | author = A. A. Elliott and G. S. Knight | title = Role Explosion: Acknowledging the Problem | booktitle=Proceedings of the 2010 International Conference on Software Engineering Research & Practice | year = 2010 | url = http://knight.segfaults.net/papers/20100502%20-%20Aaron%20Elliott%20-%20WOLRDCOMP%202010%20Paper.pdf | format = PDF [/tpl] a problem in large enterprise systems which require access control of finer granularity than what RBAC can provide as roles are inherently assigned to operations and data types. In resemblance to CBAC, an Entity-Relationship Based Access Control (ERBAC, although the same acronym is also used for modified RBAC systems,http://www.acronymfinder.com/Enterprise-Role_Based-Access-Control-%28computing%29-%28ERBAC%29.html such as Extended Role-Based Access ControlDr. Bhavani Thuraisingham and Srinivasan Iyer (PPT)) system is able to secure instances of data by considering their association to the executing subject.Kalle Korhonen: tapestry-security-jpa, a JPA/Tapestry 5 specific implementation of the ERBAC concept
RBAC differs from access control lists (ACLs), used in traditional discretionary access-control systems, in that it assigns permissions to specific operations with meaning in the organization, rather than to low level data objects. For example, an access control list could be used to grant or deny write access to a particular system file, but it would not dictate how that file could be changed. In an RBAC-based system, an operation might be to 'create a credit account' transaction in a financial application or to 'populate a blood sugar level test' record in a medical application. The assignment of permission to perform a particular operation is meaningful, because the operations are granular with meaning within the application. RBAC has been shown to be particularly well suited to separation of duties (SoD) requirements, which ensure that two or more people must be involved in authorizing critical operations. Necessary and sufficient conditions for safety of SoD in RBAC have been analyzed. An underlying principle of SoD is that no individual should be able to effect a breach of security through dual privilege. By extension, no person may hold a role that exercises audit, control or review authority over another, concurrently held role.[tpl] cite conference | author = D.R. Kuhn | title = Mutual Exclusion of Roles as a Means of Implementing Separation of Duty in Role-Based Access Control Systems | booktitle=2nd ACM Workshop Role-Based Access Control | year = 1997 | pages=23–30 | format=PDF | url = http://csrc.nist.gov/groups/SNS/rbac/documents/design_implementation/kuhn-97.pdf [/tpl][tpl] cite conference | author = Ninghui Li, Ziad Bizri, and Mahesh V. Tripunitara . Tripunitara | title = On mutually exclusive roles and separation-of-duty, | booktitle=11th ACM conference on Computer and Communications Security | year = 2004 | pages=42–51 | format = PDF | url = http://portal.acm.org/citation.cfm?id=1030091 [/tpl]

==Use and availability==

The use of RBAC to manage user privileges (computer permissions) within a single system or application is widely accepted as a best practice. Systems including Microsoft Active Directory, Microsoft SQL Server, SELinux, grsecurity, FreeBSD, Solaris, Oracle DBMS, PostgreSQL 8.1, SAP R/3, ISIS Papyrus, FusionForge, Wikipedia, and  many others effectively implement some form of RBAC. A 2010 report prepared for NIST by the Research Triangle Institute analyzed the economic value of RBAC for enterprises, and estimated benefits per employee from reduced employee downtime, more efficient provisioning, and more efficient access control policy administration.
In an organization with a heterogeneous IT infrastructure and requirements that span dozens or hundreds of systems and applications, using RBAC to manage sufficient roles and assign adequate role memberships becomes extremely complex without hierarchical creation of roles and privilege assignments.Beyond Roles: A Practical Approach to Enterprise User Provisioning Newer systems extend the older NIST RBAC model[tpl] cite conference | author = Sandhu, R., Ferraiolo, D.F. and Kuhn, D.R. | title = The NIST Model for Role-Based Access Control: Toward a Unified Standard | booktitle=5th ACM Workshop Role-Based Access Control |date=July 2000 | pages=47–63 | format=PDF | url = http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf [/tpl] to address the limitations of RBAC for enterprise-wide deployments. The NIST model was adopted as a standard by INCITS as ANSI/INCITS 359-2004. A discussion of some of the design choices for the NIST model has also been published.[tpl] cite journal | author = Ferraiolo, D.F., Kuhn, D.R., and Sandhu, R. | title = RBAC Standard Rationale: comments on a Critique of the ANSI Standard on Role-Based Access Control | journal = IEEE Security & Privacy | volume=5 | issue=6 |date=Nov–Dec 2007 | pages=51–53 | publisher=IEEE Press | url = http://csrc.nist.gov/groups/SNS/rbac/documents/ferraiolo-kuhn-sandhu-07.pdf | format=PDF | doi = 10.1109/MSP.2007.173 [/tpl]

==Comparing with ACL==

The main option to the RBAC model is the ACL model. A "minimal RBAC Model", RBACm, can be compared with an ACL mechanism, ACLg, where only groups are permitted as entries in the ACL. Barkley (1997)J. Barkley (1997) "Comparing simple role based access control models and access control lists", In "Proceedings of the second ACM workshop on Role-based access control", pages 127-132. showed that RBACm and ACLg are equivalent.
In modern SQL implementations, like ACL of the CakePHP framework, ACL also manage groups and inheritance in a hierarchy of groups. So, specific "modern ACL" implementations can be compared with specific "modern RBAC" implementations, better than "old (file system) implementations".

==See also==

Similar "restricting system access" and complements to RBAC:
Related concepts:
Other things:

==References==

==Further reading==

==External links==


