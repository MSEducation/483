[[Java Data Objects]]

CATEGORIES: Object-relational mapping, Java platform, Java enterprise platform, Java specification requests, Java APIs

Java Data Objects (JDO) is a specification of Java object persistence. One of its features is a transparency of the persistence services to the domain model. JDO persistent objects are ordinary Java programming language classes (POJOs); there is no requirement for them to implement certain interfaces or extend from special classes. JDO 1.0 was developed under the Java Community Process as JSR 12. JDO 2.0 was developed under JSR 243 and was released on May 10, 2006. JDO 2.1 was completed in Feb 2008, developed by the Apache JDO project. JDO 2.2 was released in October 2008. JDO 3.0 was released in April 2010.
Object persistence is defined in the external XML metafiles, which may have vendor-specific extensions. JDO vendors provide developers with enhancers, which modify compiled Java class files so they can be transparently persisted. (Note that byte-code enhancement is not mandated by the JDO specification, although it is the commonly used mechanism for implementing the JDO specification's requirements.) Currently, JDO vendors offer several options for persistence, e.g. to RDBMS, to OODB, or to files.
JDO enhanced classes are portable across different vendors' implementation. Once enhanced, a Java class can be used with any vendor's JDO product.
JDO is integrated with Java EE in several ways. First of all, the vendor implementation may be provided as a [tpl]clarify-span|JEE Connector|date=October 2012[/tpl]. Secondly, JDO may work in the context of JEE transaction services.

==JDO vs. EJB3 vs. JPA==

Enterprise Java Beans 3.0 (EJB3) specification also covered persistence, as had EJB v2 with Entity Beans. There has been standards conflict between the two standards bodies in terms of pre-eminence. JDO has several commercial implementations.
In the end, persistence has been "broken out" of "EJB3 Core", and a new standard formed, the Java Persistence API (JPA). JPA uses the javax.persistence package, and was first specified in a separate document within the EJB3 spec JSR 220, but was later moved to its own spec JSR 317. Significantly, javax.persistence will not require an EJB container, and thus will work within a Java SE environment as well, as JDO always has. JPA, however, is an object-relational mapping (ORM) standard, while JDO is both an object-relational mapping standard and a transparent object persistence standard. JDO, from an API point of view, is agnostic to the technology of the underlying datastore, whereas JPA is targeted to RDBMS datastores (although there are several JPA providers that support access to non-relational datastores through the JPA API, such as DataNucleus and ObjectDB).
Leading JDO commercial implementations and open source projects also offer a JPA API implementation as an alternative access to their underlying persistence engines, formerly exposed solely via JDO in the original products. There are many open source implementations of JDO.

==New Features in JDO Version 2 Not Found In Version 1==

==JDO Reference Implementations==

==See also==

==Bibliography==

| first1      = David
| last1       = Jordan
| first2      = Craig
| last2       = Russell
| date        = April 22, 2003
| title       = Java Data Objects
| publisher   = O'Reilly Media
| edition     = 1st
| pages       = 384
| isbn        = 0-596-00276-9
| url         = http://oreilly.com/catalog/9780596002763
}}
| first1      = Sameer
| last1       = Tyagi
| first2      = Michael
| last2       = Vorburger
| first3      = Keiron
| last3       = McCammon
| first4      = Heiko
| last4       = Bobzin
| date        = September 21, 2003
| title       = Core Java Data Objects
| publisher   = Prentice Hall
| edition     = 1st
| pages       = 576
| isbn        = 0-13-140731-7
| url         = http://www.informit.com/store/product.aspx?isbn=0131407317
}}
| first      = David
| last       = Ezzio
| date       = June 6, 2003
| title      = Using and Understanding Java Data Objects
| publisher  = Apress
| edition    = 1st
| pages      = 456
| isbn       = 1-59059-043-0
| url        = http://www.apress.com/book/view/9781590590430
}}

==External links==


