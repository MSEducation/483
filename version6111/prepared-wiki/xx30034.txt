[[Software patent]]

CATEGORIES: Software patent law

A software patent has been defined by the Foundation for a Free Information Infrastructure (FFII) as being a "patent on any performance of a computer realised by means of a computer program".
Most countries place some limits on the patenting of invention involving software, but there is no legal definition of a software patent. For example, U.S. patent law excludes "abstract ideas", and this has been used to refuse some patents involving software. In Europe, "computer programs as such" are excluded from patentability and European Patent Office policy is consequently that a program for a computer is not patentable if it does not have the potential to cause a "further technical effect" beyond the inherent technical interactions between hardware and software.[tpl]cite web|url=http://www.epo.org/news-issues/issues/software.html |title=Patents for software? European law and practice |publisher=Epo.org |date= |accessdate=2014-02-16[/tpl]
There is debate over the extent to which software patents should be granted, if at all. Important issues concerning software patents include:
|url=http://www.ipo.gov.uk/response-inventive.pdf
|format=PDF|title=Public consultation on level of the inventive step required for obtaining patents
|publisher=UK Intellectual Property Office
|accessdate=2007-06-05}}[/ref] and

==Background==

A patent is a set of exclusionary rights granted by a state to a patent holder for a limited period of time, usually 20 years. These rights are granted to patent applicants in exchange for their disclosure of the inventions. Once a patent is granted in a given country, no person may make, use, sell or import/export the claimed invention in that country without the permission of the patent holder. Permission, where granted, is typically in the form of a license which conditions are set by the patent owner: it may be gratis or in return for a royalty payment or lump sum fee.
Patents are territorial in nature. To obtain a patent, inventors must file patent applications in each and every country in which they want a patent. For example, separate applications must be filed in Japan, China, the United States and India if the applicant wishes to obtain patents in those countries. However, some regional offices exist, such as the European Patent Office (EPO), which act as supranational bodies with the power to grant patents which can then be brought into effect in the member states, and an international procedure also exists for filing a single international application under the Patent Cooperation Treaty (PCT), which can then give rise to patent protection in most countries.
These different countries and regional offices have different standards for granting patents. This is particularly true of software or computer-implemented inventions, especially where the software is implementing a business method.

==Early example of a software patent==

On 21 May 1962, a British patent application entitled "A Computer Arranged for the Automatic Solution of Linear Programming Problems" was filed.[tpl]Cite patent|GB|1039141[/tpl] The invention was concerned with efficient memory management for the simplex algorithm, and could be implemented by purely software means. The patent was granted on August 17, 1966 and seems to be one of the first software patents.[tpl]cite book | last = Beresford | first = K |year = 2000 |title = Patenting Software under the European Patent Convention | location = London | publisher = Sweet & Maxwell | page =4[/tpl][tpl]cite journal | url = http://www2.warwick.ac.uk/fac/soc/law/elj/jilt/2003_1/kretschmer/ | title = Software as Text and Machine: The Legal Capture of Digital Innovation | first = Martin | last = Kretschmer | journal = Journal of Information Law & Technology (JILT) | place = Centre for Intellectual Property Policy and Management, Bournemouth University | date = 4 July 2003[/tpl]

==Jurisdictions==

Substantive law regarding the patentability of software and computer-implemented inventions, and case law interpreting the legal provisions, are different under different jurisdictions.
Software patents under multilateral treaties:
Software patents under national laws:

===Australia===

In Australia, pure or abstract methods of doing business are not considered to be patentable, but if the method is implemented using a computer, it avoids the exclusion for business methods.[tpl]citation | url = http://www.aipla.org/html/Patent-Handbook/countries/australia/AUsoftware.html | title = AIPLA International Patent Law Handbook | chapter = Software and Business Method Inventions, Australia | publisher = American Intellectual Property Law Association (AIPLA)[/tpl][tpl]dead link|date=October 2012[/tpl]

===Canada===

In Canada, courts have held that the use of a computer alone neither lends, nor reduces patentability of an invention. However, it is the position of the Canadian Patent Office that where a computer is an "essential element" of a patent's claims, the claimed invention is generally patentable subject matter.[tpl]citation |title=Examination Practice Respecting Computer-Implemented Inventions - PN 2013-03|url=http://www.cipo.ic.gc.ca/eic/site/cipointernet-internetopic.nsf/eng/wr03627.html|publisher=Canadian Intellectual Property Office | date = March 8, 2013[/tpl]

===Europe===

Within European Union member states, the EPO and other national patent offices have issued many patents for inventions involving software since the European Patent Convention (EPC) came into force in the late 1970s. [tpl]EPC Article|52[/tpl] excludes "programs for computers" from patentability (Art. 52(2)) to the extent that a patent application relates to a computer program "as such" (Art. 52(3)). This has been interpreted to mean that any invention which makes a non-obvious "technical contribution" or solves a "technical problem" in a non-obvious way is patentable even if that technical problem is solved by running a computer program.[tpl]citation | url = http://legal.european-patent-office.org/dg3/pdf/t030469eu1.pdf | format = PDF | title = DECISION of 24 February 2006, Case Number: T 0469/03 - 3.5.01 | pages = Reasons 5.1 to 5.3 | publisher = European Patent Office, Boards of Appeal| date = 24 February 2006[/tpl]
Computer-implemented inventions which only solve a business problem using a computer, rather than a technical problem, are considered unpatentable as lacking an inventive step (see T 258/03). Nevertheless, the fact that an invention is useful in business does not mean it is not patentable if it also solves a technical problem.
A summary of the developments concerning patentability of computer programs under the European Patent Convention is given in (see G 3/08) as a response of the Enlarged Board of Appeal to questions filed by the President of the European Patent Office according to Art. 112(1)b) EPC.

====Germany====

In April 2013, the German Parliament adopted a joint motion "against the growing trend of patent offices to grant patents on software programs."[tpl]cite web |url=http://www.ip-watch.org/2013/04/22/german-parliament-sends-message-stop-granting-software-patents |title=German Parliament Sends Message: Stop Granting Software Patents |last1=Ermert |first1=Monika |date=22 April 2013 |work=Intellectual Property Watch |publisher= |accessdate=April 29, 2013[/tpl]

====United Kingdom====

United Kingdom patent law is interpreted to have the same effect as the European Patent Convention such that "programs for computers" are excluded from patentability to the extent that a patent application relates to a computer program "as such". Current case law in the UK states that an (alleged) invention will only be actually regarded as an invention if it provides a contribution that is not excluded and which is also technical. A computer program implementing a business process is therefore not an invention, but a computer program implementing an industrial process may well be.

===India===

In India, a clause to include software patents was quashed by the Indian Parliament in April 2005.[tpl]cite web|author=Posted: Tuesday, Mar 29, 2005 at 0025 hrs IST |url=http://www.financialexpress.com/news/software-patents-under-ordinance-face-reversal/82155 |title=Software patents under Ordinance face reversal |publisher=Financialexpress.com |date=2005-03-29 |accessdate=2012-10-09[/tpl]

===Japan===

Software-related inventions are patentable. To qualify as an invention, however, there must be "a creation of technical ideas utilizing a law of nature"[tpl]cite web |url=http://www.jpo.go.jp/tetuzuki_e/t_tokkyo_e/Guidelines/2_1.pdf |title=Examination Guidelines for Patent and Utility Model in Japan (REQUIREMENTS FOR PATENTABILITY) |publisher=jpo.go.jp | pages= 1–3[/tpl] although this requirement is typically met by "concretely realising the information processing performed by the software by using hardware resources".[tpl]Citation | url = http://www.jpo.go.jp/tetuzuki_e/t_tokkyo_e/Guidelines/7_1.pdf | format = PDF | title = Examination Guidelines for Inventions for Specific Fields (Computer Software-Related Inventions) in Japan | publisher = Japanese Patent Office | date = April 2005 | page =10 (2.2.1)[/tpl] Software-related inventions may be considered obvious if they involve: the application of an operation known in other fields; the addition of a commonly known means or replacement by equivalent; the implementation in software of functions which were previously performed by hardware; or the systematisation of known human transactions.[tpl]citation | url = http://www.jpo.go.jp/tetuzuki_e/t_tokkyo_e/Guidelines/7_1.pdf | format = PDF | title = Examination Guidelines for Inventions for Specific Fields (Computer Software-Related Inventions) in Japan | publisher = Japanese Patent Office | date = April 2005|  pages = 16–17 ("Systematization of human transactions")[/tpl]
In 1999, the allowance rate for business method patents at the Japan Patent Office (JPO) reached an all-time high of roughly 35 percent. Subsequently, the JPO experienced a surge in business method patent filings. This surge was met with a dramatic decrease in the average grant rate of business method patents during the following six years; it lingered around 8 percent between 2003 and 2006 (8 percent is extremely low in comparison to the average of 50 percent across all technical fields). Since 2006, the average grant rate for business method patents has risen to the current rate of roughly 25 percent.[tpl]citation | url = http://www.worldipreview.com/article/an-important-market-software-patenting-in-japan | title = An important market: software patenting in Japan | publisher = World Intellectual Property Review | date = October 2012[/tpl]
In Japan, software patents have been successfully enforced. In 2005, for example, Matsushita won a court order barring Justsystem from infringing Matsushita's Japanese patent 2,803,236 covering word processing software. A Tokyo court ordered Justsystem to pull their product from the market. On September 30, 2005, Intellectual Property High Court of Japan, which was established in April 2005, granted Justsystems' appeal and overturned the Tokyo District Court decision in October 2005.[tpl]cite web| url= http://www.ip.courts.go.jp/eng/documents/pdf/g_panel/decision_summary2005ne10040.pdf |title=Decision Summary, 2005 (Ne) 10040 Appeal Case of Seeking Injunction against Patent Infringement |publisher=Intellectual Property High Court |accessdate=2009-01-08[/tpl]

===New Zealand===

In New Zealand computer programs are to be excluded from patentability under a 2010 Patents Bill, but guidelines permitting embedded software are to be drafted once the bill has passed.[tpl]cite web|url=http://www.beehive.govt.nz/release/minister+announces+way+forward+software+patents |title=Minister announces way forward for software patents |publisher=beehive.govt.nz |date=2010-07-15 |accessdate=2012-10-09[/tpl][tpl]cite news | title = New Zealand says no to software patents | date = 16 July 2010 | first = Sam |last = Varghese | newspaper = Government Tech Policy | url = http://www.itwire.com/it-policy-news/govenrment-tech-policy/40451-new-zealand-says-no-to-software-patents[/tpl][tpl]cite web|url=http://www.cpaglobal.com/newlegalreview/4617/south_pacific_cousins_part_way |title=South Pacific cousins part ways over patents |publisher=Cpaglobal.com |date=2010-07-28 |accessdate=2012-10-09[/tpl][tpl]cite web|url=http://www.tgdaily.com/business-and-law-features/50667-new-zealand-bans-software-patents |title=New Zealand bans software patents |publisher=TG Daily |date=2010-07-15 |accessdate=2012-10-09[/tpl][tpl]cite web|author=Fairfax Media Business Group |url=http://computerworld.co.nz/news.nsf/news/nzict-says-patents-integral-to-software-protection |title=NZICT says patents 'integral' to software protection | Computerworld New Zealand |publisher=Computerworld.co.nz |date=2010-04-15 |accessdate=2012-10-09[/tpl] From 2013 computer programs are excluded from patentability.[tpl]cite news |title=New Zealand bans software patents |author=Rob O’Neill |url=http://www.zdnet.com/new-zealand-bans-software-patents-7000019955/ |newspaper=ZDNet |date=August 28, 2013 |accessdate=September 6, 2013[/tpl]

===Philippines===

In the Philippines, "schemes, rules and methods of performing mental acts, playing games or doing business, and programs for computers" are non-patentable inventions under Sec. 22.2 of Republic Act No. 8293, otherwise known as the "Intellectual Property Code of the Philippines."

===South Africa===

In South Africa, "a program for a computer" is excluded from recognition as a patentable invention by section 25 of the Patents Act.[tpl]citation | url = http://www.cipc.co.za/Patents_files/Patent_Act.pdf |format = PDF | title = Patents Act, No. 57 of 1978, as amended | date = 26 April 1978[/tpl]

===South Korea===

In South Korea, software is considered patentable and many patents directed towards "computer programs" have been issued.[tpl]citation | publisher = European Patent Office | url = http://www.epo.org/patents/patent-information/east-asian/helpdesk/korea/faq.html#new2 | title = FAQ - Korea | accessdate = 29 October 2008[/tpl] In 2006, Microsoft's sales of its "Office" suite were jeopardized due to a possible patent infringement.[tpl]citation | first = Candace |last = Lombardi | url = http://news.cnet.com/8301-10784_3-6138379-7.html |title = Microsoft lost in translation | publisher = cnet.com | work = News Blog | date = November 27, 2006 | accessdate = October 29, 2008[/tpl] A ruling by the Supreme Court of Korea found that patents directed towards automatic language translation within software programs were valid and possibly violated by its software.

===United States===

The United States Patent and Trademark Office has granted patents that may be referred to as software patents since at least the early 1970s.[tpl]US patent|3552738[/tpl], [tpl]US patent|3553358[/tpl] and [tpl]US patent|3553384[/tpl] granted 5 January 1971, and [tpl]US patent|3996564[/tpl] granted December 7, 1976 can be easily found using the Bessen/Hunt technique. Earlier patents may exist but US patent database does not permit full text searching for earlier patents In Gottschalk v. Benson (1972), the United States Supreme Court ruled that a patent for a process should not be allowed if it would "wholly pre-empt the mathematical formula and in practical effect would be a patent on the algorithm itself", adding that "it is said that the decision precludes a patent for any program servicing a computer. We do not so hold."Gottschalk v Benson, [tpl]ussc|409|63|1972[/tpl] In 1981, the Supreme Court stated that "a claim drawn to subject matter otherwise statutory does not become nonstatutory simply because it uses a mathematical formula, computer program, or digital computer" and a claim is patentable if it contains "a mathematical formula and implements or applies the formula in a structure or process which, when considered as a whole, is performing a function which the patent laws were designed to protect".Diamond v. Diehr, [tpl]ussc|450|175|1981[/tpl]
Due to different treatment of federal patent rights in different parts of the country, in 1982 the U.S. Congress created a new court (the Federal Circuit) to hear patent cases. Following several landmark decisions by this court, by the early 1990s the patentability of software was well established, and in 1996 the USPTO issued Final Computer Related Examination Guidelines stating that "A practical application of a computer-related invention is statutory subject matter. This requirement can be discerned from the variously phrased prohibitions against the patenting of abstract ideas, laws of nature or natural phenomena" (emphasis added).[tpl]cite web|first=Daniel A. |last = Tysver |url=http://www.bitlaw.com/source/soft_pats/final.html |title=Final Computer Related Examination Guidelines |publisher=BitLaw |date= |accessdate=2012-10-09[/tpl]
The recent expansion of the Internet and e-commerce has led to many patents being applied for and being granted for business methods implemented in software and the question of whether business methods are statutory subject matter is a separate issue from the question of whether software is.  Critics of the Federal Circuit believe that the non-obviousness standard is partly responsible for the large increase in patents for software and business methods.Bessen, James, and Michael J. Meurer. Patent Failure: How Judges, Bureaucrats, and Lawyers Put Innovators at Risk. Princeton, NJ: Princeton University Press, 2008 There have been several successful enforcement trials in the USA, some of which are listed in the list of software patents article.
Several successful litigations show that software patents are enforceable in the US. See List of software patents for more examples.

==Purpose of patents==

For the U.S., the purpose of patents is laid down in the constitutional clause that gives Congress the power "to promote the progress of science and useful arts, by securing for limited times to authors and inventors the exclusive right to their respective writings and discoveries;" (Article I, Section 8, Clause 8). For Europe, there is no similar definition. Commonly four patent justification theories are recognised, as laid down for instance by Machlup in 1958,[tpl]cite web|url=http://www.mises.org/etexts/patentsystem.pdf |title=An Economic Review of the Patent System (1958) |format=PDF |date= |accessdate=2012-10-09[/tpl]  which include justice to the inventor and benefit for society by rewarding inventors. Disclosure is required in return for the exclusive right, and disclosure may promote further development. However, the value of disclosure should not be overestimated: some inventions could not be kept secret otherwise, and patents also prohibit independent reinventions to be exploited.
There is debate as to whether or not these aims are achieved with software patents.

==Proposals==

In seeking to find a balance, different countries have different policies as to where the boundary between patentable and non-patentable software should lie. In Europe, a number of different proposals for setting a boundary line were put forward during the debate concerning the proposed Directive on the patentability of computer-implemented inventions, none of which were found acceptable by the various parties to the debate. Two particular suggestions for a hurdle that software must pass to be patentable include:
In the US, Ben Klemens, a Guest Scholar at the Brookings Institution, proposed that patents should be granted only to inventions that include a physical component that is by itself nonobvious.[tpl]cite news | newspaper = Wall Street Journal | date = 25 March 2006 | page = A9 | url = http://online.wsj.com/article/SB114325217495908172.html| title = The Gravity of the U.S. Patent Swindle[/tpl] This is based on Justice William Rehnquist's ruling in the U.S. Supreme Court case of Diamond v. Diehr that stated that "... insignificant postsolution activity will not transform an unpatentable principle into a patentable process."[tpl]Citation needed|date=March 2012[/tpl] By this rule, one would consider software loaded onto a stock PC to be an abstract algorithm with obvious postsolution activity, while a new circuit design implementing the logic would likely be a nonobvious physical device. Upholding an "insignificant postsolution activity" rule as per Justice Rehnquist's ruling would also eliminate most business method patents.

==Obviousness==

A common objection to software patents is that they relate to trivial inventions.[tpl]Cite news| url=http://www.guardian.co.uk/technology/2005/jun/20/comment.comment | work=The Guardian | location=London | title=Patent absurdity | date=June 20, 2005 | accessdate=May 23, 2010 | first=Richard | last=Stallman[/tpl] A patent on an invention that many people would easily develop independently of one another should not, it is argued, be granted since this impedes development.
Different countries have different ways of dealing with the question of inventive step and non-obviousness in relation to software patents. Europe uses an 'Inventive step test'; see the Inventive step requirement in Europe and, for instance, T 258/03.

==Conflicts==

===Compatibility===

There are a number of high profile examples where the patenting of a data exchange standards forced another programming group to introduce an alternative format. For instance, the Portable Network Graphics (PNG) format was largely introduced to avoid the Graphics Interchange Format (GIF) patent problems, and Ogg Vorbis to avoid MP3. If it is discovered that these new suggested formats are themselves covered by existing patents, the final result may be a large number of incompatible formats. Creating such formats and supporting them costs money and creates inconvenience to users.

===Computer-implemented invention (CII)===

Under the EPC, and in particular its Article 52,[tpl]EPC Article|52[/tpl] "programs for computers" are not regarded as inventions for the purpose of granting European patents,[tpl]EPC Article|52|1[/tpl] but this exclusion from patentability only applies to the extent to which a European patent application or European patent relates to a computer program as such.[tpl]EPC Article|52|3[/tpl] As a result of this partial exclusion, and despite the fact that the EPO subjects patent applications in this field to a much stricter scrutiny[tpl]Cite thesis | url = http://www.miplc.de/research/master_theses/2004_2005/abstracts/abstract_laub.pdf | format = PDF | first = Christoph |last = Laub | title = International Software Patent Filing: The Problem of Statutory Subject Matter in view of Legal Standards at the EPO-USPTO and Economic Implications | year = Academic Year 2004/2005 | type = Master’s | publisher = Munich Intellectual Property Law Center (MIPLC) | accessdate = 21 March 2006[/tpl][tpl]dead link | date = November 2012[/tpl] when compared to their American counterpart, that does not mean that all inventions including some software are de jure not patentable.

===Overlap with copyright===

Protection by patent protection and copyright constitute two different means of legal protection which may cover the same subject-matter, such as computer programs, since each of these two means of protection serves its own purpose.[tpl]citation | work = Decision T 1173/97 (Computer program product/IBM) of 1.7.1998| publisher = European Patent Office, Boards of Appeal | date = 1 July 1998 | title = Reasons 2.4 | url = http://legal.european-patent-office.org/dg3/biblio/t971173ex1.htm[/tpl] Software is protected as works of literature under the Berne Convention. This allows the creator to prevent another entity from copying the program and there is generally no need to register code in order for it to be copyrighted.
Patents, on the other hand, give their owners the right to prevent others from using a claimed invention, even if it was independently developed and there was no copying involved. In fact, one of the most recent EPO decisions[tpl]citation | title = Decision T 0424/03 (Clipboard formats I/MICROSOFT) of 23.2.2006| publisher = European Patent Office, Boards of Appeal | date = 23 February 2006 | url = http://legal.european-patent-office.org/dg3/biblio/t030424eu1.htm[/tpl] clarifies the distinction, stating that software is patentable, because it is basically only a technical method executed on a computer, which is to be distinguished from the program itself for executing the method, the program being merely an expression of the method, and thus being copyrighted.
Patents cover the underlying methodologies embodied in a given piece of software, or the function that the software is intended to serve, independent of the particular language or code that the software is written in. Copyright prevents the direct copying of some or all of a particular version of a given piece of software, but does not prevent other authors from writing their own embodiments of the underlying methodologies. Copyright can also be used to prevent a given set of data from being copied while still allowing the author to keep the contents of said set of data a trade secret.[tpl]Citation needed|date=February 2011[/tpl]
Whether and how the numerus clausus principle shall apply to the legal hybrid software[tpl]cite journal | last = Burk | first = Dan L. | title = Copyrightable functions and patentable speech | magazine = Communications  | publisher = Association for Computing Machinery (ACM)|  volume =44 | issue= 2 | date =February 2001  | pages =69–75 | DOI =10.1145/359205.359231 | url = http://dl.acm.org/citation.cfm?id=359231[/tpl] to provide a judicious balance between property rights of the title holders and freedom rights of computing professionals[tpl]Cite journal|last=Kiesewetter-Köbinger |first=Swen |year=2010 |title=Programmers' Capital |journal=Computer |volume=43 |issue=2 |pages=108, 106–107 |doi=10.1109/MC.2010.47 [/tpl] and the society as a whole,[tpl]cite web| url= http://www.wipo.int/edocs/mdocs/patent_policy/en/scp_14/scp_14_7.pdf |title=Proposal from Brazil in respect of exceptions and limitations to patent rights |author=STANDING COMMITTEE ON THE LAW OF PATENTS | format = PDF |date=January 20, 2010 |publisher=WIPO |accessdate=4 February 2010[/tpl] is in dispute.[tpl]citation | format = PDF | url = http://ec.europa.eu/internal_market/indprop/docs/comp/replies/planck_en.pdf | title =Stellungnahme zum Sondierungspapier der Kommission der Europaischen Gemeinschaften: Die Patentierbarkeit Computer-implementierter Erfindungen | trans_title = Opinion on the consultation paper by the Commission of the European Communities: The patentability of computer-implemented inventions | author = Max-Planck-Institut | date = 20 December 2000[/tpl][tpl]cite book | url = http://www.buchhandel.de/WebApi1/GetMmo.asp?MmoId=4804929&mmoType=PDF | first = Marcus | last = Hoffmann |title = Mehrfachschutz geistigen Eigentums im deutschen Rechtssystem  | trans_title = Multiple protection of intellectual property in the German legal system | year =2008 | ISBN = 978-3-8316-0806-5[/tpl][tpl]cite book | first = Alexander | last = Peukert |title = Güterzuordnung als Rechtsprinzip | trans_title = Goods classification as a legal principle | year = 2008 | ISBN = 3-16-149724-4 | publisher = Mohr Siebeck[/tpl]

===Free and open source software===

There is strong dislike in the free software community towards software patents. Much of this has been caused by free software or open source projects terminating[tpl]cite web|url=http://www.gnu.org/patent-examp/patent-examples.html |title=Software patents that hurt free software |publisher=GNU.org |date= |accessdate=2012-10-09[/tpl] when the owners of patents covering aspects of a project demanded license fees that the project could not pay, or was not willing to pay, or offered licenses with terms that the project was unwilling to accept, or could not accept, because it conflicted with the free software license in use.[tpl]cite web | url = http://swpat.ffii.org/patents/effects | title = Effects | publisher = Patentability and Democracy in Europe[/tpl][tpl]dead link | date = November 2012[/tpl]
Several patent holders have offered royalty-free patent licenses for a very small portion of their patent portfolios.  Such actions have provoked only minor reaction from the free and open source software communities for reasons such as fear of the patent holder changing their mind or the license terms being so narrow as to have little use.  Companies that have done this include Apple Inc,[tpl]Citation needed|date=July 2010[/tpl] IBM,[tpl]cite web |url=http://www.unicode.org/notes/tn6/#Intellectual_Property |title=UTN #6: BOCU-1|date=2006-02-04 |author=Markus Scherer, Mark Davis |accessdate=2014-02-05[/tpl] Microsoft,[tpl]Cite web | url = http://www.microsoft.com/resources/sharedsource/silverlightcontrolslicense.mspx | title = Silverlight Controls License | publisher = Microsoft Corporation[/tpl] Nokia,[tpl]Citation needed|date=July 2010[/tpl] Novell,[tpl]cite web|url=http://www.novell.com/company/policies/patent/ |title=Patent Policy |publisher=Novell.com |date= |accessdate=2012-10-09[/tpl] Red Hat,[tpl]cite web |url=http://www.redhat.com/legal/patent_policy.html |publisher=redhat.com |title=Red Hat Patent Policy[/tpl] and Sun Microsystems.[tpl]cite web|url=http://java.sun.com/javase/6/jdk-6u2-license.txt |title=Oracle Technology Network for Java Developers |publisher=Java.sun.com |date= |accessdate=2012-10-09[/tpl]
In 2005 Sun Microsystems announced that they were making a portfolio of 1,600 patents available through a patent license called Common Development and Distribution License.[tpl]cite press release | url = http://www.sun.com/smi/Press/sunflash/2005-01/sunflash.20050125.2.xml | title = Sun Grants Global Open Source Community Access to More than 1,600 Patents | publisher = Sun Microsystems | date = January 25, 2005[/tpl][tpl]dead link|date=March 2012[/tpl]
In 2006, Microsoft's pledge not to sue Novell Linux customers, openSUSE contributors, and free/open source software developers over patents
and the associated collaboration agreement with Novell was met with disdain from the Software Freedom Law Center
while commentators from the Free Software Foundation stated that the agreement would not comply with GPLv3. Meanwhile, Microsoft has reached similar agreements with Dell, Inc. and Samsung,[tpl]cite web|author=Eric Lai, Sumner Lemon |url=http://www.computerworld.com/s/article/9019238/Update_Microsoft_wants_royalties_for_open_source_software |title=Update: Microsoft wants royalties for open-source software |publisher=Computerworld |date=2007-05-13 |accessdate=2012-10-09[/tpl] due to alleged patent infringements of the GNU/Linux operating system. Microsoft has also derived revenue from Android by making such agreements-not-to-sue with Android vendors.[tpl]cite web|url=http://www.microsoft.com/Presspass/press/2012/jan12/01-12LGPR.mspx |title=Microsoft and LG Sign Patent Agreement Covering Android and Chrome OS Based Devices |publisher=Microsoft.com |date=2012-01-12 |accessdate=2012-10-09[/tpl]

===Unisys case===

In the late 1990s, Unisys claimed to have granted royalty free licenses to hundreds of not-for-profit organizations that used the patented LZW compression method and, by extension, the GIF image format. However, this did not include most software developers and Unisys were "barraged" by negative and "sometimes obscene" emails from software developers.[tpl]cite web | url = http://slashdot.org/articles/99/08/31/0143246.shtml | title = Unisys Not Suing (most) Webmasters for Using GIFs | first = Robin ("Roblimo") | last = Miller | publisher = Slashdot |date =  August 31, 1999[/tpl]

===Licensing===

thumb|right|Total US software patents by class of invention as of 2004Patenting software is widespread in the US. As of 2004, approximately 145,000 patents had issued in the 22 classes of patents covering "computer implemented inventions". (see table to the right).
Many software companies cross license their patents to each other. These agreements allow each party to practice the other party's patented inventions without the threat of being sued for patent infringement. Microsoft, for example, has agreements with IBM, Sun Microsystems, SAP, Hewlett-Packard, Siemens AG, Cisco, Autodesk[tpl]cite web|url=http://www.arn.idg.com.au/index.php?taxid=620938001&id=63439861 |title=IDG News Service |publisher=Arn.idg.com.au |date=2004-12-17 |accessdate=2012-10-09[/tpl] and recently Novell. Microsoft cross-licensed its patents with Sun, despite being direct competitors, and with Autodesk even though Autodesk has far fewer patents than Microsoft.
The ability to negotiate cross licensing agreements is a major reason that many software companies, including those providing open source software, file patents. As of June 2006, for example, Red Hat has developed a portfolio of 10 issued US patents, 1 issued European patent, 163 pending US patent applications, and 33 pending international PCT (Patent Cooperation Treaty) patent applications. Red Hat uses this portfolio to cross license with proprietary software companies so that they can preserve their freedom to operate.
Other patent holders are in the business of inventing new "computer implemented inventions" and then commercializing the inventions by licensing the patents to other companies that manufacture the inventions. Walker Digital, for example, has generated a large patent portfolio from its research efforts, including the basic patent on the Priceline.com reverse auction technology. US universities also fall into this class of patent owners. They collectively generate about $1.4 billion per year through licensing the inventions they develop to both established and start up companies in all fields of technology, including software.[tpl]citation | url = http://www.autm.net/FY_2004_Licensing_Survey/8932.htm | title = FY 2004 U.S. Licensing Survey | publisher = Association of University Technology Managers |date=2012-09-08[/tpl]
Still other patent holders focus on obtaining patents from original inventors and licensing them to companies that have introduced commercial products into the marketplace after the patents were filed. Some of these patent holders, such as Intellectual Ventures, are privately held companies financed by large corporations such as Apple, Microsoft, Intel, Google, etc. Others, such as Acacia Technologies, are publicly traded companies with institutional investors being the primary shareholders.[tpl]Citation | url = http://premium.hoovers.com/subscribe/co/overview.xhtml?ID=fffrfkrhrrxhjcxxkh | title = Acacia Technologies LLC: Company Information| publisher = Hoovers, a D&B Company[/tpl]
The practice of acquiring patents merely to license them is controversial in the software industry. Companies that have this business model are pejoratively referred to as patent trolls. It is an integral part of the business model that patent licensing companies sue infringers that do not take a license. Furthermore, they may take advantage of the fact that many companies will pay a modest license fee (e.g.$100,000 to $1,000,000) for rights to a patent of questionable validity, rather than pay the high legal fees ($2,000,000 or more) to demonstrate in court that the patent is invalid.[tpl]Citation needed|reason=What are median license fees and litigation costs? Consider also the lower cost of ex parte and inter partes reexam.|date=November 2008[/tpl]

==See also==

==References==

==External links==

===Economic studies===

 | surname1=Bessen
 | surname2=Hunt
 | title=An Empirical Look at Software Patents
 | year=2004
 | url=http://www.researchoninnovation.org/swpat.pdf
}} This paper includes a method of identifying software patents that has proved popular with organisations such as the Public Patent Foundation

===Books===

===Papers and presentations===


