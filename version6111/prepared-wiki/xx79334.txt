. Previous publisher McGraw-Hill, New York, NY.</ref> [[James Massey]] recognized its application to linear feedback shift registers and simplified the algorithm.<ref>
</ref><ref>
</ref> Massey termed the algorithm the LFSR Synthesis Algorithm (Berlekamp Iterative Algorithm),<ref>[tpl]Harvnb|Massey|1969|p=124[/tpl]</ref> but it is now known as the Berlekamp–Massey algorithm.

==Description of algorithm==

Berlekamp–Massey algorithm is an alternate method to solve the set of linear equations described in Reed–Solomon Peterson decoder, which can be summarized as:
In the code examples below, C(x) is a potential instance of Λ(x). The error locator polynomial C(x) for L errors is defined as:
or reversed:
The goal of the algorithm is to determine the minimal degree L and C(x) which results in:
for all syndromes, n = L to (N-1).
Algorithm:
C(x) is initialized to 1, L is the current number of assumed errors, and initialized to zero. N is the total number of syndromes. n is used as the main iterator and to index the syndromes from 0 to (N-1). B(x) is a copy of the last C(x) since L was updated and initialized to 1. b is a copy of the last discrepancy d (explained below) since L was updated and initialized to 1. m is the number of iterations since L, B(x), and b were updated and initialized to 1. 
Each iteration of the algorithm calculates a discrepancy d. At iteration k this would be:
If d is zero, the algorithm assumes that C(x) and L are correct for the moment, increments m, and continues.
If d is not zero, the algorithm adjusts C(x) so that a recalculation of d would be zero:
The xm term shifts B(x) so it follows the syndromes corresponding to 'b'. If the previous update of L occurred on iteration j, then m = k - j, and a recalculated discrepancy would be:
This would change a recalculated discrepancy to:
The algorithm also needs to increase L (number of errors) as needed. If L equals the actual number of errors, then during the iteration process, the discrepancies will become zero before n becomes greater than or equal to (2 L). Otherwise L is updated and algorithm will update B(x), b, increase L, and reset m = 1. The L = (n + 1 - L) formula limits L to the number of available syndromes used to calculate discrepancies, and also handles the case where L increases by more than 1.

==The algorithm for the binary field==

The following is the Berlekamp–Massey algorithm specialized for the typical binary finite field F2 and GF(2).  The field elements are 0 and 1.  The field operations + and − are identical and become the exclusive or operation, XOR. The multiplication operator * becomes the logical AND operation. The division operator reduces to the identity operation (i.e., field division is only defined for dividing by 1, and x/1 = x).

==Code sample for the binary field in Java==

The following code sample is for a binary field.

==Berlekamp–Massey algorithm for fields==

The algorithm from [tpl]Harvtxt|Massey|1969|p=124[/tpl].

==See also==

==References==

==External links==


