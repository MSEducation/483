[[Vorbis]]

CATEGORIES: Free audio codecs, Lossy compression algorithms, Xiph.Org projects

[tpl]About|the audio compression codec|the Discworld character|Religions of the Discworld#Vorbis[tpl]![/tpl]Religions of the Discworld[/tpl]

Vorbis is a free and open-source software project headed by the Xiph.Org Foundation (formerly Xiphophorus company). The project produces an audio format specification and software implementation (codec) for lossy audio compression. Vorbis is most commonly used in conjunction with the Ogg container format[tpl]cite web | url = http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions | work =Xiph.org wiki | title = MIME Types and File Extensions |accessdate=2007-10-13[/tpl] and it is therefore often referred to as Ogg Vorbis.
Vorbis is a continuation of audio compression development started in 1993 by Chris Montgomery.[tpl]cite web |url= http://www.advogato.org/article/56.html | title= Interview: Christopher Montgomery of Xiphophorus | publisher=Advogado |date=2000-04-04 |accessdate= 2009-09-02[/tpl][tpl]cite web | url=http://xiph.org/xiphname|title= naming| publisher =Xiph.Org Foundation[/tpl] Intensive development began following a September 1998 letter from the Fraunhofer Society announcing plans to charge licensing fees for the MP3 audio format.[tpl]cite web| publisher = Xiph.org |url = http://www.xiph.org/about/ | title = About |accessdate= 2009-08-31[/tpl][tpl]cite web | first = Michael | last = Robertson | url = http://www.mp3.com/news/095.html | title= Fraunhofer Lowers Patent Boom on MP3 Software Developers | date = 1998-09-11 |accessdate=2009-08-31 |archiveurl= http://web.archive.org/web/20000816002547/http://www.mp3.com/news/095.html | archivedate = 2000-08-16[/tpl] Vorbis project started as part of the Xiphophorus company's Ogg project (also known as OggSquish multimedia project).[tpl]cite web |url = http://lists.xiph.org/pipermail/vorbis/2000-April/012573.html | work = vorbis | title = Dvorak Interviews Monty | first =Brian | last = Zisk |publisher= Xiph |date=2000-04-19|accessdate=2008-09-04[/tpl][tpl]cite web |url=http://xiph.org/ogg/ |title= Ogg | type = project homepage | publisher = Xiphophorus |date= 2000-05-20 |accessdate= 2008-09-02 |archiveurl= http://web.archive.org/web/20000520212458/http://xiph.org/ogg/ |archivedate= 2000-05-20[/tpl] Chris Montgomery began work on the project and was assisted by a growing number of other developers. They continued refining the source code until the Vorbis file format was frozen for 1.0 in May 2000[tpl]cite web | first = Christopher | last = Montgomery | url= http://lists.xiph.org/pipermail/vorbis-dev/2000-May/000201.html |date= 2000-05-08 | work = vorbis-dev | title = Merge done | accessdate = 2009-09-03[/tpl][tpl]cite web | publisher =Xiph.Org Foundation |url= http://www.xiph.org/vorbis/ | title= Ogg Vorbis | accessdate = 2009-09-11[/tpl][tpl]cite web | publisher =Xiphophorus co |url= http://www.xiph.org/ogg/vorbis/ |date=2000-05-11 |title=The Ogg Vorbis CODEC project |accessdate=2009-09-03 |archiveurl = http://web.archive.org/web/20000610211737/http://www.xiph.org/ogg/vorbis/ |archivedate = 2000-06-10[/tpl] and a stable version (1.0) of the reference software was released on July 19, 2002.[tpl]cite web| publisher = AfterDawn |url=http://www.afterdawn.com/news/archive/3149.cfm |title=OGG Vorbis 1.0 officially released|date = 2002-07-19 |accessdate=2009-06-04[/tpl][tpl]cite web| publisher =CNET | work = News |url = http://news.cnet.com/2100-1023-945228.html |title=Ogg Vorbis official release is here|date= 2002-07-19 | accessdate =2009-06-04[/tpl][tpl]cite mailing list|last=Montgomery |first=Christopher |authorlink= Chris Montgomery |mailinglist=vorbis |url=http://lists.xiph.org/pipermail/vorbis/2002-July/008330.html |title= Vorbis 1.0 released |date=2002-07-19 |accessdate= 2009-06-04[/tpl]
The Xiph.Org Foundation maintains a reference implementation, libvorbis.[tpl]cite web|author=Xiph.Org |url=http://www.xiph.org/press/2014/libvorbis-1.3.4/ |title=libVorbis 1.3.4 released|date=2014-01-22|accessdate=2014-02-09[/tpl] There are also some fine-tuned forks, most notably aoTuV, that offer better audio quality, particularly at low bitrates. These improvements are periodically merged back into the reference codebase.

==Name==

"Vorbis" is named after a Discworld character, Exquisitor Vorbis in Small Gods by Terry Pratchett. The Ogg format, however, is not named after Nanny Ogg, another Discworld character; the name is in fact derived from ogging, jargon that arose in the computer game Netrek.

==Usage==

The Vorbis format has proven popular among supporters of free software.[tpl]cite web |url = http://www.gnu.org/philosophy/audio/audio.html |title=Recordings about our Philosophy | work = GNU Project | publisher = Free Software Foundation (FSF) |accessdate=2008-01-12 |archiveurl = http://web.archive.org/web/20071126020329/http://www.gnu.org/philosophy/audio/audio.html |archivedate = 2007-11-26[/tpl] They argue that its higher fidelity and completely free nature, unencumbered by patents, make it a well-suited replacement for patented and restricted formats like MP3.
Vorbis has different uses for consumer products. Many video game titles store in-game audio as Vorbis, examples include 18 Wheels of Steel, Bookworm Adventures, Halo: Combat Evolved, Minecraft, Unreal Tournament 2004, Unreal Tournament 3, Mafia: The City of Lost Heaven, Jets 'n' guns, Grand Theft Auto: San Andreas, Crimsonland, Devil May Cry 3, Live For Speed, Guitar Hero: On Tour, Eve Online, World of Warcraft and Amnesia: The Dark Descent. Popular software players support Vorbis playback either natively or through an external plugin. A number of Web sites, including Wikipedia, use it.[tpl]cite web |url=http://www.fsf.org/resources/formats/playogg/sites |title=Ogg Sites | publisher =Free Software Foundation |accessdate=2009-10-02[/tpl][tpl]cite web |url = http://wikip.blogspot.com/2007/04/ogg-vorbis-no-future.html |title=Ogg Vorbis — no future? |date= 2007-11-04 | accessdate =2009-10-02[/tpl]Wikipedia:WikiProject Spoken Wikipedia, Retrieved 2009[tpl]cite web |url=http://commons.wikimedia.org/wiki/Commons:First_steps/Quality_and_description#Audio_and_video | work = Wikimedia Commons | title = First steps/Quality and description |accessdate=2009-10-02[/tpl] Others include Jamendo and Mindawn, as well as several national radio stations like JazzRadio, Absolute Radio, NPR, Radio New Zealand[tpl]cite web|url=http://www.radionz.co.nz/oggcasts |title=Radio New Zealand Oggcasts |accessdate=2009-01-14[/tpl] and Deutschlandradio.[tpl]cite web|url=http://www.dradio.de/wir/ogg/|title=Deutschlandradio im Internet mit OGG-Vorbis-Stream|accessdate=2009-10-08[/tpl] The Spotify audio streaming service uses Vorbis for its audio streams.[tpl]cite web|url=http://www.spotify.com/en/help/faq/|title=Spotify FAQ|accessdate=2009-03-16[/tpl] Also, the French music site Qobuz offers its customers the possibility to download their purchased songs in Vorbis format.[tpl]cite web|url=http://www.qobuz.com/aide/guide-qobuz?qref=cpa#format-choice|title=Qobuz FAQ|accessdate=2013-04-15[/tpl]

==Quality==

Vorbis had been shown to perform significantly better than many other lossy audio formats in the past in that it produced smaller files at equivalent or higher quality while retaining computational complexity comparable to other MDCT formats such as AAC or Windows Media Audio.[tpl]cite web|url=http://www.bbc.co.uk/dna/h2g2/A6556511|title=Ogg Vorbis - Better Than Mp3?, 2005|author=MedO|authorlink=h2g2[/tpl][tpl]cite web|url=http://web.archive.org/web/20120729153500/http://www.eskimo.com/~nanook/knowledge/oggvorbis.html|title=Ogg Vorbis - An Alternative to MP3, 2004|author=Nanook[/tpl] However, [tpl]As of|2014|lc=on[/tpl], not many further significant tests had been made.
Listening tests have attempted to find the best quality lossy audio codecs at certain bitrates. Some conclusions made by listening tests:
Due to the ever-evolving nature of audio codecs, the results of many of these tests have become outdated.

===Listening tests===

Listening tests are normally carried out as ABX tests, i.e., the listener has to identify an unknown sample X as being A or B, with A (the original) and B (the encoded version) available for reference. The outcome of a test must be statistically significant. This setup ensures that the listener is not biased by his/her expectations, and that the outcome is very unlikely to be the result of chance. If sample X can be identified reliably, the listener can assign a score as a subjective judgment of the quality. Otherwise, the encoded version is considered to be transparent. Below are links to several listening test results.

===Characteristic artifacts===

As with most modern formats, the most consistently cited problem with Vorbis is pre-echo, a faint copy of a sharp attack that occurs just before the actual sound (this artifact is most obvious when reproducing the sound of castanets).
When the bitrate is too low to encode the audio without perceptible loss, Vorbis exhibits an analog noise-like failure mode, which can be described as reverberations in a room or amphitheater. Vorbis's behavior is due to the noise floor approach to encoding; see technical details.

==Battery life==

Ogg Vorbis decoding requires significantly more battery power than for MP3 files. This reduces playing time per battery charge on battery-powered devices. The actual reduction will depend on the hardware and firmware; a typical report is that battery duration with Ogg Vorbis files was about half that for MP3s.Cowon iAudio MP3 player site: Ogg Vorbis battery life test results, 2005

==Technical details==

Vorbis is intended for sample rates from 8 kHz telephony to 192 kHz digital masters and a range of channel representations (monaural, polyphonic, stereo, quadraphonic, 5.1, ambisonic, or up to 255 discrete channels).[tpl]cite web |author=Xiph.org Foundation |publisher=Xiph.org Foundation |url= http://www.xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-40001.1.1 | work =Vorbis I specification | title = Application |date=2009-06-02 |accessdate=2009-09-11[/tpl] Given 44.1 kHz (standard CD audio sampling frequency) stereo input, the encoder will produce output from roughly 45 to 500 kbit/s (32 to 500 kbit/s for aoTuV tunings) depending on the specified quality setting. Quality setting goes from −0.1 to 1.0 for the Xiph library and −0.2 to 1.0 for aoTuV. Encoding front-ends map these values to an integer-based quality setting that goes from −1 to 10 for the Xiph library and −2 to 10 for aoTuV. Files encoded with a given quality setting should have the same quality of sound in all versions of the encoder, but newer versions should be able to achieve that quality with a lower bitrate. The bit rates mentioned above are only approximate; Vorbis is inherently variable-bitrate (VBR), so bitrate may vary considerably from sample to sample. (It is a free-form variable-bitrate codec and packets have no minimum size, maximum size, or fixed/expected size.[tpl]cite web | last = | first = | author=Xiph.Org Foundation | authorlink= | title = Vorbis I specification | url = http://www.xiph.org/vorbis/doc/Vorbis_I_spec.html | date=2012-01-20 | accessdate=2012-01-31 | publisher=Xiph.Org Foundation[/tpl])
Vorbis aims to be more efficient than MP3, with data compression transparency being available at lower bitrates.

===Outline of coder algorithm===

Vorbis I is a forward-adaptive monolithic transform codec based on the modified discrete cosine transform (MDCT).[tpl]cite web |author=Xiph.Org Foundation |publisher=Xiph.Org Foundation |url=http://www.xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-50001.1.2 |title=Vorbis I specification - 1.1.2 Classification |date=2009-06-02 |accessdate=2009-09-22[/tpl] Vorbis uses the modified discrete cosine transform for converting sound data from the time domain to the frequency domain. The resulting frequency-domain data is broken into noise floor and residue components, and then quantized and entropy coded using a codebook-based vector quantization algorithm. The decompression algorithm reverses these stages. The noise floor approach gives Vorbis its characteristic analog noise-like failure mode when the bitrate is too low to encode the audio without perceptible loss. The sound of compression artifacts at low bitrates can be perhaps described as reverberations in an amphitheater or a room.

===Tuned versions===

Various tuned versions of the encoder (Garf, aoTuV or MegaMix) attempt to provide better sound at a specified quality setting, usually by dealing with certain problematic waveforms by temporarily increasing the bitrate. Most of the tuned versions of Vorbis attempt to fix the pre-echo problem and to increase the sound quality of lower quality settings (-q-2 through -q4). Some tuning suggestions created by the Vorbis user community (especially the aoTuV beta 2 tunings) have been incorporated into the 1.1.0 release.[tpl]cite web |url=http://www.hydrogenaudio.org/forums/index.php?showtopic=15049&st=0 |title=Recommended Encoder Versions and Settings - Hydrogenaudio Forums |accessdate=2008-01-13[/tpl]

===Bitrate peeling===

The Vorbis format supports bitrate peeling for reducing the bitrate of already encoded files without re-encoding, and several experimental implementations exist.Experimental Ogg vorbis Bitrate Peeler, Bitrate reduction of ogg vorbis[tpl]cite web | url=http://www.vinjey.com/ogg_downloads.html | title=Vorbis & Downloads | accessdate = 2006-11-13 | author=Vinjey[/tpl] However, the quality is "unusable", and markedly inferior to decoding and re-encoding.
The reason that peeling programs degrade quality so severely is that the format does not specify the relative importance of signal data, nor do existing encoders order the data in order of importance, hence peelers cannot easily determine if data is important or not.

===Container formats===

Vorbis streams can be encapsulated in other media container formats besides Ogg.[tpl]cite web|url=http://wiki.xiph.org/index.php/Oggless|title=Oggless proposal| publisher = Xiph.Org Foundation[/tpl] A commonly used alternative is Matroska. It is also used in WebM, a container format based on a subset of Matroska.[tpl]cite web | url = http://www.xiph.org/press/2010/webm/ | title=Xiph.Org announces support for the WebM open media project| publisher = Xiph.Org | accessdate = 2010-05-20 |date=2010-05-19[/tpl][tpl]cite web |url = http://webmproject.blogspot.com/2010/05/introducing-webm-open-web-media-project.html |title= Introducing WebM, an open web media project |accessdate=2010-05-19 |date=2010-05-19[/tpl][tpl]cite web|url = http://www.webmproject.org/about/faq/ | work = WebM | title = FAQ | publisher = Google | date = 2010-05-19[/tpl] Vorbis streams can also be encapsulated in an RTP payload format.[tpl]cite web |url=http://tools.ietf.org/html/rfc5215 | title= RFC 5215 — RTP Payload Format for Vorbis Encoded Audio |date=August 2008 |accessdate=2010-06-16 | publisher = IETF[/tpl]

===Metadata===

Vorbis metadata, called Vorbis comments, supports metadata tags similar to those implemented in the ID3 standard for MP3. The metadata is stored in a vector of eight-bit-clean strings of arbitrary length and size. The size of the vector and the size of each string in bytes is limited to 232-1 (about 4.3 billion, or any positive integer that can be expressed in 32 bits). This vector is stored in the second header packet that begins a Vorbis bitstream.[tpl]cite web | url=http://www.xiph.org/vorbis/doc/v-comment.html | title=Vorbis Comment Field Documentation | accessdate=2007-03-14 | author=Xiph.Org Foundation[/tpl]
The strings are assumed to be encoded as UTF-8. Music tags are typically implemented as strings of the form "TAG=VALUE", for instance, "ARTIST=The John Smith Band". The tags are case-insensitive, thus typing "ARTIST=The John Smith Band" would be the same as "artist=The John Smith Band". Like the current version of ID3, users and encoding software are free to use whichever tags are appropriate for the content. For example, an encoder could use localized tag labels, live music tracks might contain a "Venue=" tag or files could have multiple genre definitions. Most applications also support common de facto standards such as discnumber and ReplayGain information.

==Licensing==

Knowledge of Vorbis' specifications is in the public domain.[tpl]cite web | publisher = Xiph.Org Foundation | title = Vorbis.com FAQ | url = http://www.vorbis.com/faq/#flic | accessdate = 2009-08-29[/tpl] Concerning the specification itself, the Xiph.Org Foundation reserves the right to set the Vorbis specification and certify compliance. Its libraries are released under the revised 3-clause BSD license and its tools are released under the GNU General Public License. The libraries were originally released under the GNU Lesser General Public Licence, but a BSD license was later chosen with the endorsement of Richard Stallman.[tpl]cite web | url=http://lists.xiph.org/pipermail/icecast-dev/2001-February/000005.html | title=icecast-dev Xiph.org announces Vorbis Beta 4 and the Xiph.org Foundation | accessdate=2006-11-13 | author=Jack Moffitt |date=2001-02-26[/tpl] The Xiph.Org Foundation states that Vorbis, like all its developments, is completely free from the licensing or patent issues raised by other proprietary formats such as MP3. Although the Xiph.Org Foundation states it has conducted a patent search that supports its claims, outside parties (notably engineers working on rival formats) have expressed doubt that Vorbis is free of patented technology.[tpl]cite web | url=http://www.hydrogenaudio.org/forums/index.php?showtopic=13531 | title=Vorbis development, status & patent issues | year=2003 | accessdate=2006-11-13[/tpl]
The Xiph.Org Foundation has not released an official statement on the patent status of Vorbis, pointing out that such a statement is technically impossible due to the number and scope of patents in existence and the questionable validity of many of them. Such issues cannot be resolved outside of a court of law.
Vorbis is supported by several large digital audio player manufacturers such as Samsung, SanDisk, Rio, Neuros Technology, Cowon, and iriver.

==Support==

===Hardware===

Tremor, a version of the Vorbis decoder which uses fixed-point arithmetic (rather than floating point), was made available to the public on September 2, 2002 (also under a BSD-style license).[tpl]cite web|url=http://lists.xiph.org/pipermail/vorbis-dev/2002-September/006399.html|title=vorbis-dev tremor relicensed as BSD|date=2002-09-03|accessdate=2008-03-15[/tpl] Tremor, or platform specific versions based on it, is more suited to implementation on the limited facilities available in commercial portable players. A number of versions that make adjustments for specific platforms and include customized optimizations for given embedded microprocessors have been produced. Several hardware manufacturers have expressed[tpl]Citation needed|date=January 2008[/tpl] intentions to produce Vorbis-compliant devices and new Vorbis devices seem to be appearing at a steady rate.[tpl]Citation needed|date=April 2009[/tpl]
Apple's iPod does not natively support Vorbis but through the use of Rockbox, an open-source firmware project, is capable of decoding Vorbis files on certain models. Similar statements apply to other devices capable of running Rockbox, as well. The Xiph.Org Foundation wiki has an up-to-date list of Vorbis-supporting hardware, such as portables, PDAs, and microchips.[tpl]cite web |url=http://wiki.xiph.org/VorbisHardware |title=VorbisHardware - XiphWiki |accessdate=2008-01-13 |work=Xiph.Org Foundation[/tpl] Also see Internet radio device for an overview.

===Application software===

Software supporting Vorbis exists for many platforms. The multi-platform open-source VLC media player and MPlayer can play Ogg Vorbis files, as can Winamp and foobar2000. Although Apple iTunes does not natively support Vorbis, the Xiph.Org Foundation provides a QuickTime component[tpl]cite web |url=http://www.xiph.org/quicktime/ |title=Xiph.Org: QuickTime Components |accessdate=2008-01-13[/tpl] which can be used in iTunes and QuickTime on both Microsoft Windows and Mac OS (only before OS X 10.9's switch of Quicktime to 64-bit only). Windows Media Player also does not natively support Vorbis; however, DirectShow filters exist[tpl]cite web |url=http://www.xiph.org/dshow/ |title=illiminable Ogg Directshow Filters for Speex, Vorbis, Theora and FLAC |accessdate=2008-06-24[/tpl] to decode Vorbis in Windows Media Player and other Windows multimedia players that support DirectShow. Vorbis is also supported in the multi-platform audio editing software Audacity, in the multi-platform multimedia frameworks FFmpeg, GStreamer and Helix DNA. Vorbis is well-supported on the Linux platform in programs like XMMS, xine, Amarok and many more. A list of Vorbis-supporting software can be found at the Xiph.Org Foundation wiki and Vorbis.com website.[tpl]cite web |url=http://wiki.xiph.org/index.php/VorbisSoftwarePlayers |title=VorbisSoftwarePlayers - XiphWiki |accessdate=2008-01-13 |work=Xiph.Org Foundation[/tpl][tpl]cite web |url=http://www.vorbis.com/software/ |title=Vorbis.com: 3rd party software |accessdate=2009-10-12 |author=Xiph.Org Foundation[/tpl] For more information about support in software media players look at comparison of media players. Users can test these programs using the list of Vorbis audio streams available on the same wiki.[tpl]cite web |url=http://wiki.xiph.org/index.php/VorbisStreams |title=VorbisStreams - XiphWiki |accessdate=2008-01-13 |work=Xiph.Org Foundation[/tpl]
[tpl]anchor|sb0[/tpl] Some newer Ubisoft games use Vorbis files renamed with the filename extension .sb0. It can therefore be played using a compatible player, although sometimes one must force a different sampling rate to hear it correctly. A number of tools are available for extracting sound from archived files such as the .m4b of Myst IV: Revelation.
As originally recommended by HTML 5, these web browsers natively support Vorbis audio (without a plug-in) using the  element: Mozilla Firefox 3.5 (and later versions),[tpl]citation | title = Firefox3.5/Features | date = 2009-03-18 | author = MozillaWiki | publisher = MozillaWiki | url = https://wiki.mozilla.org/Firefox3.5/Features | accessdate = 2009-10-11[/tpl][tpl]citation | title = Mozilla Firefox 3.5 Release Notes | date = 2009-06-30 | author = Mozilla Corporation | publisher = Mozilla Corporation | url = http://www.mozilla.com/en-US/firefox/3.5/releasenotes/ | accessdate = 2009-10-11[/tpl] Google Chrome (as of version 3.0.182.2),[tpl]citation | title = Google Chrome to support HTML 5 video | date = 2009-05-28 | author =  | publisher = SoftSailor | url = http://www.softsailor.com/news/3787-3787.html | accessdate = 2009-10-11[/tpl] SeaMonkey (as of version 2.0).[tpl]citation | title = What's New in SeaMonkey 2.0 Beta 2 | date = 2009-09-16 | author = Robert Kaiser | publisher = seamonkey-project.org | url = http://www.seamonkey-project.org/releases/seamonkey2.0b2/changes | accessdate = 2009-10-11[/tpl] Opera 9.5 experimental video builds released in 2007 and 2008 have only  support and play back Vorbis audio included in Ogg video files.[tpl]citation | title = Experimental Opera-video build with native Ogg Theora support | date = 2007-04-25 | author = | publisher = Opera | url = http://my.opera.com/ResearchWizard/blog/experimental-opera-video-build-with-native-ogg-theora-support | accessdate = 2009-10-11[/tpl][tpl]citation | title = A call for video on the web - Opera  release on Labs | date = 2007-11-07 | author = | publisher = Opera | url = http://dev.opera.com/articles/view/a-call-for-video-on-the-web-opera-vid/ | accessdate = 2009-10-11[/tpl] Opera 10.5 browser has support for Vorbis audio, WAVE PCM audio and Theora video.[tpl]cite web |url=http://my.opera.com/core/blog/2009/12/31/re-introducing-video |title=(re-)Introducing  - Official blog for Core developers at Opera |author=Philip Jägenstedt |publisher=Opera |date=2009-12-31 |accessdate=2010-01-02[/tpl][tpl]cite web |url=http://my.opera.com/desktopteam/blog/happy-new-year |title=Happy New Year! - Official blog for Core developers at Opera |author=Arjan van Leeuwen |publisher=Opera |date=2009-12-31 |accessdate=2010-01-02[/tpl]

==Other implementations==

The Xiph.Org Foundation's reference implementation is free and open sourced and it is dual-licensed under the BSD License and the GNU Lesser General Public License (LGPL).
There are no restriction to other developers for writing compliant encoders and decoders.

===aoTuV===

aoTuV is a modified version of the reference encoder created by a Japanese developer named Aoyumi (aoTuV stands for Aoyumi Tuned Vorbis), which improves its quality, especially at lower bitrates. Initially built upon Vorbis 1.0, the improvements of aoTuV Beta2 were merged back into Vorbis 1.1. Further improvements were released, the current Beta 6.03 version (released on April 25, 2011)[tpl]Update after|2011|05|14[/tpl] is an improvement of libvorbis 1.3.2.aoTuV aoTuV official page

===Lancer===

Lancer is a modified version of aoTuV which keeps the quality of aoTuV and significantly improves its encoding speed, using architecture-specific SIMD instructions instead of floating-point instructions. The last version is based on aoTuV Beta 5 (released on November 11, 2006).

===Tremor===

Tremor is an implementation of a Vorbis decoder using fixed-point arithmetic. It is intended for environments when a floating-point arithmetic unit is unavailable. The Xiph.Org Foundation has expressed interest in modifying Tremor into a floating-point version, which would replace the current floating-point reference decoder.[tpl]cite web|url=http://xiph.org/minutes/2006/10/200610_meeting.txt|title=Xiph.Org Monthly Meeting log for October 2006[/tpl]

===FFmpeg===

The libavcodec library contains an LGPL-licensed Vorbis decoder that is faster than the reference implementation and an experimental Vorbis encoder. It is also able to use libvorbis for both encoding and decoding, using libvorbis instead of the native encoder is recommended.[tpl]cite web | url=http://lists.mplayerhq.hu/pipermail/mplayer-dev-eng/2006-August/044907.html | title=mailing list thread comparing Vorbis decoding performance | accessdate=2007-08-17[/tpl]

===stb_vorbis===

stb_vorbis is a C implementation of an Ogg Vorbis decoder placed in the public domain. It lacks some minor features present in the reference implementation (notably seeking), but it claims to be fully compliant with the format specification.
[tpl]cite web | url=http://nothings.org/stb_vorbis | author=stb_vorbis home page | title=public domain Ogg Vorbis decoder | accessdate=2009-08-11[/tpl]

==See also==

==References==

==External links==


