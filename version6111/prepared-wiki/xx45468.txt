[[Backslash]]

CATEGORIES: Punctuation, Typographical symbols

The backslash (\) is a typographical mark (glyph) used mainly in computing and is the mirror image of the common slash (/). It is sometimes called a hack, whack, escape (from C/UNIX), reverse slash, slosh, backslant, downhill, backwhack, and in rare occasions, bash, reverse slant, and reversed virgule.Macquarie Dictionary (3rd edition)[tpl]cite web | url=http://www.catb.org/jargon/html/A/ASCII.html | title=ASCII | last=Raymond | first=Eric S[/tpl] In Unicode, it is encoded at [tpl]unichar|005C|REVERSE SOLIDUS|html=[/tpl].

==History==

Bob Bemer introduced the "\" character into ASCII[tpl]cite web|url=http://www.thocp.net/biographies/bemer_bob.htm |title=Mini-Biography of Bob Bemer |publisher=Thocp.net |accessdate=2013-06-16[/tpl] on September 18, 1961, as the result of character frequency studies.  In particular the \ was introduced so that the ALGOL boolean operators ∧ (AND) and ∨ (OR) could be composed in ASCII as "/\" and "\/" respectively."How ASCII Got Its Backslash", Bob Bemer[tpl]cite web |author=Bob Bemer |title=The Great Curly Brace Trace Chase |url=http://home.ccil.org/~remlaps/www.bobbemer.com/BRACES.HTM |work=Computer History Vignettes |publisher=Bob Bemer |date=2002-07-07 |accessdate=2009-10-11[/tpl] Both these operators were included in early versions of the C programming language supplied with Unix V6, Unix V7  and more currently BSD 2.11.

==Usage==

In many programming languages such as C, Perl, and PHP and in Unix scripting languages, the backslash is used to indicate that the character following it should be treated specially (if it would otherwise be treated normally), or normally (if it would otherwise be treated specially). It is thus an escape character. In various regular expression languages it acts as a switch, changing subsequent literal characters into metacharacters and vice versa.  The backslash is used similarly in the TeX typesetting system and in RTF files to begin markup tags.  In Haskell, the backslash is used both to introduce special characters and to introduce lambda functions (since it is a reasonable approximation in ASCII of the Greek letter lambda, λ).O'Sullivan, Stewart, and Goerzen,  Real World Haskell, ch. 4: anonymous (lambda) functions, p.99 
In the context of line-oriented text, especially source code for some programming languages, it is often used at the end of a line to indicate that the trailing newline character should be ignored, so that the following line is treated as if it were part of the current line. In this context it may be called a "continuation". The GNU make manual says, "We split each long line into two lines using backslash-newline; this is like using one long line, but is easier to read."[tpl]cite web|url=http://www.gnu.org/software/make/manual/make.html |title=GNU 'make' manual |publisher=Gnu.org |accessdate=2013-06-16[/tpl]
MS-DOS 2.0, released 1983, copied the hierarchical file system from Unix and thus used the (forward) slash, but (possibly on the insistence of IBM) added the backslash to allow paths to be typed at the command line interpreter's prompt while retaining compatibility with MS-DOS 1.0 and CP/M where the slash was the command-line option indicator (i.e. as in typing "DIR/W" to give the "wide" option to the "DIR" command).[tpl]cite web|url=http://blogs.msdn.com/larryosterman/archive/2005/06/24/432386.aspx |title=Why is the DOS path character "\"? |publisher=Blogs.msdn.com |date=2005-06-24 |accessdate=2013-06-16[/tpl] Except for COMMAND.COM, all other parts of the operating system accept both characters in a path, but the Microsoft convention remains to use a backslash, and APIs that return paths use backslashes as well. This holds true for MS-DOS and PC DOS, but also all other DOS operating systems like DR-DOS, PTS-DOS, RxDOS or FreeDOS as well as to Concurrent DOS, Multiuser DOS, FlexOS, 4680 OS, 4690 OS, OS/2 and Windows. In some versions of DOS, the option character can be changed from / to - via SWITCHAR, which also makes COMMAND.COM accept / as alternative path delimiter.
The Microsoft Windows family of operating systems inherited the MS-DOS behavior and so still support either character - but individual Windows programs and sub-systems may, wrongly, only accept the backslash as a path delimiter, or may misinterpret a forward slash if it is used as such. Some programs will only accept forward slashes if the path is placed in double-quotes. The failure of Microsoft's security features to recognize unexpected-direction slashes in local and Internet paths, while other parts of the operating system still act upon them, has led to some serious lapses in security. Resources that should not be available have been accessed with paths using particular mixes, such as .
In the Japanese encodings ISO 646 (a 7-bit code based on ASCII), JIS X 0201 (an 8-bit code), and Shift JIS (a multi-byte encoding which is 8-bit for ASCII), the code point 0x5C that would be used for backslash in ASCII is instead rendered as a yen mark (¥), while in Korean encoding, it is drawn as a won currency symbol (₩). Computer programs still treat the code as a backslash in these environments, causing confusion, especially in MS-DOS filenames.[tpl]cite web|url=http://blogs.msdn.com/michkap/archive/2005/09/17/469941.aspx |title=When is a backslash not a backslash? |publisher=Blogs.msdn.com |accessdate=2013-06-16[/tpl] Due to extensive use of the backslash code point to represent the yen mark, even today some Unicode fonts like MS Mincho render the backslash character as a ¥, so the Unicode characters 00A5 (¥) and 005C (\) look identical when these fonts are selected. Several other ISO 646 versions also replace backslash with characters like Ö (German, Swedish), Ø (Danish, Norwegian), ç (French) and Ñ (Spanish), leading to similar problems. Since the character was originally not available in all character sets and keyboard layouts, ANSI C can transcribe it in form of the trigraph ??/ which, outside string literals, is equivalent to the \ character. RFC 1345 recommends to transcribe the character as digraph //, if not available.[tpl]cite web|url=http://tools.ietf.org/html/rfc1345 |title=RFC 1345 |publisher=Tools.ietf.org |date=1991-12-26 |accessdate=2013-06-16[/tpl]
In mathematics, a backslash-like symbol is used for the set difference.[tpl]cite web|title=Quantities and units -- Part 2: Mathematical signs and symbols to be used in the natural sciences and technology|url=http://www.iso.org/iso/catalogue_detail?csnumber=31887|work=ISO 80000-2:2009|publisher=International Organization for Standardization[/tpl] 
In some dialects of the BASIC programming language, the backslash is used as an operator symbol to indicate integer division.[tpl]cite web|title=Arithmetic Operators in Visual Basic|url=http://msdn.microsoft.com/en-us/library/b6ex274z(v=vs.110).aspx|work=Visual Basic Language Features: Operators and Expressions|publisher=MSDN|accessdate=7 October 2012[/tpl] 
In MATLAB and GNU Octave the backslash is used for left matrix divide, while the slash is for right matrix divide.[tpl]cite web|last=Eaton|first=John W.|title=GNU Octave: A high-level interactive language for numerical computations|url=http://www.gnu.org/software/octave/octave.pdf|publisher=Free Software Foundation|accessdate=7 October 2012|coauthors=David Bateman, Søren Hauberg|page=145|date=February 2011[/tpl]
In PHP version 5.3 and higher, the backslash is used to indicate a namespace.[tpl]cite web|url=http://php.net/manual/en/language.namespaces.rationale.php|title=Namespaces overview[/tpl]
In USFM, the backslash is used to mark format features for editing Bible translations.

==References==

==External links==


