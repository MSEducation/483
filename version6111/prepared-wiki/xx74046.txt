[[Lucifer (cipher)]]

CATEGORIES: Broken block ciphers, Feistel ciphers, Data Encryption Standard

In cryptography, Lucifer was the name given to several of the earliest civilian block ciphers, developed by Horst Feistel and his colleagues at IBM.  Lucifer was a direct precursor to the Data Encryption Standard.  One version, alternatively named DTD-1, saw commercial use in the 1970s for electronic banking.

==Overview==

One variant, described by Feistel in 1971,Horst Feistel. Block Cipher Cryptographic System, US Patent 3,798,359. Filed June 30, 1971. (IBM) uses a 48-bit key and operates on 48-bit blocks.  The cipher is a Substitution-permutation network and uses two 4-bit S-boxes.  The key selects which S-boxes are used.  The patent describes the execution of the cipher operating on 24-bits at a time, and also a sequential version operating on 8-bits at a time. Another variant by John L. Smith from the same yearJohn Lynn Smith. Recirculating Block Cipher Cryptographic System, US Patent 3,796,830. Filed Nov 2, 1971. (IBM) uses a 64-bit key operating on a 32-bit block, using one addition mod 4 and a singular 4-bit  S-box.  The construction is designed to operate on 4 bits per clock cycle.  This may be one of the smallest block-cipher implementations known.
Feistel later described a stronger variant that uses a 128-bit key and operates on 128-bit blocks.Horst Feistel, (1973). Cryptography and Computer Privacy". Scientific American,  228(5), May 1973, pp 15–23. The cipher is a Substitution-permutation network and uses two 4-bit S-boxes. The key selects which S-boxes are used.
[tpl]harvtxt|Sorkin|1984[/tpl] described a later Lucifer was a 16-round Feistel network, also on 128-bit blocks and 128-bit keys.A. Sorkin, (1984). LUCIFER: a cryptographic algorithm. Cryptologia, 8(1), 22–35, 1984.  This version is susceptible to differential cryptanalysis; for about half the keys, the cipher can be broken with 236 chosen plaintexts and 236 time complexity.Ishai Ben-Aroya, Eli Biham (1996). Differential Cryptanalysis of Lucifer. Journal of Cryptology 9(1), pp. 21–34, 1996.
IBM submitted the Feistel-network version of Lucifer as a candidate for the Data Encryption Standard (compare the more recent AES process).  It became the DES after the National Security Agency reduced the cipher's key size to 56 bits, reduced the block size to 64 bits, and made the cipher resistant against differential cryptanalysis, which was at the time known only to IBM and the NSA.
The name "Lucifer" was apparently a pun on "Demon". This was in turn a truncation of "Demonstration", the name for a privacy system Feistel was working on. The operating system used could not handle the longer name.[tpl]citation|title=Computer Security and Cryptography|first=Alan G.|last=Konheim|publisher=John Wiley & Sons|year=2007|isbn=9780470083970|url=http://books.google.com/books?id=YgT74UPmOk4C&pg=PA283|page=283[/tpl].

==Description of the Sorkin variant==

The variant described by [tpl]harvtxt|Sorkin|1984[/tpl] has 16 Feistel rounds, like DES, but no initial or final permutations.  The key and block sizes are both 128 bits.  The Feistel function operates on a 64-bit half-block of data, together with a 64-bit subkey and 8 "interchange control bits" (ICBs).  The ICBs control a swapping operation.  The 64-bit data block is considered as a series of eight 8-bit bytes, and if the ICB corresponding to a particular byte is zero, the left and right 4-bit halves (nibbles) are swapped. If the ICB is one, the byte is left unchanged.  Each byte is then operated on by two 4×4-bit S-boxes, denoted S0 and S1 — S0 operates on the left 4-bit nibble and S1 operates on the right.  The resultant outputs are concatenated and then combined with the subkey using exclusive or (XOR); this is termed "key interruption".  This is followed by a permutation operation in two stages; the first permutes each byte under a fixed permutation. The second stage mixes bits between the bytes.
The key-scheduling algorithm is relatively simple.  Initially, the 128 key bits are loaded into a shift register.  Each round, the left 64 bits of the register form the subkey, and right eight bits form the ICB bits. After each round, the register is rotated 56 bits to the left.

==References==

==Additional reading==

==External links==


