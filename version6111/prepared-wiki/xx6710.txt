     ''Node'' next ''// A [[reference (computer science)|reference]] to the next node, null for last node''
  }
  '''record''' ''List''
  {
      ''Node'' firstNode ''// points to first node of list; null for empty list''
  }
Traversal of a singly linked list is simple, beginning at the first node and following each next link until we come to the end:
  node := list.firstNode
  '''while''' node not null
      ''(do something with node.data)''
      node := node.next
The following code inserts a node after an existing node in a singly linked list. The diagram shows how it works. Inserting a node before an existing one cannot be done directly; instead, one must keep track of the previous node and insert a node after it.
