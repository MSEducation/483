[[Abandonware]]

CATEGORIES: Video game culture, Nostalgia, Software distribution, Software maintenance, Streisand effect

Abandonware is a product, typically software, ignored by its owner and manufacturer, and for which no product support is available. Although such software is usually still under copyright, the owner may not be tracking or enforcing copyright violations.  Abandonware is a variant of the general concept of orphan works.

Definition

Definitions of "abandoned" vary, but in general it is like any item that is abandoned - it is ignored by the owner, and as such product support and possibly copyright enforcement are also "abandoned". It can refer to a product that is no longer available for legal purchase, over the age where the product creator feels an obligation to continue to support it, or where operating systems or hardware platforms have evolved to such a degree that the creator feels continued support cannot be financially justified.  In such cases, copyright and support issues are ignored. Software might also be considered abandoned when it can be used only with obsolete technologies, such as pre-Macintosh Apple computers. A difference between abandonware and a discontinued product is that the manufacturer has not issued an official notice of discontinuance; instead, the manufacturer is simply ignoring the product.
Abandonware may be computer software or physical devices which are usually computerised in some fashion, such as personal computer games, productivity applications, utility software, or mobile phones.

Types

The term "abandonware" is broad, and encompasses many types of old software.

Implications

If a software product reaches End-of-life and becomes abandonware, users are confronted with several potential problems: missing purchase availability (besides used software) and missing technical support, e.g. compatibility fixes for newer hardware and operating systems. These problems are exacerbated if software is bound ("dongle") to physical media with a limited life-expectancy (floppy discs, optical media etc.) and backups are impossible because of copy protection or copyright law. If the software product is without alternative, the missing replacement availability becomes a challenge for continued software usage.
Also, once a software product has become abandonware for a developer, even historically important software might get lost forever very easily, as several examples have shown.
Also, the missing availability of software and the associated source code can be a hindrance for software archeology and research.

Response to Abandonware

Early abandonware websites

As response to the missing availability of abandonware, people have distributed old software since shortly after the beginning of personal computing, but the activity remained low-key until the advent of the Internet. While trading old games has taken many names and forms, the term "abandonware" was coined by Peter Ringering in late 1996. This original webring was little more than a collection of sites linking to adventureclassicgaming. Another was a site indexing them all to provide a rudimentary search facility. In October 1997, the Interactive Digital Software Association sent cease and desist letters to all sites within the Abandonware Ring, which led to most shutting down. An unintended consequence (called the Streisand effect in Internet parlance) was that it spurred others to create new abandonware sites and organizations that came to outnumber the original Ring members. Sites formed after the demise of the original Abandonware Ring include Abandonia and Home of the Underdogs.

Archives

Several websites archive abandonware for download, including old versions of applications which are difficult to find by any other means. Much of this software fits the definition of "software that is no longer current, but is still of interest", but the line separating the use and distribution of abandonware from copyright infringement is blurry, and the term abandonware could be used to distribute software without proper notification of the owner.
The Internet Archive has created an archive of what it describes as "vintage software", as a way to preserve them.
Also the Library of Congress began with the long-time preservation of video games with the Game canon list around 2006.
In 2012 the Computer History Museum began with the preservation of source code of important software, beginning with the APL programming language.
In December 2013 the ICHEG received a software donation of several SSI video games, for instance Computer Bismarck, including the source code for preservation.
There are also some cases were the source code of games was given to a fan community for long-time preservation, e.g. several titles of the Wing Commander video game series.

Community support

In response to the missing software support, sometimes the software's user community begins to provide support (bug fixes, compatibility adaptions etc.) even without available source code, internal software documentation and original developer tools.

Re-releases by digital distribution

With the new possibility of the digital distribution in mid-2000 the commercial distribution for many old titles became feasible again as deployment and storage costs dropped significantly.

Arguments for and against distribution

Proponents of abandonware preservation argue that it is more ethical to make copies of such software than new software that still sells.  Those ignorant of copyright law have incorrectly taken this to mean that abandonware is legal to distribute, although no software written since 1964 is old enough for copyright to have expired in the US. Even in cases where the original company no longer exists, the rights usually belong to someone else, though no one may be able to trace actual ownership, including the owners themselves.
Abandonware advocates also frequently cite historical preservation as a reason for trading abandoned software. Older computer media are fragile and prone to rapid deterioration, necessitating transfer of these materials to more modern, stable media and generation of many copies to ensure the software will not simply disappear. Users of still-functional older computer systems argue for the need of abandonware because re-release of software by copyright holders will most likely target modern systems or incompatible media instead, preventing legal purchase of compatible software.
Those who oppose these practices argue that distribution denies the copyright holder potential sales, in the form of re-released titles, official emulation, and so on. Likewise, they argue that if people can acquire an old version of a program for free, they may be less likely to purchase a newer version if the old version meets their needs.
Some game developers showed sympathy for abandonware websites as they preserve their classical game titles.

Law

In most cases, software classed as abandonware is not in the public domain, as it has never had its original copyright officially revoked and some company or individual may still own rights. While sharing of such software is usually considered copyright infringement, in practice copyright holders rarely enforce their abandonware copyrights and may allow the product to de facto lapse into the public domain to such an extent that enforcement becomes impractical.
Rarely has any abandonware case gone to court. But it is still unlawful to distribute copies of old copyrighted software and games, with or without compensation, in any Berne Convention signatory country.

Enforcement of copyright

Old copyrights are usually left undefended. This can be due to intentional non-enforcement by owners due to software age or obsolescence, but sometimes results from a corporate copyright holder going out of business without explicitly transferring ownership, leaving no one aware of the right to defend the copyright.
Even if the copyright is not defended, copying of such software is still unlawful in most jurisdictions when a copyright is still in effect. Abandonware changes hands on the assumption that the resources required to enforce copyrights outweigh benefits a copyright holder might realize from selling software licenses. Additionally, abandonware proponents argue that distributing software for which there is no one to defend the copyright is morally acceptable, even where unsupported by current law. Companies that have gone out of business without transferring their copyrights are an example of this; many hardware and software companies that developed older systems are long since out of business and precise documentation of the copyrights may not be readily available.
Often the availability of abandonware on the Internet is related to the willingness of copyright holders to defend their copyrights. For example, unencumbered games for Colecovision are markedly easier to find on the Internet than unencumbered games for Mattel Intellivision in large part because there is still a company that sells Intellivision games while no such company exists for the Colecovision.

DMCA

The Digital Millennium Copyright Act (DMCA) can be a problem for the preservation of old software as it prohibits required techniques. In October 2003, the US Congress passed 4 clauses to the DMCA which allow for reverse engineering software in case of preservation. 
In November 2006 the Library of Congress approved an exemption to the DMCA that permits the cracking of copy protection on software no longer being sold or supported by its copyright holder so that they can be archived and preserved without fear of retribution.Rulemaking on Exemptions from Prohibition on Circumvention of Technological Measures that Control Access to Copyrighted Works

US copyright law

Currently, US copyright law does not recognize the term or concept of "abandonware" while the general concept "orphan works" is recognized (see Orphan works in the United States). There is a long held concept of abandonment in trademark law as a direct result of the infinite term of trademark protection. Currently, a copyright can be released into the public domain if the owner clearly does so in writing; however this formal process is not considered abandoning, but rather releasing. Those who do not own a copyright cannot merely claim the copyright abandoned and start using protected works without permission of the copyright holder, who could then seek legal remedy.
Hosting and distributing copyrighted software without permission is illegal. Copyright holders, sometimes through the Entertainment Software Association, send cease and desist letters, and some sites have shut down or removed infringing software as a result. However, most of the Association's efforts are devoted to new games, due to those titles possessing the greatest value.

Copyright expiration

Once the copyright on a piece of software has expired, it automatically falls into public domain. Such software can be legally distributed without restrictions. However, due to the length of copyright terms in most countries, this has yet to happen for most software. All countries that observe the Berne Convention enforce copyright ownership for at least 50 years after publication or the author's death. However, individual countries may choose to enforce copyrights for longer periods. In the United States, copyright durations are determined based on authorship. For most published works, the duration is 70 years after the author's death. However, for anonymous works, works published under a pseudonym or works made for hire, the duration is 120 years after publication. In France, copyright durations are 70 years after the relevant date (date of author's death or publication) for either class.
However, because of the length of copyright enforcement in most countries, it is likely that by the time a piece of software defaults to public domain, it will have long become obsolete, irrelevant, or incompatible with any existing hardware. Additionally, due to the relatively short commercial, as well as physical, lifespans of most digital media, it is entirely possible that by the time the copyright expires for a piece of software, it will no longer exist in any form. However, since the largest risk in dealing with abandonware is that of distribution, this may be mitigated somewhat by private users (or organizations such as the Internet Archive) making private copies of such software, which would then be legally redistributable at the time of copyright expiry.

Alternatives to software abandoning

There are alternatives for companies with a software product which faces the end-of-life instead of abandoning the software in an unsupported state.

Availability as freeware

Sometimes user-communities convince companies to voluntarily relinquish copyright on software, putting it into the public domain, or re-license it as free software or as freeware. Transfer of public domain or freely licensed software is perfectly legal, distinguishing it from abandonware which still has full copyright restrictions.
Amstrad is an example which supports emulation and free distribution of CPC and ZX Spectrum hardware ROMs and software.
There are groups that lobby companies to release their software as freeware. These efforts have met with mixed results.  One example is the library of educational titles released by MECC. MECC was sold to Brøderbund, which was sold to The Learning Company. When TLC was contacted about releasing classic MECC titles as freeware, the documentation proving that TLC held the rights to these titles could not be located, and therefore the rights for these titles are "in limbo" and may never be legally released.

Support by source code release

The problem of missing technical support for a software can be most effectively solved when the source code becomes available. Therefore several companies decided to release the source code specifically to allow the user communities to provide further technical software support (bug fixes, compatibility adaptions etc.) themselves, e.g. by community patches or source ports to new computing platforms.
Id Software and 3D Realms are early proponents in this practice, releasing the source code for the game engines of some older titles under a free software license (but not the actual game content, such as levels or textures).
The chilling effect of drawing a possible lawsuit can discourage release of source code. Efforts to persuade IBM to release OS/2 as open source software were ignored since some of the code was co-developed by Microsoft.
Nevertheless, several notable examples of successfully opened commercial software exist, for instance, the web browser Netscape Communicator, which was released by Netscape Communications on  March 31, 1998.
Another important example for open sourced general software is the office suite StarOffice which was released by Sun Microsystems in October 2000 as OpenOffice.
There are also many examples in the video game domain: Revolution Software released their game Beneath a Steel Sky as freeware and gave the engine's source code to the authors of ScummVM to add support for the game. Other examples are Myth II, and even Microsoft's Allegiance which were released to allow the community to continue the support.








