[[ISO/IEC 9797-1]]

CATEGORIES: Message authentication codes, ISO/IEC 9797

ISO/IEC 9797-1 Information technology – Security techniques – Message Authentication Codes (MACs) – Part 1: Mechanisms using a block cipherISO/IEC 9797-1:1999 Information technology – Security techniques – Message Authentication Codes (MACs) – Part 1: Mechanisms using a block cipher is an international standard that defines methods for calculating a message authentication code (MAC) over data.
Rather than defining one specific algorithm, the standard defines a general model from which a variety of specific algorithms can be constructed. The model is based around a block cipher with a secret symmetric key.
Because the standard describes a model rather than a specific algorithm, users of the standard must specify all of the particular options and parameter to be used, to ensure unambiguous MAC calculation.

Model

The model for MAC generation comprises six steps:
For most steps, the standard provides several options from which to choose, and/or allows some configurability.

Padding

The input data must be padded to a multiple of the cipher block size, so that each subsequent cryptographic operation will have a complete block of data. Three padding methods are defined. In each case n is the block length (in bits):

=Padding method 1=

If necessary, add bits with value 0 to the end of the data until the padded data is a multiple of n. (If the original data was already a multiple of n, no bits are added.)

=Padding method 2=

Add a single bit with value 1 to the end of the data. Then if necessary add bits with value 0 to the end of the data until the padded data is a multiple of n.

=Padding method 3=

The padded data comprises (in this order):
It is not necessary to transmit or store the padding bits, because the recipient can regenerate them, knowing the length of the unpadded data and the padding method used.

Splitting

The padded data D is split into q blocks D1, D2, ... Dq, each of length n, suitable for the block cipher.

Initial transformation

A cryptographic operation is performed on the first block (D1), to create an intermediate block H1. Two initial transformations are defined:

=Initial transformation 1=

D1 is encrypted with the key K:

=Initial transformation 2=

D1 is encrypted with the key K, and then by a second key K′′:

Iteration

Blocks H2 ... Hq are calculated by encrypting, with the key K, the bitwise exclusive-or of the corresponding data block and the previous H block.
If there is only one data block (q=1), this step is omitted.

Output transformation

A cryptographic operation is (optionally) performed on the last iteration output block Hq to produce the block G. Three output transformations are defined:

=Output transformation 1=

Hq is used unchanged:

=Output transformation 2=

Hq is encrypted with the key K′:

=Output transformation 3=

Hq is decrypted with the key K′ and the result encrypted with the key K:

Truncation

The MAC is obtained by truncating the block G (keeping the leftmost bits, discarding the rightmost bits), to the required length.

Specific algorithms

The general model nominally allows for any combination of options for each of the padding, initial transformation, output transformation, and truncation steps. However, the standard defines four particular combinations of initial and output transformation and (where appropriate) key derivation, and two further combinations based on duplicate parallel calculations. The combinations are denoted by the standard as "MAC Algorithm 1" through "MAC Algorithm 6".

MAC algorithm 1

This algorithm uses initial transformation 1 and output transformation 1.
Only one key is required, K.
(When the block cipher is DES, this is equivalent to the algorithm specified in FIPS PUB 113 Computer Data Authentication.)

MAC algorithm 2

This algorithm uses initial transformation 1 and output transformation 2.
Two keys are required, K and K′, but K′ may be derived from K.

MAC algorithm 3

This algorithm uses initial transformation 1 and output transformation 3.
Two independent keys are required, K and K′.

MAC algorithm 4

This algorithm uses initial transformation 2 and output transformation 2.
Two independent keys are required, K and K′, with a third key K′′ derived from K′.

MAC algorithm 5

This algorithm comprises two parallel instances of MAC algorithm 1. The final MAC is the bitwise exclusive-or of the MACs generated by each instance of algorithm 1.
Each instance of algorithm 1 uses a different key, but those keys are both derived from a single base key.

MAC algorithm 6

This algorithm comprises two parallel instances of MAC algorithm 4. The final MAC is the bitwise exclusive-or of the MACs generated by each instance of algorithm 4.
Each instance of algorithm 4 uses a different key pair (K and K′) but those four keys are derived from two independent base keys.

Key derivation

MAC algorithms 2 (optionally), 4, 5 and 6 require deriving one or more keys from another key. The standard does not mandate any particular method of key derivation, although it does generally mandate that derived keys be different from each other.
The standard gives some examples of key derivation methods, such as "complement alternate substrings of four bits of K commencing with the first four bits." This is equivalent to bitwise exclusive-oring each byte of the key with F0 (hex).

Complete specification of the MAC calculation

To completely and unambiguously define the MAC calculation, a user of ISO/IEC 9797-1 must select and specify:

Security analysis of the algorithms

Annex B of the standard is a security analysis of the MAC algorithms. It describes various cryptographic attacks on the algorithms – including key-recovery attack, brute force key recovery, and birthday attack – and analyses the resistance of each algorithm to those attacks.




