[[ICalendar]]

CATEGORIES: Computer file formats, Calendaring standards, Internet Standards

iCalendar is a computer file format which allows Internet users to send meeting requests and tasks to other Internet users, via email, or sharing files with an extension of . Recipients of the iCalendar data file (with supporting software, such as an email client or calendar application) can respond to the sender easily or counter-propose another meeting date/time. The standard is sometimes referred to as "iCal", which was the name of the Apple Inc. calendar program before OS X Mountain Lion (see iCal) that provides one of the implementations of the standard. 
iCalendar is used and supported by a large number of products, including Google Calendar, Apple Calendar (formerly iCal),From iCal IBM Lotus Notes,From Lotus Notes 8.5 iCalendar support info on ibm. Yahoo! Calendar, Evolution (software), eM Client, Lightning extension for Mozilla Thunderbird and SeaMonkey, and partially by Microsoft Outlook and Novell GroupWise. 
iCalendar is designed to be independent of the transport protocol. For example, certain events can be sent by traditional email or whole calendar files can be shared and edited by using a WebDav server, or SyncML. Simple web servers (using just the HTTP protocol) are often used to distribute iCalendar data about an event and to publish busy times of an individual.  Publishers can embed iCalendar data in web pages using hCalendar, a 1:1 microformat representation of iCalendar in semantic (X)HTML.

History and design

iCalendar was created by the
Internet Engineering Task Force Calendaring and Scheduling Working Group (chaired by Anik Ganguly of Open Text Corporation), and was authored by Frank Dawson of Lotus Development Corporation and Derik Stenerson of Microsoft Corporation. iCalendar is heavily based on the earlier vCalendar by the Internet Mail Consortium (IMC). iCalendar data files are plain text files with the extension .ifb (for files containing availability information only). RFC 5545 replaced RFC 2445 in September 2009 and now defines the standard.
iCalendar data has the MIME content type text/calendar.
The filename extension of "ics" is to be used to designate a file containing (an arbitrary set of) calendaring and scheduling information consistent with this MIME content type.
The filename extension of "ifb" is to be used to designate a file containing free or busy time information consistent with this MIME content type.
The file type code of "iCal" is to be used in Apple Macintosh operating system environments to designate a file containing calendaring and scheduling information consistent with this MIME media type.
The file type code of "iFBf" is to be used in Apple Macintosh operating system environments to designate a file containing free or busy time information consistent with this MIME media type.
By default, iCalendar uses the UTF-8 character set; a different character set can be specified using the "charset" MIME parameter (if the transport method used supports MIME, such as Email or HTTP).
Each line is terminated by CR+LF (in hexadecimal: 0D0A).  Lines should be limited to 75 octets (not characters) long.  Where a data item is too long to fit on a single line it can be continued on following lines by starting the continuation lines with a space character (in hex: 20) or a tab character (in hex: 09).
Actual line feeds in data items are encoded as a backslash followed by the letter n or N (the bytes 5C 6E or 5C 4E in UTF-8).

Limitations and future

The iCalendar format is designed to transmit calendar-based data, such as events, and intentionally does not describe what to do with that data.  Thus, other programming may be needed to negotiate what to do with this data. This standard defines methods such as PUBLISH, REQUEST, REPLY, ADD, CANCEL, REFRESH, COUNTER (to negotiate a change in the entry), and DECLINE-COUNTER (to decline the counter-proposal).
Another companion standard, "iCalendar Message-based Interoperability Protocol (iMIP)" (RFC 2447), defines a standard method for implementing iTIP on standard Internet email-based transports.
The "Guide to Internet Calendaring" (RFC 3283)  explains how iCalendar interacts with other calendar computer language (current and future).[/ref] 
iCalendar is meant to "provide the definition of a common format for openly exchanging calendaring and scheduling information across the Internet". While the features most often used by users are widely supported by iCalendar, some more advanced capabilities have problems. For example, most vendors do not support Journals (VJOURNAL).  "Recurring and repeating meetings still have a bit of mystery and ambiguity associated with them. Resulting in no true interoperability between the current calendaring and scheduling vendors."[ref]
[/ref] VTODOs have had conversion problems as well.CalConnect, 2004
iCalendar's calendar is also not compatible with some non-Gregorian calendars such as the lunar calendars used in Israel or Saudi Arabia. For example the Hebrew calendar year may contain either 12 or 13 months, and the Japanese Emperor-based calendar scale contains many eras.
The memo "Calendar Access Protocol" (RFC 4324) was an initial attempt at a universal system to create real-time calendars.  This protocol was eventually abandoned, possibly because of excessive complexity.  Regardless, iCalendar-based code such as GroupDAV and CalDAV are now being used more frequently in both client and server software packages.
The IETF "Calendaring and Scheduling Working Group" (ietf-calsify WG) has published additional proposed revisions to the iCalendar standardsIETF-calsify website: Charter (as RFC-drafts/"Proposed"; see Calendaring and Scheduling Standards Simplification (calsify) - Documents. Datatracker.org. Retrieved on 2013-07-17.), but as of January 2011, the group has 'ended'."ietf-calsify: the end of calsify working groupâ€“ not the end of the mailing list,  Much of their work focused on clarifications to the previous standards, and was apparently influenced on work by the Calendaring and Scheduling Consortium (a.k.a. CalConnect -- "Formed in 2004, Calconnect addresses interoperability issues through scheduled interoperability tests and through technical committees and surveys to determine actual use cases. Any organization or individual is eligible to join the consortiumm.")

Technical specifications

Core object

The top-level element in iCalendar is the Calendaring and Scheduling Core Object, a collection of calendar and scheduling information. Typically, this information will consist of a single iCalendar object. However, multiple iCalendar objects can be grouped together. 
The first line must be "BEGIN:VCALENDAR", and the last line must be "END:VCALENDAR"; the contents between these lines is called the "icalbody".

The second line "VERSION:2.0" indicates that the data is in iCalendar format. "VERSION:1.0" was used to specify that data is in the old vCalendar format.
The body of the iCalendar object (the icalbody) is made up of a list of calendar properties and one or more calendar components. The calendar properties apply to the entire calendar. The calendar components are several calendar properties which create a calendar schematic (design). For example, the calendar component can specify an event, a to-do list, a journal entry, time zone information, or free/busy time information, or an alarm. Empty lines are not allowed in some versions of usage (Google calendar).
Here is a simple exampleFrom RFC 2445 of an iCalendar object, "Bastille Day Party" event which occurs July 14, 1997 17:00 (UTC) through July 15, 1997 03:59:59 (UTC):
 BEGIN:VCALENDAR
 VERSION:2.0
 <nowiki>PRODID:-//hacksw/handcal//NONSGML v1.0//EN</nowiki>
 BEGIN:VEVENT
 UID:uid1@example.com
 DTSTAMP:19970714T170000Z
 ORGANIZER;CN=John Doe:MAILTO:john.com
 DTSTART:19970714T170000Z
 DTEND:19970715T035959Z
 SUMMARY:Bastille Day Party
 END:VEVENT
 END:VCALENDAR
There are many different types of components which can be used in iCalendar, as described below. 
 X-WR-CALNAME:Revolution Parties<br>
 X-WR-CALDESC:Celebrations of various revolutionary activities.<br>
 X-WR-RELCALID:3E26604A-50F4-4449-8B3E-E4F4932D05B5<br>
 X-WR-TIMEZONE:US/Pacific<br>
 
Where the X-WR-RELCALID is a UUID.[/ref]

=Events (VEVENT)=

VEVENT describes an event, which has a scheduled amount of time on a calendar.  Normally, when a user accepts the calendar event, this will cause that time to be considered busy. A VEVENT may include a VALARM which allows an alarm.  Such events have a DTSTART which sets a starting time, and a DTEND which sets an ending time.  If the calendar event is recurring, DTSTART sets up the start of the first event.
A VALARM code (reminder 1 day before) :
 
 BEGIN:VALARM
TRIGGER:-PT1440M
ACTION:DISPLAY
DESCRIPTION:Reminder
END:VALARM

VEVENT also is used for calendar events without a specific time, such as anniversaries and daily reminders.
If you need to send in a cancellation for an event, the UID should be same as the original event, and the component properties should be set to cancel Ex.
 
 METHOD:CANCEL
STATUS:CANCELLED

For sending an UPDATE for an event the UID should match the original UID. the other component property to be set is:
 
 SEQUENCE:

I.e., for the first update:
 
 SEQUENCE:1

In Microsoft Outlook, the SUMMARY corresponds to the "Subject" entry in the "Appointment" form, and DESCRIPTION to the descriptive text below it. In addition, Outlook 2002 and Outlook 2003 demand a UID and a DTSTAMP.

=To-do (VTODO)=

VTODO explains a to-do item, i.e., an action-item or assignment.
The following is an example of a to-do due on April 15, 1998. An audio alarm has been specified to remind the calendar user at noon, the day before the to-do is expected to be completed and repeat hourly, four additional times. The SEQUENCE element shows this to-do has been modified twice since it was initially created.
 BEGIN:VCALENDAR
 VERSION:2.0
 <nowiki>PRODID:-//ABC Corporation//NONSGML My Product//EN</nowiki>
 BEGIN:VTODO
 DTSTAMP:19980130T134500Z
 SEQUENCE:2
 UID:uid4@example.com
 ACTION:AUDIO
 TRIGGER:19980403T120000
 <nowiki>ATTACH;FMTTYPE=audio/basic:
  files/ssbanner.aud
 REPEAT:4
 DURATION:PT1H
 END:VTODO
 END:VCALENDAR

=Journal entry (VJOURNAL)=

VJOURNAL is a journal entry.  They attach descriptive text to a particular calendar date, may be used to record a daily record of activities or accomplishments, or describe progress with a related to-do entry. A "VJOURNAL" calendar component does not take up time on a calendar, so it has no effect on free or busy time (just like TRANSPARENT entries).  In practice, few programs support VJOURNAL entries, although examples exist: Plum Canary's Chirp software uses VTODO and VJOURNAL together. Also KOrganizer from the KDE desktop supports VJOURNAL.
The following is an example of a journal entry:
 BEGIN:VCALENDAR
 VERSION:2.0
 <nowiki>PRODID:-//ABC Corporation//NONSGML My Product//EN</nowiki>
 BEGIN:VJOURNAL
 DTSTAMP:19970324T120000Z
 UID:uid5@example.com
 ORGANIZER:MAILTO:jsmith@example.com
 STATUS:DRAFT
 CLASS:PUBLIC
 CATEGORIES:Project Report, XYZ, Weekly Meeting
 DESCRIPTION:Project xyz Review Meeting Minutes\n
  Agenda\n1. Review of project version 1.0 requirements.
  Definition
  of project processes. Review of project schedule.\n
  Participants: John Smith, Jane Doe, Jim Dandy\n-It was
   decided that the requirements need to be signed off by
   product marketing.\n
  -Project schedule needs to account for scheduled holidays
   and employee vacation time. Check with HR for specific
   dates.\n-
  Next weeks meeting is cancelled. No meeting until 3/23.
 END:VJOURNAL
 END:VCALENDAR
(Note: This example is taken from RFC 2445 with the correction of changing the word 'CATEGORY' to 'CATEGORIES', which is a mistake in the original RFC)

=Free/busy time (VFREEBUSY)=

VFREEBUSY is a request for free/busy time, is a response to a request, or is a published set of busy time. [ref]As described in RFC 2445:
 When used to request free/busy time information, the "ATTENDEE" property specifies the calendar users whose free/busy time is being requested; the "ORGANIZER" property specifies the calendar user who is requesting the free/busy time; the "DTSTART" and "DTEND" properties specify the window of time for which the free/busy time is being requested; the "UID" and "DTSTAMP" properties are specified to assist in proper sequencing of multiple free/busy time requests. 
 When used to reply to a request for free/busy time, the "ATTENDEE" property specifies the calendar user responding to the free/busy time request; the "ORGANIZER" property specifies the calendar user that originally requested the free/busy time; the "FREEBUSY" property specifies the free/busy time information (if it exists); and the "UID" and "DTSTAMP" properties are specified to assist in proper sequencing of multiple free/busy time replies. 
 When used to publish busy time, the "ORGANIZER" property specifies the calendar user associated with the published busy time; the "DTSTART" and "DTEND" properties specify an inclusive time window that surrounds the busy time information; the "FREEBUSY" property specifies the published busy time information; and the "DTSTAMP" property specifies the date/time that iCalendar object was created. [/ref]
The following is an example of published busy time information.:[ref]From RFC 2445 The
iCalendar object might be placed at some URL with the extension ".ifb"[/ref]
 BEGIN:VCALENDAR
 VERSION:2.0
 <nowiki>PRODID:-//RDU Software//NONSGML HandCal//EN</nowiki>
 BEGIN:VFREEBUSY
 ORGANIZER:MAILTO:jsmith@example.com
 DTSTART:19980313T141711Z
 DTEND:19980410T141711Z
 FREEBUSY:19980314T233000Z/19980315T003000Z
 FREEBUSY:19980316T153000Z/19980316T163000Z
 FREEBUSY:19980318T030000Z/19980318T040000Z
 URL:
 END:VFREEBUSY
 END:VCALENDAR

=Other component types=

Other component types include VTIMEZONE (time zones) and VALARM (alarms).  Some components can include other components (VALARM is often included in other components).

=Distributing updates=

The UID field distributes updates when a scheduled event changes.  When the event is first generated a globally unique identifier is created.  If a later event is distributed with the same UID, it replaces the original one.edu", for the 5th meeting of class 131 in semester 2 at a hypothetical college.

Calendar extensions

vCalendar and iCalendar support private software extensions, with a "X-" prefix, a number of which are in common usage.
Some of these include:

vCalendar 1.0

iCalendar's design was based on the previous file format vCalendar created by the Internet Mail Consortium (IMC).
Here is an example of information in vCalendar format:
 BEGIN:VCALENDAR
 VERSION:1.0
 BEGIN:VEVENT
 CATEGORIES:MEETING
 STATUS:TENTATIVE
 DTSTART:19960401T033000Z
 DTEND:19960401T043000Z
 SUMMARY:Your Proposal Review
 DESCRIPTION:Steve and John to review newest proposal material
 CLASS:PRIVATE
 END:VEVENT
 END:VCALENDAR
It has the .
After iCalendar was released, the Internet Mail Consortium stated that it "hopes that all vCalendar developers take advantage of these new open standards and make their software compatible with both vCalendar 1.0 and iCalendar."From IMC website.

Notes






