[[Computational linguistics]]

CATEGORIES: Computational linguistics, Applied linguistics, Linguistics, Formal sciences, Cognitive science

Computational linguistics is an interdisciplinary field concerned with the statistical or rule-based modeling of natural language from a computational perspective.
Traditionally, computational linguistics was usually performed by computer scientists who had specialized in the application of computers to the processing of a natural language. Computational linguists often work as members of interdisciplinary teams, including linguists (specifically trained in linguistics), language experts (persons with some level of ability in the languages relevant to a given project), and computer scientists. In general, computational linguistics draws upon the involvement of linguists, computer scientists, experts in artificial intelligence, mathematicians, logicians, philosophers, cognitive scientists, cognitive psychologists, psycholinguists, anthropologists and neuroscientists, among others.
Computational linguistics has theoretical and applied components, where theoretical computational linguistics takes up issues in theoretical linguistics and cognitive science, and applied computational linguistics focuses on the practical outcome of modeling human language use. What Is Computational Linguistics?  Department of Computational Linguistics and Phonetics of Saarland University

Origins

Computational linguistics as a field predates artificial intelligence, a field under which it is often grouped. Computational linguistics originated with efforts in the United States in the 1950s to use computers to automatically translate texts from foreign languages, particularly Russian scientific journals, into English. Proceedings of MT Summit VII, 1999, pp. 30–44. Since computers can make arithmetic calculations much faster and more accurately than humans, it was thought to be only a short matter of time before the technical details could be taken care of that would allow them the same remarkable capacity to process language. Barach: Translating Machine 1975: And the Changes To Come.
When machine translation (also known as mechanical translation) failed to yield accurate translations right away, automated processing of human languages was recognized as far more complex than had originally been assumed. Computational linguistics was born as the name of the new field of study devoted to developing algorithms and software for intelligently processing language data. When artificial intelligence came into existence in the 1960s, the field of computational linguistics became that sub-division of artificial intelligence dealing with human-level comprehension and production of natural languages.
In order to translate one language into another, it was observed that one had to understand the grammar of both languages, including both morphology (the grammar of word forms) and syntax (the grammar of sentence structure). In order to understand syntax, one had to also understand the semantics and the lexicon (or 'vocabulary'), and even to understand something of the pragmatics of language use. Thus, what started as an effort to translate between languages evolved into an entire discipline devoted to understanding how to represent and process natural languages using computers.Natural Language Processing by Liz Liddy, Eduard Hovy, Jimmy Lin, John Prager, Dragomir Radev, Lucy Vanderwende, Ralph Weischedel
Nowadays research within the scope of computational linguistics is done at computational linguistics departments,Computational linguistics and phonetics at Saarland University computational linguistics laboratories,Yatsko's computational linguistics laboratory computer science departments,Clip: Computational Linguistics and Information Processing and linguistics departments.Computational Linguistics – Department of Linguistics – Georgetown CollegeUPenn Linguistics: Computational Linguistics 
Some research in the field of computational linguistics aim to create working speech or text processing systems while others aim to create a system allowing human-machine interaction. Programs meant for human-machine communication are called conversational agents., & Martin, J. H. (2009). Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition. Upper Saddle River, N.J: Pearson Prentice Hall.

Approaches

Just as computational linguistics can be performed by experts in a variety of fields, and through a wide assortment of departments, so too can the research fields broach a diverse range of topics.  The following sections discuss some of the literature available across the entire field broken into four main area of discourse: developmental linguistics, structural linguistics, linguistic production, and linguistic comprehension.

Developmental Approaches

Language is a skill which develops throughout the life of an individual. This developmental process has been examined using a number of techniques, and a computational approach is one of them.  Human language development does provide some constraints which make it feasible to apply a computational method to understanding it. For instance, during language acquisition, human children are largely only exposed to positive evidence. (1988). The "no negative evidence"problem: How do children avoid constructing an overly general grammar. Explaining language universals. Retrieved from  This means that during the linguistic development of an individual, only evidence for what is a correct form is provided, and not evidence for what is not correct.  This is insufficient information for a simple hypothesis testing procedure for information as complex as language,Braine, M.D.S. (1971). On two types of models of the internalization of grammars. In D.I. Slobin (Ed.), The ontogenesis of grammar: A theoretical perspective. New York: Academic Press. and so provides certain boundaries for a computational approach to modeling language development and acquisition in an individual.
Attempts have been made to model the developmental process of language acquisition in children from a computational angle.  Work in this realm has also been proposed as a method to explain the evolution of language through history.  Using models, it has been shown that languages can be learned most efficiently with a combination of simple input at first presented incrementally and the child develops better memory and longer attention span. (1993). Learning and development in neural networks: The importance of starting small. Cognition, 71-99. Retrieved from   This was simultaneously posed as a reason for the long developmental period of human children. Both conclusions were drawn because of the strength of the neural network which the project created.
The ability of infants to develop language has also been modeled using robotsSalvi, G., Montesano, L., Bernardino, A., & Santos-Victor, J. (2012). Language bootstrapping: learning word meanings from perception-action association. IEEE transactions on systems, man, and cybernetics. Part B, Cybernetics : a publication of the IEEE Systems, Man, and Cybernetics Society, 42(3), 660-71. doi:10.1109/TSMCB.2011.2172420 in order to test linguistic theories.  Enabled to learn as children might, a model was created based on an affordance model in which mappings between actions, perceptions, and effects were created and linked to spoken words.  Crucially, these robots were able to acquire functioning word-to-meaning mappings without needing grammatical structure, vastly simplifying the learning process and shedding light on information which furthers the current understanding of linguistic development.  It is important to note that this information could only have been empirically tested using a computational approach.
As our understanding of the linguistic development of an individual within a lifetime is continually improved using neural networks and learning robotic systems, it is also important to keep in mind that languages themselves change and develop through time.  Computational approaches to understanding this phenomenon have unearthed very interesting information.  Using the Price Equation and Pólya urn dynamics, researchers have created a system which not only predicts future linguistic evolution, but also gives insight into the evolutionary history of modern day languages., Shuai, L., Tamariz, M., & Jäger, G. (2012). Studying Language Change Using Price Equation and Pólya-urn Dynamics. (E. Scalas, Ed.)PLoS ONE, 7(3), e33171. doi:10.1371/journal.0033171  This modeling effort achieved, through computational linguistics, what would otherwise have been impossible.
It is clear that the understanding of linguistic development in humans as well as throughout evolutionary time has been fantastically improved because of advances in computational linguistics.   The ability to model and modify systems at will affords science an ethical method of testing hypotheses that would otherwise be intractable.

Structural Approaches

In order to create better computational models of language, an understanding of language's structure is crucial.  To this end, the English language has been meticulously studied using computational approaches to better understand how the language works on a structural level.  One of the most important pieces of being able to study linguistic structure is the availability of large linguistic corpora.  This grants computational linguists the raw data necessary to run their models and gain a better understanding of the underlying structures present in the vast amount of data which is contained in any single language.  One of the most cited English linguistic corpora is the Penn Treebank., & Marcinkiewicz, M. (1993). Building a large annotated corpus of English: The Penn Treebank. Computational linguistics. Retrieved from  million words of American English, this corpus has been annotated for part-of-speech information.  This type of annotated corpus allows other researchers to apply hypotheses and measures that would otherwise be impossible to perform.
Theoretical approaches to the structure of languages have also been submitted.  These works allow computational linguistics to have a framework within which to work out hypotheses that will further the understanding of the language in a myriad of ways.  One of the original theoretical theses on internalization of grammar and structure of language proposed two types of models.  In these models, rules or patterns learned increase in strength with the frequency of their encounter. The work also created a question for computational linguists to answer: how does an infant learn a specific and non-normal grammar (Chomsky Normal Form) without learning an overgeneralized version and getting stuck? Theoretical efforts like these set the direction for research to go early in the lifetime of a field of study, and are crucial to the growth of the field.
Structural information about languages allows for the discovery and implementation of similarity recognition between pairs of text utterances., Smith, A., & Wiles, J. (2012). Conceptual recurrence plots: revealing patterns in human discourse. IEEE transactions on visualization and computer graphics, 18(6), 988-97. doi:10.1109/TVCG.2011.100  For instance, it has recently been proven that based on the structural information present in patterns of human discourse, conceptual recurrence plots can be used to model and visualize trends in data and create reliable measures of similarity between natural textual utterances.  This technique is a strong tool for further probing the structure of human discourse.  Without the computational approach to this question, the vastly complex information present in discourse data would have remained inaccessible to scientists.
Information regarding the structural data of a language is not simply available for English, but can also be found in other languages, such as Japanese., & Hayakawa, Y. (2012). Lognormality of the Distribution of Japanese Sentence Lengths. Journal of the Physical Society of Japan, 81(3), 034004. doi:10.1143/JPSJ.81.034004 Using computational methods, Japanese sentence corpora were analyzed and a pattern of log-normality was found in relation to sentence length.  Though the exact cause of this lognormality remains unknown, it is precisely this sort of intriguing information which computational linguistics is designed to uncover.  This information could lead to further important discoveries regarding the underlying structure of Japanese, and could have any number of effects on the understanding of Japanese as a language.  Computational linguistics allows for very exciting additions to the scientific knowledge base to happen quickly and with very little room for doubt.
Without a computational approach to the structure of linguistic data, much of the information that is available now would still be hidden under the vastness of data within any single language.  Computational linguistics allows scientists to parse huge amounts of data reliably and efficiently, creating the possibility for discoveries unlike any seen in most other approaches.

Production Approaches

The production of language is equally as complex in the information it provides and the necessary skills which a fluent producer must have.  That is to say, comprehension is only half the battle of communication.  The other half is how a system produces language, and computational linguistics has made some very interesting discoveries in this area.
In a now famous paper published in 1950 Alan Turing proposed the possibility that machines might one day have the ability to "think". As a thought experiment for what might define the concept of thought in machines, he proposed an "imitation test" in which a human subject has two text-only conversations, one with a fellow human and another with a machine attempting to respond like a human. Turing proposes that if the subject cannot tell the difference between the human and the machine, it may be concluded that the machine is capable of thought. M. (1950). Computing machinery and intelligence. Mind, 59(236), 433-460. Retrieved from  Today this test is known as the Turing test and it remains an influential idea in the area of artificial intelligence.
One of the earliest and best known examples of a computer program designed to converse naturally with humans is the ELIZA program developed by Joseph Weizenbaum at MIT in 1966. The program emulated a Rogerian psychotherapist when responding to written statements and questions posed by a user. It appeared capable of understanding what was said to it and responding intelligently, but in truth it simply followed a pattern matching routine that relied on only understanding a few keywords in each sentence. Its responses were generated by recombining the unknown parts of the sentence around properly translated versions of the known words. For example in the phrase "It seems that you hate me" ELIZA understands "you" and "me" which matches the general pattern "you words me", allowing ELIZA to update the words "you" and "me" to "I" and "you" and replying "What makes you think I hate you?". In this example ELIZA has no understanding of the word "hate", but it is not required for a logical response in the context of this type of psychotherapy. (1966). ELIZA---a computer program for the study of natural language communication between man and machine. Communications of the ACM, 9(1), 36-45. doi:10.1145/365153.365168
Some projects are still trying to solve the problem which first started computational linguistics off as its own field in the first place. However, the methods have become more refined and clever, and consequently the results generated by computational linguists have become more enlightening.  In an effort to improve computer translation, several models have been compared, including hidden Markov models, smoothing techniques, and the specific refinements of those to apply them to verb translation. J., & Ney, H. (2003). A Systematic Comparison of Various Statistical Alignment Models. Computational Linguistics, 29(1), 19-51. doi:10.1162/089120103321337421  The model which was found to produce the most natural translations of German and French words was a refined alignment model with a first-order dependence and a fertility model16.  They also provide efficient training algorithms for the models presented, which can give other scientists the ability to improve further on their results. This type of work is specific to computational linguistics, and has applications which could vastly improve understanding of how language is produced and comprehended by computers.
Work has also been done in making computers produce language in a more naturalistic manner.  Using linguistic input from humans, algorithms have been constructed which are able to modify a system's style of production based on a factor such as linguistic input from a human, or more abstract factors like politeness or any of the five main dimensions of personality. (2011). Controlling user perceptions of linguistic style: Trainable generation of personality traits. Computational Linguistics, (January 2009). Retrieved from   This work takes a computational approach via parameter estimation models to categorize the vast array of linguistic styles we see across individuals and simplify it for a computer to work in the same way11, making human-computer interaction much more natural.

Comprehension Approaches

Much of the focus of modern computational linguistics is on comprehension. WIth the proliferation of the internet and the abundance of easily accessible written human language, the ability to create a program capable of understanding human language would have many broad and exciting possibilities, including improved search engines, automated customer service, and online education.
Early work in comprehension included applying Bayesian statistics to the task of optical character recognition, as illustrated by Bledsoe and Browing in 1959 in which a large dictionary of possible letters were generated by "learning" from example letters and then the probability that any one of those learned examples matched the new input was combined to make a final decision. W., & Browning, I. (1959). Pattern recognition and reading by machine. Papers presented at the December 1–3, 1959, eastern joint IRE-AIEE-ACM computer conference on - IRE-AIEE-ACM  '59 (Eastern), 225-232. New York, New York, USA: ACM Press. doi:10.1145/1460299.1460326 Other attempts at applying Bayesian statistics to language analysis included the work of Mosteller and Wallace (1963) in which an analysis of the words used in the Federalist papers was used to attempt to determine their authorship (concluding that Madison most likely authored the majority of the papers). (1963). Inference in an authorship problem. Journal of the American Statistical Association, 58(302), 275-309. Retrieved from 
In 1979 Terry Winograd developed an early natural language processing engine capable of interpreting naturally written commands within a simple rule governed environment. The primary language parsing program in this project was called SHRDLU, which was capable of carrying out a somewhat natural conversation with the user giving it commands, but only within the scope of the toy environment designed for the task. This environment consisted of different shaped and colored blocks, and SHRDLU was capable of interpreting commands such as "Find a block which is taller than the one you are holding and put it into the box." and asking questions such as "I don't understand which pyramid you mean." in response to the user's input. (1971). Procedures as a Representation for Data in a Computer Program for Understanding Natural Language. Retrieved from  While impressive, this kind of natural language processing has proven much more difficult outside the limited scope of the toy environment. Similarly a project developed by NASA called LUNAR was designed to provide answers to naturally written questions about the geological analysis of lunar rocks returned by the Apollo missions., Kaplan, R., & Nash-Webber, B. (1972). The lunar sciences natural language information system. Retrieved from 
Initial attempts at understanding spoken language were based on work done in the 1960s and 70s in signal modeling where an unknown signal is analyzed to look for patterns and to make predictions based on its history. An initial and somewhat successful approach to applying this kind of signal modeling to language was achieved with the use of hidden Markov models as detailed by Rabiner in 1989. (1989). A tutorial on hidden Markov models and selected applications in speech recognition. Proceedings of the IEEE. Retrieved from  Similar approaches were employed in early speech recognition attempts starting in the late 70s at IBM using word/part-of-speech pair probabilities., Baker, J., Cohen, P., & Jelinek, F. (1978). Recognition of continuously read natural corpus. Speech, and Signal, 422-424. Retrieved from 
More recently these kinds of statistical approaches have been applied to more difficult tasks such as topic identification using Bayesian parameter estimation to infer topic probabilities in text documents., & Ng, A. (2003). Latent dirichlet allocation. The Journal of Machine Learning, 3, 993-1022. Retrieved from 

Subfields

Computational linguistics can be divided into major areas depending upon the medium of the language being processed, whether spoken or textual; and upon the task being performed, whether analyzing language (recognition) or synthesizing language (generation).
Speech recognition and speech synthesis deal with how spoken language can be understood or created using computers. Parsing and generation are sub-divisions of computational linguistics dealing respectively with taking language apart and putting it together. Machine translation remains the sub-division of computational linguistics dealing with having computers translate between languages. The possibility of automatic language translation, however, has yet to be realized and remains a notorious branch of computational linguistics. G. (1965). Computational Linguistics. The American Mathematical Monthly, Vol. 72, No. 2, Part 2: Computers and
Computing, pp. 147-150. Retrieved from 
Some of the areas of research that are studied by computational linguistics include:
The Association for Computational Linguistics defines computational linguistics as:
Published online, Feb, 2005.[/ref]








