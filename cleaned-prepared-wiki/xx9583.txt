[[Obfuscation (software)]]

CATEGORIES: Anti-patterns, Articles with example C code, Obfuscation, Source code

In software development, obfuscation is the deliberate act of creating obfuscated code, i.e. source or machine code that is difficult for humans to understand.
Programmers may deliberately obfuscate code to conceal its purpose (security through obscurity) or its logic, in order to prevent tampering, deter reverse engineering, or as a puzzle or recreational challenge for someone reading the source code.
Programs known as obfuscators transform readable code into obfuscated code using various techniques.



The architecture and characteristics of some languages may make them easier to obfuscate than others. are some examples of languages easy to obfuscate.

Recreational obfuscation

Writing and reading obfuscated source code can be a brain teaser for programmers. A number of programming contests reward the most creatively obfuscated code: the International Obfuscated C Code Contest, Obfuscated Perl Contest, and International Obfuscated Ruby Code Contest.
Types of obfuscations include simple keyword substitution, use or non-use of whitespace to create artistic effects, and self-generating or heavily compressed programs.
Short obfuscated Perl programs may be used in signatures of Perl programmers.  These are JAPHs ("Just another Perl hacker").pm.txt

Examples

This is a winning entry from the International Obfuscated C Code ContestInternational Obfuscated C Code Contest written by Ian Phillipps in 1988
It is a C program that when compiled and run will generate the 12 verses of The 12 Days of Christmas. It contains all the strings required for the poem in an encoded form within the code.
A non-winning entry from the same year, the next example illustrates creative use of whitespace; it generates mazes of arbitrary length:Don Libes, Obfuscated C and Other Mysteries, John Wiley & Sons, 1993, pp 425. ISBN 0-471-57805-3
Modern C compilers don't allow constant strings to be overwritten, which can be avoided by changing "*M" to "M3" and omitting "M=".
The following example by Óscar Toledo Gutiérrez, Best of Show entry in the 19th IOCCC, implements a 8080 emulator complete with terminal and disk controller, capable of booting CP/M-80 and running CP/M applications,Óscar Toledo Gutiérrez: Intel 8080 emulator. 19th IOCCC. Best of Show.
An example of a JAPH:
This slowly displays the text "Just another Perl / Unix hacker", multiple characters at a time, with delays. An explanation can be found here. 
Some Python examples can be found in the official Python programming FAQ.

Disadvantages of obfuscation

Obfuscation can make reading, writing and reverse-engineering a program difficult and time-consuming, but not necessarily impossible. Some anti-virus software, such as AVG, will also alert their users when they land on a site with code obfuscated, as one of the purposes of obfuscation can be to hide malicious code. However, some developers may employ code obfuscation for the purpose of reducing file size or increasing security. The average user may not expect their antivirus software to provide alerts about an otherwise harmless piece of code, especially from trusted corporations, so such a feature may actually serve as a deterrent.

Obfuscating software

A variety of tools exists to perform or assist with code obfuscation.
These include experimental research tools created by academics, hobbyist tools,
commercial products written by professionals, and open-source software. ABCME is an obfuscation tool that assimilates assembly code to benign software codes.Seyyedhamzeh, Javad, ABCME: A Novel Metamorphic Engine, 17th National Computer Conference, Sharif University, tehran, Iran, 2012
There also exist deobfuscation tools that attempt to perform the reverse
transformation.
Although the majority of commercial obfuscation solutions work by transforming
either program source
code, or platform-independent bytecode as used by
Java and
.NET, there are also some that work with C and
C++ - languages that are typically compiled to native code, or work directly on compiled binaries.

Obfuscation and copyleft licenses

There has been debate on whether it is illegal to skirt copyleft software licenses by releasing source code in obfuscated form, such as in cases in which the author is less willing to make the source code available. The general consensus was that while unethical, it was not considered a violation. The issue is addressed in the GNU General Public License by defining source code as the "preferred" version of the source code be made available.



Notes



|last=Mateas
|first=Michael
|coauthors=Nick Montfort
|title=A Box, Darkly: Obfuscation, Weird Languages, and Code Aesthetics
|booktitle=Proceedings of the 6th Digital Arts and Culture Conference, IT University of Copenhagen, 1–3 December 2005
|pages=144–153
|url=
}}




