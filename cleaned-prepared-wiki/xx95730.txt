[[File:Simplification Zachman Enterprise Framework.US Department of Veterans Affairs (2002) A Tutorial on the Zachman Architecture Framework. Accessed 06 Dec 2008.[ref]Bill Inmon called this image "A simple example of The Zachman Framework" in the article 
In the 1997 Zachman Framework the rows are described as follows: 

Focus of columns

In summary, each perspective focuses attention on the same fundamental questions, then answers those questions from that viewpoint, creating different descriptive representations (i.e., models), which translate from higher to lower perspectives. The basic model for the focus (or product abstraction) remains constant. The basic model of each column is uniquely defined, yet related across and down the matrix. In addition, the six categories of enterprise architecture components, and the underlying interrogatives that they answer, form the columns of the Zachman Framework and these are:
In Zachman's opinion, the single factor that makes his framework unique is that each element on either axis of the matrix is explicitly distinguishable from all the other elements on that axis. The representations in each cell of the matrix are not merely successive levels of increasing detail, but actually are different representations — different in context, meaning, motivation, and use. Because each of the elements on either axis is explicitly different from the others, it is possible to define precisely what belongs in each cell.

Models of cells

The kinds of models or architectural descriptive representations are made explicit at the intersections of the rows and columns. An intersection is referred to as a cell. Because a cell is created by the intersection of a perspective and a focus, each is distinctive and unique. Since each cell is distinctive and unique, the contents of the cell are normalized and explicit per the perspective's focus.
The cell descriptions in the table itself uses general language for a specific set of targets. Below the focus of each cell in this particular Zachman Framework is explained: 
Eventually the cells with the detailed representation give Rules detail for (Why); Process detail for (How); Data detail for (What); Role detail for (Who); Location detail for (Where); and Event detail for (When).
There is a sixth row in the current Zachman framework, but it is not used for enterprise architecture — while the enterprise is described by rows one to six, enterprise architecture uses only rows one to five, thus only five rows are shown here.
Since the product development (i.e., architectural artifact) in each cell or the problem solution embodied by the cell is the answer to a question from a perspective, typically, the models or descriptions are higher-level depictions or the surface answers of the cell. The refined models or designs supporting that answer are the detailed descriptions within the cell. Decomposition (i.e., drill down to greater levels of detail) takes place within each cell. If a cell is not made explicit (defined), it is implicit (undefined). If it is implicit, the risk of making assumptions about these cells exists. If the assumptions are valid, then time and money are saved. If, however, the assumptions are invalid, it is likely to increase costs and exceed the schedule for implementation.

Framework set of rules

The framework comes with a set of rules:Adapted from: Sowa, J.F. & J.A. Zachman, 1992, and Inmon, W.H, J.A. Zachman, & J.G. Geiger, 1997. University of Omaha
The framework is generic in that it can be used to classify the descriptive representations of any physical object as well as conceptual objects such as enterprises. It is also recursive in that it can be used to analyze the architectural composition of itself. Although the framework will carry the relation from one column to the other, it is still a fundamentally structural representation of the enterprise and not a flow representation.

Flexibility in level of detail

One of the strengths of the Zachman Framework is that it explicitly shows a comprehensive set of views that can be addressed by enterprise architecture. Some feel that following this model completely can lead to too much emphasis on documentation, as artefacts would be needed for every one of the thirty cells in the framework.
John Zachman clearly states in his documentation, presentations, and seminars that, as framework, there is flexibility in what depth and breadth of detail is required for each cell of the matrix based upon the importance to a given organization.  An automaker, whose business goals may necessitate an inventory and process-driven focus, could find it beneficial to focus their documentation efforts on What and How columns.  Whereas a travel agent company, whose business is more concerned with people and event-timing, could find it beneficial to focus their documentation efforts on Who,  When, and Where columns.  However, there is no escaping the Why column's importance as it provides the business drivers for all the other columns.

Applications and influences

Since the 1990s the Zachman Framework has been widely used as a means of providing structure for Information Engineering-style enterprise modeling. Migrating to Object Technology: the semantic object modelling approach. Addison-Wesley, ISBN 0-201-59389-0. p. 322. The Zachman Framework can be applied both in commercial companies and in government agencies. Within a government organization the framework can be applied to an entire agency at an abstract level, or it can be applied to various departments, offices, programs, subunits and even to basic operational entities. White (2007). Managing Information in the Public Sector. p. 254.

Customization

Zachman Framework is applied in customized frameworks such as the TEAF, built around the similar frameworks, the TEAF matrix.  It is also used by VMware for the VMware Certified Advanced Professional and VMware Certified Design Expert programs.  Cisco also use the Zachman Framework for the Cisco Certified Design Expert and Cisco Certified Architect programs.

File:TEAF Matrix of Views and Perspectives.
File:Framework for EA Direction, Description, and Accomplishment Overview.
File:TEAF Products.
File:TEAF Work Products for EA Direction, Description, and Accomplishment.

Other sources:

Standards based on the Zachman Framework

Zachman Framework is also used as a framework to describe standards, for example standards for healthcare and healthcare information system. Each cell of the framework contains such a series of standards for healthcare and healthcare information system.

Mapping other frameworks

Another application of the Zachman Framework is as reference model for other enterprise architectures, see for example these four: 

File:EAP mapped to the Zachman Framework.jpg|EAP mapped to the Zachman Framework, 1999
File:DOD C4ISR Architecture Framework Products Mapped.jpg|Mapping the C4ISR, 1999
File:DoD Products Map to the Zachman Framework Cells. 
File:DoDAF Support to the Builder. 

Other examples:

Base for other enterprise architecture frameworks

Less obvious are the ways the original Zachman framework has stimulated the development of other enterprise architecture frameworks, such as in the NIST Enterprise Architecture Model, the C4ISR AE, the DOE AE, and the DoDAF:

File:NIST Enterprise Architecture Model.The Chief Information Officers Council (1999). Federal Enterprise Architecture Framework Version 1.1. September 1999.
File:LISI Reference Model 1997.
File:DOE Information Architecture Conceptual Model.
File:DoDAF Perspectives and Decomposition Levels.

=Example: One-VA Enterprise Architecture=

The Zachman Framework methodology has for example been used by the United States Department of Veterans Affairs (VA) to develop and maintain its One-VA Enterprise Architecture in 2001. This methodology required defining all aspects of the VA enterprise from a business process, data, technical, location, personnel, and requirements perspective. The next step in implementing the methodology has been to define all functions related to each business process and identify associated data elements. Once identified, duplication of function and inconsistency in data definition can be identified and resolved, . John A. Gauss, Assistant Secretary for Information and Technology, Department of Veterans Affairs, before the Subcommittee on Oversight and Investigations Committee on Veterans' Affairs U.S. House of Representatives. March 13, 2002.

File:Integrated Process Flow for VA IT Projects.jpg|Integrated Process Flow for VA IT Projects (2001)
File:VA Zachman Framework Portal.jpg|VA Zachman Framework Portal
File:VA EA Repository Introduction.jpg|VA EA Repository Introduction (2008)
File:A Tutorial on the Zachman Architecture Framework.jpg|A Tutorial on the Zachman Architecture Framework

The Department of Veterans Affairs at the beginning of the 21st century  planned to implement an enterprise architecture fully based on the Zachman Framework. 
Eventually an enterprise architecture repository was created at the macro level by the Zachman framework and at a cell level by the meta-model outlined below.Meta-Model Cell Details Accessed 25 Dec 2009
This diagramThis diagram is the exclusive work of Albin Martin Zuech of Annapolis Maryland, who placed it in the public domain in 2001. Al Zuech maintains the original visio diagram in numerous stages of its development between 2000 and present. Al Zuech was the Director, Enterprise Architecture Service at the Department of Veterans Affairs from 2001 until 2007. has been incorporated within the VA-EA to provide a symbolic representation of the metamodel it used, to describe the One-VA Enterprise Architecture and to build an EA Repository without the use of Commercial EA Repository Software. It was developed using an object oriented database within the Caliber-RM Software Product. Caliber-RM is intended to be used as a software configuration management tool; not as an EA repository.
However, this tool permitted defining entities and relationships and for defining properties upon both entities and relationships, which made it sufficient for building an EA repository, considering the technology   available in early 2003. The personal motivation in selecting this tool was that none of the commercial repository tools then available  provided a true Zachman Framework representation, and were highly proprietary, making it difficult to incorporate components from other vendors or from open source.
This diagram emphasizes several important interpretations of the Zachman Framework and its adaptation to information technology investment management. 
Row-six provides measured return on investment for Individual Projects and, potentially, for the entire investment portfolio. Without row-six the Framework only identifies sunk-cost, but the row-six ROI permits it to measure benefits and to be used in a continuous improvement process, capturing best practices and applying them back through row-two.








