[[File:History Of WineAppDB.

]]
The developers of the Direct3D portions of Wine have continued to implement new features such as pixel shaders to increase game support. Wine can also use native DLLs directly, thus increasing functionality, but then a license for Windows is needed unless the DLLs were distributed with the application itself.
winecfg is a GUI configuration utility included with Wine. Winecfg makes configuring Wine easier by making it unnecessary to edit the registry directly, although, if needed, this can be done with the included registry editor (similar to Windows regedit). Wine also includes its own open-source implementations of several other Windows programs, such as notepad, wordpad, control, iexplore, and explorer.
The Wine Application Database AppDB is a community-maintained database about which Windows applications work with Wine, and how well they work.

Backward compatibility

Wine ensures good backward compatibility with legacy Windows applications, including those written for Windows 3.1.  Wine can mimic different Windows versions required for some programs, going as far back as Windows version 2.0. However, Windows 1.x and Windows 2.x support was removed from Wine development version 1.3.12. If DOSBox is installed on the system (see below on MS-DOS), Wine development version 1.3.12 and later nevertheless show the "Windows 2.0" option for the Windows version to mimic, but Wine still won't run most Windows 2.0 programs because MS-DOS and Windows functions are not currently integrated.
Backward compatibility in Wine is superior to that of Windows, as newer versions of Windows can force users to upgrade legacy Windows applications. In many cases, Wine can offer better legacy support than newer versions of Windows with "Compatibility Mode". As illustrated by screenshot on the left, Wine can run 16-bit Windows programs on a 64-bit operating system, which uses an x86-64 (64-bit) CPU. 64-bit versions of Microsoft Windows cannot run 16-bit Windows programs.
Wine partially supports Windows console applications, and the user can choose which backend to use to manage the console (choices include raw streams, curses, and user32). When using the raw streams or curses backends, Windows applications will run in a Unix terminal.

64-bit applications

Preliminary support for 64-bit Windows applications was added to Wine 1.1.10, in December 2008. This requires at least gcc version 4.4, and the Wine developers expect that it will take significant time before support stabilizes. However, as almost all Windows applications are  available in 32-bit versions, and the 32-bit version of Wine can run on 64-bit platforms, this is seen as a non-issue.
The 64-bit port of Wine also has preliminary WoW64 support (), which allows both 32-bit and 64-bit Windows applications to run inside the same Wine instance.

Third-party applications

Some applications require more tweaking than simply installing the application in order to work properly, such as manually configuring Wine to use certain Windows DLLs. The Wine project does not integrate such workarounds into the Wine codebase, instead preferring to focus solely on improving Wine's implementation of the Windows ABI. While this approach focuses Wine development on long-term compatibility, it makes it difficult for users to run applications that require workarounds. Consequently, many third-party applications have been created to ease the use of those applications that don't work out of the box within Wine itself. The Wine wiki maintains a page of current and obsolete third-party applications.
 | url=
 | title=winetricks
 | publisher=Official Wine Wiki
 | accessdate=3 January 2009
}}[/ref]
 | url=
 | title=Wine doors
 | publisher=Wine doors
 | accessdate=27 April 2010
}}[/ref]
 | url=
 | title=IEs4Linux
 | publisher=Tatanka.br
 | accessdate=27 April 2010
}}[/ref]
 | url=
 | title=Wineskin
}}[/ref]
 | url=
 | title=OpenIndiana Bordeaux announcement
 | publisher=OpenIndiana-announce mailing list
 | accessdate=1 October 2010
}}[/ref] and Mac OS X computers.

Windows CE

Wine will not run Windows CE programs. There is an ongoing project to port Wine to ARM processors, which may in the future be used as a base for a WineCE running Windows CE programs.
However, there is a pre-alpha proof-of-concept version of Wine that can run Windows CE programs called WineCE: 

MS-DOS

Early versions of Microsoft Windows run on top of MS-DOS and Windows programs may depend on MS-DOS programs being runnable. Wine does not have good support for MS-DOS, but starting with development version 1.3.12, Wine tries running MS-DOS programs in DOSBox if DOSBox is available on the system.

Compatibility for Internet Explorer

Internet Explorer can be installed directly on Wine. However, it is not recommended to do so, since it crashes or does not work well on current version of wine which currently has poor support for Internet Explorer.
Internet Explorer 5 can be installed on Wine 1.3.9 but crashes frequently.
Internet Explorer 5.5 is buggy on Wine 1.3.6,
Internet Explorer 7 32-bit version does not work very well on 1.5.11,
Internet Explorer 8 also crashes constantly on Wine 1.6.
Internet Explorer 9 (both 32-bit cannot be installed.
An alternative for installing Internet Explorer directly is to use IEs4Linux. However, It is not compatible with latest versions of Wine, and the developement of IEs4Linux is still inactive.

Other versions of Wine

The core Wine development aims at a correct implementation of the Windows ABI as a whole and has sometimes lagged in some areas of compatibility with certain applications. Direct3D, for example, remained unimplemented until 1998, although newer releases have had an increasingly complete implementation.

CrossOver

CodeWeavers markets CrossOver specifically for running Microsoft Office and other major Windows applications, including some games. CodeWeavers employs Alexandre Julliard to work on Wine and contributes most of its code to the Wine project under the LGPL. CodeWeavers also released a new version called Crossover Mac for Intel-based Apple Macintosh computers on 10 January 2007.
CrossOver includes now the functionality of both the CrossOver Games and CrossOver Pro lines therefore CrossOver Games and CrossOver Pro are no longer available as single products.
CrossOver Games was optimized for running Windows video games. Unlike CrossOver, it didn't focus on providing the most stable version of Wine. Instead, experimental features are provided to support newer games.

Cedega / WineX

TransGaming Technologies produced the proprietary Cedega software. Formerly known as WineX, Cedega represented a fork from the last MIT-licensed version of Wine in 2002. Much like Crossover Games, TransGaming's Cedega was targeted towards running Windows video games. On 7 January 2011, TransGaming Technologies announced continued development of Cedega Technology under the GameTree Developer Program. TransGaming Technologies allowed members to keep using their Cedega ID and password until 28 February 2011.

Cider

TransGaming has also produced Cider, a library for Appleâ€“Intel architecture Macintoshes. Instead of being an end-user product, Cider (like Winelib) is a wrapper allowing developers to adapt their games to run natively on Intel Mac OS X without any changes in source code.

WINE@Etersoft

The Russian company Etersoft has been developing a proprietary version of Wine since 2006. WINE@Etersoft supports popular Russian applications (for example, 1C:Enterprise by 1C Company).[ref]
 , Etersoft was going to issue WINE@Etersoft CAD, which is oriented towards CAD systems such as AutoCAD, BricsCAD, and Compass-3D.

Darwine

Darwine is a port of the Wine libraries to Darwin and to Mac OS X for both the PowerPC and Intel x86 architectures. All patches for x86 version were merged back into the main branch of Wine in 2009. Development on the PPC version was abandoned. Mike Kronenberg previously created the WineHelper for Darwine to add a gui and OS X style app for interacting with Wine, which was later replaced by Winebottler. Darwine now provides OS X compatible packages compiled from the Wine repository.

Wine for Android

On 3 February 2013 at the FOSDEM talk in Brussels, Alexandre Julliard demonstrated an early demo of Wine running on Google's Android operating system.

Pipelight/wine-compholio

The  Pipelight Team has produced a custom version of Wine that acts as a wrapper for Windows NPAPI plugins within Linux browsers. some of which occasionally get approved and added to upsteam Wine.

Other projects using Wine source code

Other projects using Wine source code include:
 | url=
 | title=Developer FAQ
 | publisher=ReactOS
 | accessdate=25 May 2009
}}[/ref] In July 2009, Aleksey Bragin, the ReactOS project lead, started a new ReactOS branch called Arwinss, and it was officially announced in January 2010. Arwinss is an alternative implementation of the core Win32 components, and uses mostly unchanged versions of Wine's user32.dll.
 | url=
 | title=Wineskin FAQ
 | publisher=doh123
 | accessdate=7 November 2012
}}[/ref]

Reception

The Wine project has received a number of technical and philosophical complaints and concerns over the years.

Security

Because of Wine's ability to run Windows binary code, concerns have been raised over native Windows viruses and malware affecting Unix-like operating systems. Wine can run most malware, but programs running in Wine are confined to the current user's privileges, restricting some undesirable consequences. For this reason the developers of Wine recommend never running it as the superuser. Malware research software such as ZeroWine runs Wine on Linux in a virtual machine, to keep the malware completely isolated from the host system.
Another security concern is when the implemented specifications are ill-designed and allow for security compromise. Because Wine implements these specs, it will also implement any security vulnerabilities they contain.

Wine vs. native Unix applications

A common concern about Wine is that its existence means that vendors are less likely to write native Linux, Mac OS X, and BSD applications. As an example of this, it is worth considering IBM's 1994 operating system, OS/2 Warp. An article describes the weaknesses of OS/2 which killed it, the first one being:

The Wine project itself responds to these complaints on one of its wiki pages:

Also, the Wine Wiki page claims that Wine can help break the chicken-and-egg problem for Linux on the desktop:

The use of Wine for gaming has proved specifically controversial in the Linux community, as some feel it is preventing, or at least hindering, the further growth of native gaming on the platform. Wine Gamespot (Article by James Hills)An Interview With A Linux Game Porter Phoronix, 3 July 2009 (Article by Michael Larabel)

Microsoft

Microsoft has not made public statements about Wine. However, the Microsoft Update software will block updates to Microsoft applications running in Wine. On 16 February 2005, Ivan Leo Puoti discovered that Microsoft had started checking the Windows registry for the Wine configuration key and would block the Windows Update for any component. Puoti wrote, "It's ... the first time they've broken radio silence on the project."
The Windows Genuine Advantage (WGA) system also checks for existence of Wine registry keys. The WGA FAQ states that WGA will not run in Wine by design, as Wine does not constitute "genuine Windows". When WGA validation detects Wine running on the system, it will notify users that they are running non-genuine Windows and disallow genuine Windows downloads for that system. Despite this, some reports have circulated of the WGA system working in Wine,  although this loophole has now





Further reading




