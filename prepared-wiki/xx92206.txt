[[Design for Six Sigma]]

CATEGORIES: Design, Quality, Six Sigma

Design for Six Sigma (DFSS) is a separate and emerging business-process management methodology related to traditional Six Sigma.[tpl]Citation needed|date=September 2011[/tpl] While the tools and order used in Six Sigma require a process to be in place and functioning, DFSS has the objective of determining the needs of customers and the business, and driving those needs into the product solution so created.  DFSS is relevant to the complex system/product synthesis phase, especially in the context of unprecedented system development. It is process generation in contrast with process improvement. [tpl]Citation needed|date=September 2011[/tpl]
There are different options for the implementation of DFSS. Unlike Six Sigma, which is commonly driven via DMAIC (Define - Measure - Analyze - Improve - Control) projects, DFSS has spawned a number of stepwise processes, all in the style of the DMAIC procedure. Another option is, however, to integrate the DFSS approach into the Product Development Process.[tpl]cite journal|last=Hasenkamp|first=Torben|coauthors=Annika Ölme|title=Introducing Design for Six Sigma at SKF|journal=Int.J.Six Sigma and Competitive Advantage|year=2008|volume=4|issue=2|pages=172-189|doi=10.1504/IJSSCA.2008.020281[/tpl] 
DMADV, define – measure – analyze – design – verify, is sometimes synonymously referred to as DFSS.  The traditional DMAIC Six Sigma process, as it is usually practiced, which is focused on evolutionary and continuous improvement manufacturing or service process development, usually occurs after initial system or product design and development have been largely completed.  DMAIC Six Sigma as practiced is usually consumed with solving existing manufacturing or service process problems and removal of the defects and variation associated with defects.  On the other hand, DFSS (or DMADV) strives to generate a new process where none existed, or where an existing process is deemed to be inadequate and in need of replacement.  DFSS aims to create a process with the end in mind of optimally building the efficiencies of Six Sigma methodology into the process before implementation; traditional Six Sigma seeks for continuous improvement after a process already exists.

==DFSS as an approach to design==

DFSS seeks to avoid manufacturing/service process problems by using advanced Voice of the Customer techniques and proper systems engineering techniques to avoid process problems at the outset (e.g., fire prevention).  When combined, these methods obtain the proper needs of the customer, and derive engineering system parameter requirements that increase product and service effectiveness in the eyes of the customer and all other people.  This yields products and services that provide great customer satisfaction and increased market share. These techniques also include tools and processes to predict, model and simulate the product delivery system (the processes/tools, personnel and organization, training, facilities, and logistics to produce the product/service) as well as the analysis of the developing system life cycle itself with proper investigation results and gains to ensure absolute customer satisfaction with the proposed system design solution.  In this way, DFSS is closely related to systems engineering, operations research (solving the knapsack problem), systems architecture, workflow balancing, and concurrent engineering and even more. DFSS is largely a design activity requiring specialized tools including: quality function deployment (QFD), axiomatic design, TRIZ, Design for X, design of experiments (DOE), Taguchi methods, tolerance design, robustification and Response Surface Methodology for a single or multiple response optimization.  While these tools are sometimes used in the classic DMAIC Six Sigma process, they are uniquely used by DFSS to analyze new and unprecedented systems/products.

==Distinctions from DMAIC==

Proponents of DMAIC and Lean techniques might claim that DFSS falls under the general rubric of Six Sigma or Lean Six Sigma.  It is often seen that the tools used for DFSS techniques vary widely from those used for DMAIC Six Sigma.  In particular, DMAIC practitioners often use new or existing mechanical drawings and manufacturing process instructions as the originating information to perform their analysis, while DFSS practitioners often use system simulations and parametric system design/analysis tools to predict both cost and performance of candidate system architectures.  While it can be claimed that two processes are similar, in practice the working medium differs enough so that DFSS requires different tool sets in order to perform its system design tasks.  DMAIC Six Sigma may still be used during depth-first plunges into the system architecture analysis and for "back end" Six Sigma processes; DFSS provides system design processes used in front-end complex system designs.
Traditional six sigma methodology, DMAIC, has become a standard process optimization tool for the chemical process industries.
However, it has become clear that the promise of six sigma, specifically, 3.4 defects per million opportunities
(DPMO), is simply unachievable after the fact. Consequently,there has been a growing movement to implement
six sigma design usually called design for six sigma DFSS. This methodology begins with defining
customer needs and leads to the development of robust
processes to deliver those needs.[tpl]cite book|last=Lee|first=Sunggyu|title=Encyclopedia of Chemical Processing  Vol 1,|year=2012|publisher=Taylor & Francis|isbn=978-0-8247-5563-8|page=2719–2734|url=http://www.tandfonline.com/doi/book/10.1081/E-ECHP?doi=10.1081/E-ECHP&sort=title&letter=S.UZy-tNiRyYE[/tpl]

==Similarities with other methods==

Arguments about what makes DFSS different from Six Sigma demonstrate the similarities between DFSS and other established engineering practices such as probabilistic design and design for quality. In general Six Sigma with its DMAIC roadmap focuses on improvement of an existing process or processes.  DFSS focuses on the creation of new value with inputs from customers, suppliers and business needs. While traditional Six Sigma may also use those inputs, the focus is again on improvement and not design of some new product or system. It also shows the engineering background of DFSS. However, like other methods developed in engineering, there is no theoretical reason why DFSS can't be used in areas outside of engineering.

==Software engineering applications==

Historically, although the first successful Design for Six Sigma projects in 1989 and 1991 predate establishment of the DMAIC process improvement process, Design for Six Sigma (DFSS) is accepted in part because Six Sigma organisations found that they could not optimise products past three or four Sigma without fundamentally redesigning the product, and because improving a process or product after launch is considered less efficient and effective than designing in quality. ‘Six Sigma’ levels of performance have to be ‘built-in’. 
DFSS for software is essentially a non superficial modification of "classical DFSS" since the character and nature of software is different from other fields of engineering. The methodology describes the detailed process for successfully applying DFSS methods and tools throughout the software product design, covering the overall Software Development life cycle: requirements, architecture, design, implementation, integration, optimization, verification and validation (RADIOV). The methodology explains how to build predictive statistical models for software reliability and robustness and shows how simulation and analysis techniques can be combined with structural design and architecture methods to effectively produce software and information systems at Six Sigma levels.
DFSS in software acts as a glue to blend the classical modelling techniques of software engineering such as object-oriented design or Evolutionary Rapid Development with statistical, predictive models and simulation techniques. The methodology provides Software Engineers with practical tools for measuring and predicting the quality attributes of the software product and also enables them to include software in system reliability models.

==References==

Define, Identify, Measure

