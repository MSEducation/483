[[Maximum cut]]

CATEGORIES: Graph theory objects, Combinatorial optimization, NP-complete problems, Computational problems in graph theory

For a graph, a maximum cut  is a cut whose size is at least the size of any other cut. The problem of finding a maximum cut in a graph is known as the max-cut problem.
The problem can be stated simply as follows.  One wants a subset S of the vertex set such that the number of edges between S and the complementary subset is as large as possible.
There is a more advanced version of the problem called weighted max-cut.  In this version each edge has a real number, its weight, and the objective is to maximize not the number of edges but the total weight of the edges between S and its complement.  The weighted max-cut problem is often, but not always, restricted to non-negative weights, because negative weights can change the nature of the problem.

==Computational complexity==

The following decision problem related to maximum cuts has been studied widely in theoretical computer science:
This problem is known to be NP-complete. It is easy to see that the problem is in NP: a yes answer is easy to prove by presenting a large enough cut. The NP-completeness of the problem can be shown, for example, by a transformation from maximum 2-satisfiability (a restriction of the maximum satisfiability problem).[tpl]harvtxt|Garey|Johnson|1979[/tpl]. The weighted version of the decision problem was one of Karp's 21 NP-complete problems;[tpl]harvtxt|Karp|1972[/tpl]. Karp showed the NP-completeness by a reduction from the partition problem.
The canonical optimization variant of the above decision problem is usually known as the maximum cut problem or max-cut problem and is defined as:

==Polynomial-time algorithms==

As the max-cut problem is NP-hard, no polynomial-time algorithms for max-cut in general graphs are known.
However, in planar graphs, the maximum cut problem is dual to the route inspection problem (the problem of finding a shortest tour that visits each edge of a graph at least once), in the sense that the edges that do not belong to a maximum cut of a graph G are the duals of the edges that are doubled in an optimal inspection tour of the dual graph of G. The optimal inspection tour forms a self-intersecting curve that separates the plane into two subsets, the subset of points for which the winding number of the curve is even and the subset for which the winding number is odd; these two subsets form a cut that includes all of the edges whose duals appear an odd number of times in the tour. The route inspection problem may be solved in polynomial time, and this duality allows the maximum cut problem to also be solved in polynomial time for planar graphs.[tpl]harvtxt|Hadlock|1975[/tpl].

==Approximation algorithms==

The max-cut problem is APX-hard,[tpl]harvtxt|Papadimitriou|Yannakakis|1991[/tpl] prove MaxSNP-completeness. meaning that there is no polynomial-time approximation scheme (PTAS), arbitrarily close to the optimal solution, for it, unless P = NP. Thus, every polynomial-time approximation algorithm achieves an approximation ratio strictly less than one.
[/ref] It has been shown by Khot et al. that, if the unique games conjecture is true, then this is the best possible approximation ratio for maximum cut.[tpl]harvtxt|Khot|Kindler|Mossel|O'Donnell|2007[/tpl].

==Maximum bipartite subgraph==

A cut is a bipartite graph.  The max-cut problem is essentially the same as the problem of finding a bipartite subgraph with the most edges.
In summary, if there is a bipartite subgraph with k edges, there is a cut with at least k cut edges, and if there is a cut with k cut edges, there is a bipartite subgraph with k edges. Therefore the problem of finding a maximum bipartite subgraph is essentially the same as the problem of finding a maximum cut.[tpl]harvtxt|Newman|2008[/tpl]. The same results on NP-hardness, inapproximability and approximability apply to both the maximum cut problem and the maximum bipartite subgraph problem.

==See also==

==Notes==

==References==

 | last1=Ausiello | first1=Giorgio
 | last2=Crescenzi | first2=Pierluigi
 | last3=Gambosi | first3=Giorgio
 | last4=Kann | first4=Viggo
 | last5=Marchetti-Spaccamela | first5=Alberto
 | last6=Protasi | first6=Marco
 | title=Complexity and Approximation: Combinatorial Optimization Problems and Their Approximability Properties
 | publisher=Springer
 | year=2003
}}.
 | last1=Garey | first1=Michael R. | authorlink1=Michael R. Garey
 | last2=Johnson | first2=David S. | authorlink2=David S. Johnson
 | year = 1979
