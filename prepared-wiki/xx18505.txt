 introvert at [[National Security Agency|NSA]]? Va gur ryringbef,
 gur rkgebireg ybbxf ng gur BGURE thl'f fubrf.
Transforming the entire text via ROT13 form, the answer to the joke is revealed:
 Ubj pna lbh gryy na rkgebireg sebz na
 vagebireg ng AFN? In the elevators,
 the extrovert looks at the OTHER guy's shoes.
A second application of ROT13 would restore the original.

==Usage==

ROT13 was in use in the net.jokes newsgroup by the early 1980s.Early uses of ROT13 found in the Google USENET archive date back to 8 October 1982, posted to the net.jokes newsgroup http://groups.google.com/groups?selm=bnews.desoto.299http://groups.google.com/groups?selm=bnews.utcsrgv.596. It is used to hide potentially offensive jokes, or to obscure an answer to a puzzle or other spoiler.[tpl]Cite web|date= 29 December 2003|first=Eric S. (ed.)|last=Raymond|authorlink=Eric S. Raymond|url=http://www.catb.org/~esr/jargon/html/R/rot13.html |title=ROT13 |accessdate=19 September 2007 |work=The Jargon File, 4.4.7 [/tpl] A shift of thirteen was chosen over other values, such as three as in the original Caesar cipher, because thirteen is the value for which encoding and decoding are equivalent, thereby allowing the convenience of a single command for both. ROT13 is typically supported as a built-in feature to newsreading software. Email addresses are also sometimes encoded with ROT13 to hide them from less sophisticated spam bots.
ROT13 is an example of the encryption algorithm known as a Caesar cipher, attributed to Julius Caesar in the 1st century BC.[tpl]Cite book|last=Kahn |first=David |authorlink=David Kahn (writer) |coauthors= |title=The Codebreakers: The Story of Secret Writing |publisher=Macmillan |location=New York |isbn=0-684-83130-9 [/tpl]
ROT13 is not intended to be used where secrecy is of any concern—the use of a constant shift means that the encryption effectively has no key, and decryption requires no more knowledge than the fact that ROT13 is in use. Even without this knowledge, the algorithm is easily broken through frequency analysis. Because of its utter unsuitability for real secrecy, ROT13 has become a catchphrase to refer to any conspicuously weak encryption scheme; a critic might claim that "56-bit DES is little better than ROT13 these days". Also, in a play on real terms like "double DES", the terms "double ROT13", "ROT26", or "2ROT13" crop up with humorous intent, including a spoof academic paper "On the 2ROT13 Encryption Algorithm".[tpl]Cite web|title=On the 2ROT13 Encryption Algorithm|format=PDF|date=25 September 2004 |url=http://www.pruefziffernberechnung.de/Originaldokumente/2rot13.pdf|publisher=Prüfziffernberechnung in der Praxis|accessdate=20 September 2007[/tpl]  As applying ROT13 to an already ROT13-encrypted text restores the original plaintext, ROT26 is equivalent to no encryption at all. By extension, triple-ROT13 (used in joking analogy with 3DES) is equivalent to regular ROT13.
In December 1999, it was found that Netscape Communicator used ROT-13 as part of an insecure scheme to store email passwords.[tpl]Cite web|author=Hollebeek, Tim|coauthors=Viega, John|url=http://citeseer.ist.psu.edu/500396.html |publisher=Reliable Software Technologies|title=Bad Cryptography in the Netscape Browser: A Case Study|accessdate=20 September 2007[/tpl] In 2001, Russian programmer Dimitry Sklyarov demonstrated that an eBook vendor, New Paradigm Research Group (NPRG), used ROT13 to encrypt their documents; it has been speculated that NPRG may have mistaken the ROT13 toy example—provided with the Adobe eBook software development kit—for a serious encryption scheme.[tpl]Cite web|first=Bruce|last=Perens|authorlink=Bruce Perens|url=http://www.zdnet.com/news/dimitry-sklyarov-enemy-or-friend/116424 |title=Dimitry Sklyarov: Enemy or friend?|date=1 September 2001|accessdate=3 February 2011|publisher=ZDNet News[/tpl] Windows XP uses ROT13 on some of its registry keys.[tpl]Cite web|first=Vic|last=Ferri |title=The Count Keys in the Windows Registry|url=http://www.personal-computer-tutor.com/abc3/v29/vic29.htm|publisher=ABC: All 'Bout Computers|date=4 January 2007|accessdate=20 September 2007[/tpl]
The ROT13 encryption is used to cipher cache hints on Geocaching.com.

==Letter games and net culture==

ROT13 provides an opportunity for letter games. Some words will, when transformed with ROT13, produce another word. The longest[tpl]citation needed|date=September 2013[/tpl] example in the English language is the pair of 7-letter words abjurer and nowhere; there is also the 7-letter pair Chechen and purpura. Other examples of words like these are shown in the table.[tpl]Cite web|url= http://www.furrfu.org/rot13words.html |last=De Mulder|first=Tom|title= ROT13 Words|accessdate=19 September 2007 |work=Furrfu![/tpl] The pair gnat and tang is an interesting example which are both ROT13 reciprocals and (taken together) a palindrome.
The 1989 International Obfuscated C Code Contest (IOCCC) included an entry by Brian Westley. Westley's computer program can be encoded in ROT13 or reversed and still compiles correctly. Its operation, when executed, is either to perform ROT13 encoding on, or to reverse its input.[tpl]Cite web| url = http://www.ioccc.org/1989/westley.c | title = westley.c | work = IOCCC | year = 1989 | first = Brian | last = Westley |accessdate=13 August 2007[/tpl]
The newsgroup alt.folklore.urban coined a word—furrfu—that was the ROT13 encoding of the frequently encoded utterance "sheesh". "Furrfu" evolved in mid-1992 as a response to postings repeating urban myths on alt.folklore.urban, after some posters complained that "Sheesh!" as a response to newcomers was being overused.[tpl]Cite web|url=http://foldoc.doc.ic.ac.uk/foldoc/foldoc.cgi?furrfu |title=Furrfu |publisher=Foldoc |date=25 October 1995 |accessdate=13 August 2007[/tpl]

==Variants==

ROT5 is a practice similar to ROT13 that applies to numeric digits (0 to 9). ROT13 and ROT5 can be used together in the same message.
ROT47 is a derivative of ROT13 which, in addition to scrambling the basic letters, also treats numbers and common symbols. Instead of using the sequence A–Z as the alphabet, ROT47 uses a larger set of characters from the common character encoding known as ASCII. Specifically, the 7-bit printable characters, excluding space, from decimal 33 '!' through 126 '~', 94 in total, taken in the order of the numerical values of their ASCII codes, are rotated by 47 positions, without special consideration of case. For example, the character A is mapped to p, while a is mapped to 2. The use of a larger alphabet produces a more thorough obfuscation than that of ROT13; for example, a telephone number such as +1-415-839-6885 is not obvious at first sight from the scrambled result Z`\c`d\gbh\eggd. On the other hand, because ROT47 introduces numbers and symbols into the mix without discrimination, it is more immediately obvious that the text has been enciphered.
Example:
enciphers to
The GNU C library, a set of standard routines available for use in computer programming, contains a function—memfrob()[tpl]Cite web|url=http://www.gnu.org/software/libc/manual/html_node/Trivial-Encryption.html|date=3 December 2006|title=5.10 Trivial Encryption|work=The GNU C Library Reference Manual |publisher=Free Software Foundation|accessdate=20 September 2007[/tpl]—which has a similar purpose to ROT13, although it is intended for use with arbitrary binary data. The function operates by combining each byte with the binary pattern 00101010 (42) using the exclusive or (XOR) operation. This effects a simple XOR cipher. Like ROT13, memfrob() is self-reciprocal, and provides a similar, virtually absent, level of security.

==Implementation==

The ROT13 and ROT47 are fairly easy to implement using the Unix terminal application tr; to encrypt the string "The Quick Brown Fox Jumps Over The Lazy Dog" in ROT13:
and the same string for ROT47:
and
In the Vim text editor, one can ROT13 a selection with the command:Best of VIM Tips, gVIM's Key Features zzapper

==See also==

==References==

==External links==


