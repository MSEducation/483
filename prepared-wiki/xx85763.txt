[[Null modem]]

CATEGORIES: Modems, Multiplayer null modem games, Out-of-band management

Null modem is a communication method to connect two DTEs (computer, terminal,
printer etc.) directly using an RS-232 serial cable. The name stems from the historical use of the RS-232 cable to connect two teleprinter devices to modems in order to communicate with one another; null modem communication was possible by instead using RS-232 to connect the teleprinters directly to one another.
The RS-232 standard is asymmetrical as to the definitions of the two ends of the communications link so it assumes that one end is a DTE and the other is a DCE e.g. a modem. With a null modem connection the transmit and receive lines are crosslinked. Depending on the purpose, sometimes also one or more handshake lines are crosslinked. Several wiring layouts are in use because the null modem connection is not covered by a standard.

==Origins==

Originally, the RS-232 standard was developed and used for teleprinter machines which could communicate with each other over phone lines. Each teleprinter would be physically connected to its modem via an RS-232 connection and the modems could call each other to establish a remote connection between the teleprinters. If a user wished to connect two teleprinters directly without modems (null modem) then they would crosslink the connections. The term null modem may also refer to the cable or adaptor itself as well as the connection method.[tpl]cite web |author=Lammert Bies |url=http://www.lammertbies.nl/comm/info/RS-232_null_modem.html |title=RS232 serial null modem cable wiring and tutorial |publisher=lammertbies.nl |date= |accessdate=2013-12-26[/tpl]
Null modem cables were popular means of transferring data between the early personal computers in the 1980s and early 1990s.

==Cables and adapters==

A null modem cable is a RS-232 serial cable where the transmit and receive lines are crosslinked. In some cables there are also handshake lines crosslinked. In many situations a straight through serial cable is used, together with a null modem adapter. The adapter contains the necessary crosslinks between the signals.[tpl]cite web |url=http://www.nullmodem.com/NullModem.htm |title=Null Modem |publisher=nullmodem.com |date=2008-11-07 |accessdate=2013-12-26[/tpl][tpl]cite web |url=http://www.hardwarebook.info/Nullmodem_(9-9) |title=Nullmodem (9-9) - HwB |publisher=hardwarebook.info |date=2006-12-27 |accessdate=2013-12-26[/tpl]

===Wiring diagrams===

Below is a very common wiring diagram for a null model cable providing full handshaking, which works with software relying on proper assertion of the Data Carrier Detect (CD) signal:

==Applications==

The original application of a null modem was to connect two teleprinter terminals directly without using modems. As the RS-232 standard was adopted by other types of equipment, designers needed to decide whether their devices would have DTE-like or DCE-like interfaces. When an application required that two DTE's (or two DCE's) needed to communicate with each other, then a null modem was necessary.[tpl]cite web |url=http://adtpro.sourceforge.net/connectionsserial.html |title=ADTPro - ADTPro Serial Cabling |publisher=sourceforge.net |date=2011-01-25 |accessdate=203-12-26[/tpl]
Null modems were commonly used for file transfer between computers, or remote operation. Under the Microsoft Windows operating system, the direct cable connection can be used over a null modem connection. The later versions of MS-DOS were shipped with the InterLnk program. Both pieces of software allow the mapping of a hard disk on one computer as a network drive on the other computer. No Ethernet hardware (such as a network interface card or a modem) is required for this.[tpl]cite web |url=http://www.angelfire.com/ma/mantasdos/interlnk.html |title=MS-DOS External commands - INTERLNK |publisher=angelfire.com |date= |accessdate=2013-12-26[/tpl] On the Commodore Amiga system, a null modem connection was a common way of playing multiplayer games between two machines.
The popularity and availability of faster information exchange systems such as Ethernet made the use of null modem cables less common.  Nowadays, such a cable can still be useful for kernel mode development, since it allows the user to remotely debug a kernel with a minimum of device drivers and code (a serial driver mainly consists of two FIFO buffers and an interrupt service routine).  KGDB for Linux, ddb for BSD and WinDbg or KD for Windows can be used to remotely debug systems, for example. This can also provide a serial console through which the in-kernel debugger can be dropped to in case of kernel panics, in which case the local monitor and keyboard may not be usable anymore (the GUI reserves those resources and dropping to the debugger in the case of a panic won't free them).
Another context where these cables can be useful is when administering "headless" devices providing a serial administration console (i.e. managed switches, rackmount server units and various embedded systems). An example of embedded systems that widely use null modems for remote monitoring include RTU's, device controllers and smart sensing devices. These devices tend to reside in close proximity and lend themselves to short run serial communication through protocols such as DNP3, Modbus and other IEC variants. The Utility Industries such as Electric, Oil & Gas and Water Utilities are slow to respond to newer networking technologies which may be due to large investments in capital equipment that has useful service life measured in decades. Serial ports and null modem cables are still widely used in these industries with ethernet just slowly becoming a widely available option.

==Types of null modem==

Connecting two DTE devices, together requires a null modem that acts as a DCE between the devices by swapping the corresponding signals (TD-RD, DTR-DSR, and RTS-CTS). This can be done with a separate device and two cables, or using a cable wired to do this.  If devices require Carrier Detect, it can be simulated by connecting DSR and DCD internally in the connector, thus obtaining CD from the remote DTR signal.  One feature of the Yost standard is that a null modem cable is a "rollover cable" that just reverses pins 1 through 8 on one end to 8 through 1 on the other end.

===No hardware handshaking===

The simplest type of serial cable has no hardware handshaking. This cable has only the data and signal ground wires connected. All of the other pins have no connection. With this type of cable flow control has to be implemented in the software. The use of this cable is restricted to data-traffic only on its cross connected Rx and Tx lines. This cable can also be used in devices that do not need or make use of modem control signals.

===Loopback handshaking===

Because of the compatibility issues and potential problems with a simple null modem cable, a solution was developed to trick the software into thinking there was handshaking available. However, the cable pin out merely loops back and does not physically support the hardware flow control.
This cable could be used with more software but it had no actual enhancements over its predecessor. The software would work thinking it had hardware flow control but could suddenly stop when higher speeds were reached and with no identifiable reason.

===Partial handshaking===

In this cable the flow control lines are still looped back to the device. However, they are done so in a way that still permits Request To Send (RTS) and Clear To Send (CTS) flow control but has no actual functionality. The only way the flow control signal would reach the other device is if the opposite device checked for a Carrier Detect (CD) signal (at pin 1 on a DE-9 cable and pin 8 on a DB-25 cable). As a result only specially designed software could make use of this partial handshaking. Software flow control still worked with this cable.

===Full handshaking===

This cable is incompatible with the previous types of cables' hardware flow control, due to a crossing of its RTS/CTS pins. With suitable software, the cable is capable of much higher speeds than its predecessors. It also supports software flow of control.

===Virtual null modem===

A virtual null modem is a communication method to connect two computer applications directly using a virtual serial port. Unlike a null modem cable, a virtual null modem is a software solution which emulates a hardware null modem within the computer.[tpl]cite web |url=http://sourceforge.net/projects/com0com |title=Null-modem emulator | Download Null-modem emulator software for free at |publisher=sourceforge.net |date= |accessdate=2013-12-26[/tpl][tpl]cite web |url=http://developer.berlios.de/projects/n8vbvcomdriver/ |title=BerliOS Developer: Project Summary - N8VB_vCOM Virtual Null Modem Cable |publisher=berlios.de |date=2005-07-15 |accessdate=2013-12-26[/tpl] All features of a hardware null modem are available in a virtual null modem as well. There are some advantages to this:
For instance, DOSBox has allowed older DOS games to use virtual null modems.
Another common example consists of Unix pseudo terminals (pty) which present a standard tty interface to user applications, including virtual serial controls.  Two such ptys may easily be linked together by an application to form a virtual null modem communication path.

==See also==

==References==


