[[SciPy]]

CATEGORIES: Cross-platform software, Free science software, Numerical analysis software for Linux, Numerical analysis software for OS X, Numerical analysis software for Windows, Numerical programming languages, Python scientific libraries

SciPy (pronounced “Sigh Pie”) is a computing environment and open source ecosystem of software for the Python programming language used by scientists, analysts and engineers doing scientific computing and technical computing. SciPy also refers to a specific open source library / Python package of algorithms and mathematical tools that form a core element of the SciPy environment for technical computing. The SciPy environment includes the NumPy and SciPy libraries, along with an expanding set of additional scientific computing libraries like IPython, Matplotlib, pandas and SymPy.[tpl]cite web|url=http://www.scipy.org/about.html|title=Scientific Computing Tools for Python|publisher=SciPy.org[/tpl] It has similar users to other applications such as MATLAB, GNU Octave, and Scilab.
The name SciPy is also used by a family of conferences for users and developers of these tools: SciPy (in the United States), EuroSciPy (in Europe) and SciPy.in (in India).[tpl]cite web|url=http://conference.scipy.org/index.html|title=SciPy Conferences[/tpl]
SciPy contains modules for optimization, linear algebra, integration, interpolation, special functions, FFT, signal and image processing, ODE solvers and other tasks common in science and engineering.
SciPy is currently distributed under the BSD license, and its development is sponsored by an open community of developers.

==SciPy Scientific Computing Environment==

The SciPy environment includes many dedicated software tools. For example,

==The SciPy Library/Package==

SciPy is also a package of key algorithms and functions core to Python's scientific computing capabilities. Available sub-packages include:

==Data structures==

The basic data structure in SciPy is a multidimensional array provided by the NumPy module. NumPy provides some functions for linear algebra, Fourier transforms and random number generation, but not with the generality of the equivalent functions in SciPy. NumPy can also be used as an efficient multi-dimensional container of data with arbitrary data-types. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.Older versions of SciPy used Numeric as an array type, which is now deprecated in favor of the newer NumPy array code.[tpl]cite web|url=http://numpy.scipy.org/|title=NumPy Homepage[/tpl]

==History of SciPy==

In the 1990s, Python was extended to include an array type for numerical computing which eventually evolved into the current NumPy package. As of 2000, there was a growing number of extension modules and increasing interest in creating a complete environment for scientific and technical computing. In 2001, Travis Oliphant, Eric Jones, and Pearu Peterson merged code they'd written, and called the resulting package SciPy. The newly created package provided a standard collection of common numerical operations on top of the Numeric array data structure. Shortly thereafter, Fernando Pérez released IPython, an enhanced interactive shell widely used in the technical computing community, and John Hunter released the first version of Matplotlib, the 2D plotting library for technical computing. Since then the SciPy environment has continued to grow with more packages and tools for technical computing.[tpl]cite web|url=http://wiki.scipy.org/History_of_SciPy|title=History of SciPy[/tpl][tpl]cite web|url=http://csc.ucdavis.edu/~chaos/courses/nlp/Software/NumPyBook.pdf|title=Guide to NumPy[/tpl][tpl]cite web|url=http://www.computer.org/csdl/mags/cs/2011/02/mcs2011020009.html|title=Python for Scientists and Engineers[/tpl]

==See also==

==External links==

==Notes==


