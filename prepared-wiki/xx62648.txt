[[Component Library for Cross Platform]]

CATEGORIES: Borland, Component-based software engineering, Pascal libraries, Computer libraries

Component Library for Cross Platform (CLX) (pronounced clicks), is a cross-platform visual component-based framework for developing Microsoft Windows and Linux applications. It is developed by Borland for use in its Kylix, Delphi, and C++ Builder software development environment.
Its aim was to replace the popular Microsoft Foundation Classes with Visual Component Library. CLX was based on Qt by Nokia. The API of CLX almost completely followed VCL. It was envisioned that existing applications using VCL would be recompiled with CLX.
However, due to lacklustre performance on Windows, subtle differences from VCL, and bugs, it didn't become the expected successor to VCL. Commercial failure of Kylix stopped further development of CLX.
In terms of object-oriented approach, CLX forms an object hierarchy where the TObject class serves as the base class. All other classes inherit or indirectly inherit the TObject class.
Today, many concepts that were defined with CLX have been implemented with the Lazarus Component Library (LCL) for the Lazarus IDE. By docking to different widgetsets, the LCL is able to support an even larger spectrum of platforms including Mac OS X and Android.

==See also==


