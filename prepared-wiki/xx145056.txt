[[Compilation error]]

CATEGORIES: Debugging, Computer errors

Compilation error refers to a state when a compiler fails to compile a piece of computer program source code, either due to errors in the code, or, more unusually, due to errors in the compiler itself. A compilation error message often helps programmers debugging the source code for possible errors.

==Examples==

===Common C++ compilation errors===

doy.cpp: In function `int main()':
doy.cpp:25: `DayOfYear' undeclared (first use this function)[tpl]cite web|title=Common C++ Compiler and Linker Errors|url=http://www.csee.umbc.edu/courses/undergraduate/341/misc/CommonErrors.shtml[/tpl]
This means that the variable "DayOfYear" is trying to be used before being declared.
xyz.cpp: In function `int main()': xyz.cpp:6: `cout' undeclared (first use this function)
This means that the programmer most likely forgot to include iostream.
somefile.cpp:24: parse error before `something'[tpl]cite web|title=Compiler, Linker and Run-Time Errors|url=http://www.cs.bu.edu/teaching/cpp/debugging/errors/[/tpl]
This could mean that a semi-colon is missing at the end of the previous statement.

===Internal Compiler Errors===

An internal compiler error (commonly abbreviated as ICE) is an error that occurs not due to erroneous source code but rather due to a bug in the compiler itself.  They can sometimes be worked around by making small, insignificant changes to the source code around the line indicated by the error (if such an line is indicated at all), but sometimes larger changes must be made such as refactoring the code to avoid certain constructs or using a different compiler or different version of the compiler.
Example of an internal compiler error:
 somefile.c:1001: internal compiler error: Segmentation fault
 Please submit a full bug report,
with preprocessed source if appropriate.
See  for instructions.

==References==


