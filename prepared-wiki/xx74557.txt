[[Lab color space]]

CATEGORIES: Color space

A Lab'' color space''' is a color-opponent space with dimension L for lightness and a and b' for the color-opponent dimensions, based on nonlinearly compressed CIE XYZ color space coordinates.
The dimensions of the Hunter 1948 ''L'', ''a'', ''b'' color space are L, a, and b.[tpl]cite journal|title=Photoelectric Color-Difference    Meter|first=Richard Sewall|last=Hunter|journal=JOSA|volume=38|issue=7|pages=661|date=July 1948| url=http://www.opticsinfobase.org/abstract.cfm?URI=josa-38-7-651[/tpl] (Proceedings of the Winter Meeting of the Optical Society of America)[tpl]cite journal|title= Accuracy, Precision, and Stability of New Photo-electric Color-Difference Meter|first=Richard Sewall|last=Hunter|journal=JOSA|volume=38|issue=12|pages=1094|date=December 1948| url=http://www.opticsinfobase.org/abstract.cfm?URI=josa-38-12-1092[/tpl] (Proceedings of the Thirty-Third Annual Meeting of the Optical Society of America) However, Lab is now more often used as an informal abbreviation for the CIE 1976 (''L*'', ''a*'', ''b*'') color space (or CIELAB). The difference between Hunter and CIE color coordinates is that the CIE coordinates are based on a cube root transformation of the color data, while the Hunter coordinates are based on a square root transformation.
Both spaces are derived from the "master" space CIE 1931 XYZ color space, which can predict which spectral power distributions will be perceived as the same color (see metamerism), but which is not particularly perceptually uniform.A discussion and proposed improvement, Bruce Lindbloom  Strongly influenced by the Munsell color system, the intention of both "Lab" color spaces is to create a space that can be computed via simple formulas from the XYZ space but is more perceptually uniform than XYZ.Explanation of this history, Bruce MacEvoy Perceptually uniform means that a change of the same amount in a color value should produce a change of about the same visual importance. When storing colors in limited precision values, this can improve the reproduction of tones.  Both Lab spaces are relative to the white point of the XYZ data they were converted from.  Lab values do not define absolute colors unless the white point is also specified.  Often, in practice, the white point is assumed to follow a standard and is not explicitly stated (e.g., for "absolute colorimetric" rendering intent ICC L*a*b* values are relative to CIE standard illuminant D50, while they are relative to the unprinted substrate for other rendering intents).
The lightness correlate in CIELAB is calculated using the cube root of the relative luminance.
The L*a*b* color space includes all perceivable colors, which means that its gamut exceeds those of the RGB and CMYK color models  (for example, ProPhoto RGB includes about 90% all perceivable colors). One of the most important attributes of the L*a*b*-model is device independence. This means that the colors are defined independent of their nature of creation or the device they are displayed on.  The L*a*b* color space is used when graphics for print have to be converted from RGB to CMYK, as the L*a*b* gamut includes both the RGB and CMYK gamut. Also it is used as an interchange format between different devices as for its device independency.

==Advantages==

Unlike the RGB and CMYK color models, Lab color is designed to approximate human vision.  It aspires to perceptual uniformity, and its L component closely matches human perception of lightness, although it does not take the Helmholtz–Kohlrausch effect into account.  Thus, it can be used to make accurate color balance corrections by modifying output curves in the a and b components, or to adjust the lightness contrast using the L component. In RGB or CMYK spaces, which model the output of physical devices rather than human visual perception, these transformations can be done only with the help of appropriate blend modes in the editing application.
Because Lab space is much larger than the gamut of computer displays, printers, or even human vision, a bitmap image represented as Lab requires more data per pixel to obtain the same precision as an RGB or CMYK bitmap.  In the 1990s, when computer hardware and software were limited to storing and manipulating mostly 8-bit/channel bitmaps, converting an RGB image to Lab and back was a very lossy operation.  With 16-bit/channel support now common, the loss due to quantization is negligible.
In addition, many of the "colors" within Lab space fall outside the gamut of human vision, and are therefore purely imaginary; these "colors" cannot be reproduced in the physical world.  Though color management software, such as that built into image editing applications, will pick the closest in-gamut approximation, changing lightness, chroma, and sometimes hue in the process, author Dan Margulis claims that this access to imaginary colors is useful, going between several steps in the manipulation of a picture.[tpl]cite book|title=Photoshop Lab Color: The Canyon Conundrum and Other Adventures in the Most Powerful Colorspace|isbn=0-321-35678-0|first=Dan|last=Margulis|year=2006|publisher=Peachpit ; Pearson Education|location=Berkeley, Calif. : London[/tpl]

==Differentiation==

Some specific uses of the abbreviation in software, literature etc.

==CIELAB==

CIE ''L*a*b*'' (CIELAB) is the most complete[tpl]Citation needed|reason=Are there really any colors that cannot be represented in CIE XYZ?|date=May 2009[/tpl]  color space specified by the International Commission on Illumination (French Commission internationale de l'éclairage, hence its CIE initialism). It describes all the colors visible to the human eye and was created to serve as a device-independent model to be used as a reference.
The three coordinates of CIELAB represent the lightness of the color (L* = 0 yields black and L* = 100 indicates diffuse white; specular white may be higher), its position between red/magenta and green (a*, negative values indicate green while positive values indicate magenta) and its position between yellow and blue (b*, negative values indicate blue and positive values indicate yellow). The asterisk (*) after L, a and b are pronounced star and are part of the full name, since they represent L*, a* and b*, to distinguish them from Hunter's L, a, and b, described below.
Since the L*a*b* model is a three-dimensional model, it can be represented properly only in a three-dimensional space.3D representations of the L*a*b* gamut, Bruce Lindbloom. Two-dimensional depictions include chromaticity diagrams: sections of the color solid with a fixed lightness. It is crucial to realize that the visual representations of the full gamut of colors in this model are never accurate; they are there just to help in understanding the concept.
Because the red-green and yellow-blue opponent channels are computed as differences of lightness transformations of (putative) cone responses, CIELAB is a chromatic value color space.
A related color space, the CIE 1976 (L*, u*, v*) color space (a.k.a. CIELUV), preserves the same L* as L*a*b* but has a different representation of the chromaticity components. CIELAB and CIELUV can also be expressed in cylindrical form (CIELCHCIE-L*C*h Color Scale and CIELCHuv, respectively), with the chromaticity components replaced by correlates of chroma and hue.
Since CIELAB and CIELUV, the CIE has been incorporating an increasing number of color appearance phenomena into their models, to better model color vision. These color appearance models, of which CIELAB is a simple example,[tpl]cite book|title=Color Appearance Models|first=Mark D.|last=Fairchild|year=2005|publisher=John Wiley and Sons|isbn=0-470-01216-1|page=340|chapter=Color and Image Appearance Models| url=http://books.google.com/?id=8_TxzK2B-5MC&pg=PA340&dq=cielab+color+appearance+model[/tpl] culminated with CIECAM02.

===Perceptual differences===

The nonlinear relations for L*, a*, and b* are intended to mimic the nonlinear response of the eye. Furthermore, uniform changes of components in the L*a*b* color space aim to correspond to uniform changes in perceived color, so the relative perceptual differences between any two colors in L*a*b* can be approximated by treating each color as a point in a three-dimensional space (with three components: L*, a*, b*) and taking the Euclidean distance between them.[tpl]cite book|title=Fundamentals of Digital Image Processing|first=Anil K.|last=Jain|pages=68, 71, 73|year=1989|publisher=Prentice Hall|location=New Jersey, United States of America|isbn=0-13-336165-9[/tpl]

===RGB and CMYK conversions===

There are no simple formulas for conversion between RGB or CMYK values and L*a*b*, because the RGB and CMYK color models are device-dependent.  The RGB or CMYK values first must be transformed to a specific absolute color space, such as sRGB or Adobe RGB.  This adjustment will be device-dependent, but the resulting data from the transform will be device-independent, allowing data to be transformed to the CIE 1931 color space and then transformed into L*a*b*.

===Range of coordinates===

As mentioned previously, the L* coordinate ranges from 0 to 100.  The possible range of a* and b* coordinates is independent of the color space that one is converting from, since the conversion below uses X and Y, which come from RGB.

==CIELAB-CIEXYZ conversions==

===Forward transformation===

where
Here, Xn, Yn and Zn are the CIE XYZ tristimulus values of the reference white point (the subscript n suggests "normalized").
The division of the domain of the f(t) function into two parts was done to prevent an infinite slope at [tpl]nobr|1=t = 0[/tpl]. f(t) was assumed to be linear below some [tpl]nobr|1=t = t0[/tpl], and was assumed to match the t1/3 part of the function at t0 in both value and slope. In other words:
The intercept [tpl]nobr|1=f(0) = b[/tpl] was chosen so that L* would be 0 for [tpl]nobr|1=Y = 0[/tpl]: [tpl]nobr|1=b = 16/116 = 4/29[/tpl]. The above two equations can be solved for a and t0:
where [tpl]nobr|1=δ = 6/29[/tpl].[ref]

</ref>

===Reverse transformation===

The reverse transformation is most easily expressed using the inverse of the function f above:
where

==Hunter Lab==

L is a correlate of lightness, and is computed from the Y tristimulus value using Priest's approximation to Munsell value:
a and b are termed opponent color axes. a represents, roughly, Redness (positive) versus Greenness (negative). It is computed as:
The other opponent color axis, b, is positive for yellow colors and negative for blue colors. It is computed as:
where Kb is a coefficient that depends upon the illuminant (for D65, Kb is 67.20; see approximate formula below) and Zn is the Z tristimulus value of the specified white object.Hunter Labs (1996). "Hunter Lab Color Scale". Insight on Color 8 9 (August 1–15, 1996). Reston, VA, USA: Hunter Associates Laboratories.
Both a and b will be zero for objects that have the same chromaticity coordinates as the specified white objects (i.e., achromatic, grey, objects).

===Approximate formulas for Ka and Kb===

In the previous version of the Hunter Lab color space, Ka was 175 and Kb was 70. Hunter Associates Lab discovered[tpl]cn|date=December 2013[/tpl] that better agreement could be obtained with other color difference metrics, such as CIELAB (see above) by allowing these coefficients to depend upon the illuminants. Approximate formulae are:
which result in the original values for Illuminant C, the original illuminant with which the Lab color space was used.

===As an Adams chromatic valence space===

Adams chromatic valence color spaces are based on two elements: a (relatively) uniform lightness scale, and a (relatively) uniform chromaticity scale. If we take as the uniform lightness scale Priest's approximation to the Munsell Value scale, which would be written in modern notation: 
and, as the uniform chromaticity coordinates:
where ke is a tuning coefficient, we obtain the two chromatic axes:
and
which is identical to the Hunter Lab formulas given above if we select [tpl]nobr|1=K = Ka/100[/tpl] and [tpl]nobr|1=ke = Kb/Ka[/tpl]. Therefore, the Hunter Lab color space is an Adams chromatic valence color space.

==See also==

==References==

==External links==


