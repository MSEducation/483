[[Life-critical system]]

CATEGORIES: Engineering failures, Formal methods, Software quality, Hazards, Safety, Risk analysis, Safety engineering, Computer systems, Control engineering, Systems engineering

A life-critical system or safety-critical system is a system whose failure or 
malfunction may result in:
Risks of this sort are usually managed with the methods and tools of safety engineering. A life-critical system is designed to lose less than one life per billion (109) hours of operation.AC 25.1309-1A  Typical design methods include probabilistic risk assessment, a method that combines failure mode and effects analysis (FMEA) with fault tree analysis. Safety-critical systems are increasingly computer-based.

==Reliability regimes==

Several reliability regimes for life-critical systems exist:

==Software engineering for life-critical systems==

Software engineering for life-critical systems is particularly difficult. There are three aspects which can be applied to aid the engineering software for life-critical systems. First is process engineering and management. Secondly, selecting the appropriate tools and environment for the system. This allows the system developer to effectively test the system by emulation and observe its effectiveness. Thirdly, address any legal and regulatory requirements, such as FAA requirements for aviation. By setting a standard for which a system is required to be developed under, it forces the designers to stick to the requirements. The avionics industry has succeeded in producing standard methods for producing life-critical avionics software. Similar standards exist for automotive(ISO 26262), Medical (IEC 62304) and nuclear (IEC 61513) industries. The standard approach is to carefully code, inspect, document, test, verify and analyze the system.  Another approach is to certify a production system, a compiler, and then generate the system's code from specifications. Another approach uses formal methods to generate proofs that the code meets requirements. All of these approaches improve the software quality in safety-critical systems by testing or eliminating manual steps in the development process, because people make mistakes, and these mistakes are the most common cause of potential life-threatening errors.

==Examples of life-critical systems==

===Infrastructure===

===Medicinehttp://www.mddionline.com/article/device-safety-system-design===

The technology requirements can go beyond avoidance of failure, and can even facilitate medical intensive care (which deals with healing patients), and also life support (which is for stabilizing patients). 

===Nuclear engineeringhttp://www.world-nuclear.org/info/Safety-and-Security/Safety-of-Plants/Safety-of-Nuclear-Power-Reactors/===

===Recreation===

===Transport===

====Railwayhttp://rtos.com/images/uploads/Safety-Critical_Systems_In_Rail_Transportation.pdf====

====Automotivehttp://books.sae.org/pt-103/====

====Aviationhttp://www.amazon.com/Developing-Safety-Critical-Software-Practical-Compliance/dp/143981368X====

====Spaceflighthttp://www.dept.aoe.vt.edu/~cdhall/courses/aoe4065/NASADesignSPs/N_PG_8705_0002_.pdf====

==See also==

==References==

==External links==


