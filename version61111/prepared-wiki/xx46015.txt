[[Hypercomputation]]

CATEGORIES: Theory of computation, Hypercomputation

Hypercomputation or super-Turing computation refers to models of computation that go beyond, or are incomparable to, Turing computability. This includes various hypothetical methods for the computation of non-Turing-computable functions, following super-recursive algorithms (see also supertask). The term "super-Turing computation" appeared in a 1995 Science paper by Hava Siegelmann. The term "hypercomputation" was introduced in 1999 by Jack Copeland and Diane Proudfoot.Copeland and Proudfoot, Alan Turing's forgotten ideas in computer science. Scientific American, April 1999
The terms are not quite synonymous: "super-Turing computation" usually implies that the proposed model is supposed to be physically realizable, while "hypercomputation" does not.
Technical arguments against the physical realizability of hypercomputations have been presented.

==History==

A computational model going beyond Turing machines was introduced by Alan Turing in his 1938 PhD dissertation Systems of Logic Based on Ordinals.Alan Turing, 1939, Systems of Logic Based on Ordinals Proceedings London Mathematical Society Volumes 2–45, Issue 1, pp. 161–228.http://plms.oxfordjournals.org/content/s2-45/1/161.extract This paper investigated mathematical systems in which an oracle was available, which could compute a single arbitrary (non-recursive) function from naturals to naturals. He used this device to prove that even in those more powerful systems, undecidability is still present. Turing's oracle machines are strictly mathematical abstractions, and are not physically realizable."Let us suppose that we are supplied with some unspecified means of solving number-theoretic problems; a kind of oracle as it were. We shall not go any further into the nature of this oracle apart from saying that it cannot be a machine" (Undecidable p. 167, a reprint of Turing's paper Systems of Logic Based On Ordinals)

==Hypercomputation and the Church–Turing thesis==

The Church–Turing thesis states that any function that is algorithmically computable can be computed by a Turing machine. Hypercomputers compute functions that a Turing machine cannot and which are, hence, not computable in the Church-Turing sense.
An example of a problem a Turing machine cannot solve is the halting problem. A Turing machine cannot decide if an arbitrary program halts or runs forever. Some proposed hypercomputers can simulate the program for an infinite number of steps and tell the user whether the program halted.

==Hypercomputer proposals==

|author=Shagrir, O.
|title=Super-tasks, accelerating Turing machines and uncomputability
|journal=Theor. Comput. Sci. 317, 1-3
|date=June 2004
|pages=105–114
|doi=10.1016/j.tcs.2003.12.007
|url=http://edelstein.huji.ac.il/staff/shagrir/papers/Supertasks_Accelerating_Turing_Machines_and_Uncomputability.pdf
|volume=317}} and in [tpl]cite journal| author=Petrus H. Potgieter| title=Zeno machines and hypercomputation| journal=Theoretical Computer Science| volume=358 | issue=1 |date=July 2006 | pages=23–33| doi=10.1016/j.tcs.2005.11.040[/tpl][/ref] 
[/ref] This is not possible using the standard qubit-model quantum computer, because it is proven that a regular quantum computer is PSPACE-reducible (a quantum computer running in polynomial time can be simulated by a classical computer running in polynomial space).Bernstein and Vazirani, Quantum complexity theory, SIAM Journal on Computing, 26(5):1411-1473, 1997. http://www.cs.berkeley.edu/~vazirani/bv.ps

==Analysis of capabilities==

==Taxonomy of "super-recursive" computation methodologies==

Mark Burgin has collected a list of what he calls "super-recursive algorithms" (from Burgin 2005: 132):
In the same book, he presents also a list of "algorithmic schemes":
volume=30 | issue=4 | pages=473–478 | doi=10.1007/BF02366556 | url=http://www.springerlink.com/content/a70r23722wqu43t7/ | year=1994 }}
[/ref])

==Criticism==

Martin Davis, in his writings on hypercomputation Davis, Martin, Why there is no such discipline as hypercomputation, Applied Mathematics and Computation, Volume 178, Issue 1, 1 July 2006, Pages 4–7, Special Issue on Hypercomputation
[tpl]cite book |last=Davis| first=Martin|title=Alan Turing: Life and Legacy of a Great Thinker|publisher=Springer|year=2004  |chapter=The Myth of Hypercomputation[/tpl]
refers to this subject as "a myth" and offers counter-arguments to the
physical realizability of hypercomputation. As for its theory, he argues against
the claims that this is a new field founded in the 1990s. This point of view relies
on the history of computability theory (degrees of unsolvability, computability over
functions, real numbers and ordinals), as also mentioned above.
Andrew Hodges wrote a critical commentary[tpl]cite web |url=http://www.turing.org.uk/philosophy/sciam.html |title=The Professors and the Brainstorms |author=Andrew Hodges |accessdate=23 September 2011 |work=The Alan Turing Home Page [/tpl] on Copeland and Proudfoot's article.

==See also==

==References==

==Further reading==

==External links==


