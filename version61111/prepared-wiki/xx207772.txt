[[Allied Standards Avionics Architecture Council]]

CATEGORIES: Aviation standards, Standards

Allied Standards Avionics Architecture Council, or ASAAC, is an effort to define and validate a set of Open Architecture Standards for Avionics Architecture, particularly in the field of Integrated Modular Avionics.
ASAAC is managed by the UK Ministry of Defence, and many major European Avionics companies  participate in the Working group, such as:

==History==

The ASAAC project was divided into two phases:
The current ASAAC standard has two parts:
| url         = http://www.dstan.mod.uk/data/00/074/01000200.pdf
| title       = ASAAC Standards Part 1: Standards for Software
| accessdate  = 2009-03-07
| date        = 2008-12-19
| format      = PDF
| publisher   = Ministry of Defence (United Kingdom)
}} [tpl]Dead link|date=October 2010|bot=H3llBot[/tpl][/ref] ASAAC Standards Part 1: Standards for Software
| url         = http://www.dstan.mod.uk/data/00/074/02000200.pdf
| title       = ASAAC Standards Part 2: Rationale Report for Software Standards
| accessdate  = 2009-03-07
| date        = 2008-12-19
| format      = PDF
| publisher   = Ministry of Defence (United Kingdom)
}} [tpl]Dead link|date=October 2010|bot=H3llBot[/tpl][/ref] ASAAC Standards Part 2: Rationale Report for Software Standards
ASAAC initially published provisional standards in five parts in January 2005:
All but Def Stan 00-74 were withdrawn in July 2007, the MOD and representatives from the Working group considering that it was the only standard bearing any influence.

==Proposed Standards for Software (Def Stan 00-74)==

Def Stan 00-74 is defined in the context of Integrated Modular Avionics. Software components are located on modules.

==Links to ARINC 653 and POSIX==

The field covered by ASAAC in Def Stan 00-74 is similar to ARINC 653 (ARINC 653 is a software specification for space and time partitioning in avionics). However, there are differences between the two standards: Some features of ASAAC API, such as file handling, thread managing inside process, or debugging, are not considered in ARINC 653.
However, for the part where the two standards overlap, it is often possible to translate ASAAC interfaces in ARINC 653 API calls (and even in POSIX calls). Approximately 30% of the ASAAC API is covered directly by ARINC 653 and POSIX. 
For example, the following call defined in ASAAC: 
  receiveBuffer
would be translated in ARINC 653 by:
  RECEIVE_BUFFER()
and also in POSIX by:
  recv()

==Links to STANAG 4626==

STANAG 4626 is a NATO standardization of the requirements defined by the ASAAC program, proposed by the MOD and the ASAAC Working group.

==See also==

==References==

==External links==


