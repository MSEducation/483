[[Facade pattern]]

CATEGORIES: Software design patterns, Articles with example Java code

The facade pattern (or fa√ßade pattern) is a software design pattern commonly used with object-oriented programming.  The name is by analogy to an architectural facade.
A facade is an object that provides a simplified interface to a larger body of code, such as a class library.  A facade can: 

==Usage==

A Facade is used when one wants an easier or simpler interface to an underlying implementation object. Alternatively, an adapter is used when the wrapper must respect a particular interface and must support polymorphic behavior. A decorator makes it possible to add or alter behavior of an interface at run-time. 

==Structure==

==Example==

This is an abstract example of how a client ("you") interacts with a facade (the "computer") to a complex system (internal computer parts, like CPU and HardDrive).

==References==

==External links==


