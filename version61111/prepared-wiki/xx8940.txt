 [[Binary numeral system|Binary]]  [[Decimal]]
 &nbsp;
   011<sub>2</sub>    3<sub>10</sub>    Heap A
   100<sub>2</sub>    4<sub>10</sub>    Heap B
   101<sub>2</sub>    5<sub>10</sub>    Heap C
   ---
   010<sub>2</sub>    2<sub>10</sub>    The nim-sum of heaps A, B, and C, 3 ⊕ 4 ⊕ 5 = 2
An equivalent procedure, which is often easier to perform mentally, is to express the heap sizes as sums of distinct powers of 2, cancel pairs of equal powers, and then add what's left:
 3 = 0 + 2 + 1 =     2   1      Heap A
 4 = 4 + 0 + 0 = 4              Heap B
 5 = 4 + 0 + 1 = 4       1      Heap C
 ---
 2 =                 2          What's left after canceling 1s and 4s
In normal play, the winning strategy is to finish every move with a Nim-sum of 0. This is always possible if the Nim-sum is not zero before the move. If the Nim-sum is zero, then the next player will lose if the other player does not make a mistake.  To find out which move to make, let X be the Nim-sum of all the heap sizes. Take the Nim-sum of each of the heap sizes with X, and find a heap whose size decreases. The winning strategy is to play in such a heap, reducing that heap to the Nim-sum of its original size with X.  In the example above, taking the Nim-sum of the sizes is X = 3 ⊕ 4 ⊕ 5 = 2.  The Nim-sums of the heap sizes A=3, B=4, and C=5 with X=2 are
The only heap that is reduced is heap A, so the winning move is to reduce the size of heap A to 1 (by removing two objects).
As a particular simple case, if there are only two heaps left, the strategy is to reduce the number of objects in the bigger heap to make the heaps equal. After that, no matter what move your opponent makes, you can make the same move on the other heap, guaranteeing that you take the last object.
When played as a misère game, Nim strategy is different only when the normal play move would leave no heap of size two or larger. In that case, the correct move is to leave an odd number of heaps of size one (in normal play, the correct move would be to leave an even number of such heaps).
In a misère game with heaps of sizes three, four and five, the strategy would be applied like this:
 A B C Nim-sum
 &nbsp;
 3 4 5 010<sub>2</sub>=2<sub>10</sub>   I take 2 from A, leaving a sum of 000, so I will win.
 1 4 5 000<sub>2</sub>=0<sub>10</sub>   You take 2 from C
 1 4 3 110<sub>2</sub>=6<sub>10</sub>   I take 2 from B
 1 2 3 000<sub>2</sub>=0<sub>10</sub>   You take 1 from C
 1 2 2 001<sub>2</sub>=1<sub>10</sub>   I take 1 from A
 0 2 2 000<sub>2</sub>=0<sub>10</sub>   You take 1 from C
 0 2 1 011<sub>2</sub>=3<sub>10</sub>   The normal play strategy would be to take 1 from B, leaving an even number (2)
                  heaps of size 1.  For misère play, I take the entire B heap, to leave an odd
                  number (1) of heaps of size 1.
 0 0 1 001<sub>2</sub>=1<sub>10</sub>   You take 1 from C, and lose.
The previous strategy for a misère game can be easily implemented (for example in Python, below).

==Proof of the winning formula==

The soundness of the optimal strategy described above was demonstrated by C. Bouton.
Theorem. In a normal Nim game, the player making the first move has a winning strategy if and only if the nim-sum of the sizes of the heaps is nonzero.  Otherwise, the second player has a winning strategy.
Proof: Notice that the nim-sum (⊕) obeys the usual associative and commutative laws of addition (+), and also satisfies an additional property, x ⊕ x = 0 (technically speaking, the nonnegative integers under ⊕ form an Abelian group of exponent 2).
Let x1, ..., xn be the sizes of the heaps before a move, and y1, ..., yn the corresponding sizes after a move. Let s = x1 ⊕ ... ⊕ xn and t = y1 ⊕ ... ⊕ yn. If the move was in heap k, we have xi = yi for all i ≠ k, and xk > yk. By the properties of ⊕ mentioned above, we have
     ''t'' = 0 ⊕ ''t''
       = ''s'' ⊕ ''s'' ⊕ ''t''
       = ''s'' ⊕ (''x''<sub>1</sub> ⊕ ... ⊕ ''x<sub>n</sub>'') ⊕ (''y''<sub>1</sub> ⊕ ... ⊕ ''y<sub>n</sub>'')
       = ''s'' ⊕ (''x''<sub>1</sub> ⊕ ''y''<sub>1</sub>) ⊕ ... ⊕ (''x<sub>n</sub>'' ⊕ ''y<sub>n</sub>'')
       = ''s'' ⊕ 0 ⊕ ... ⊕ 0 ⊕ (''x<sub>k</sub>'' ⊕ ''y<sub>k</sub>'') ⊕ 0 ⊕ ... ⊕ 0
       = ''s'' ⊕ ''x<sub>k</sub>'' ⊕ ''y<sub>k</sub>''
 &nbsp;
 (*) ''t'' = ''s'' ⊕ ''x<sub>k</sub>'' ⊕ ''y<sub>k</sub>''.
The theorem follows by induction on the length of the game from these two lemmas.
Lemma 1. If s = 0, then t ≠ 0 no matter what move is made.
Proof: If there is no possible move, then the lemma is vacuously true (and the first player loses the normal play game by definition).  Otherwise, any move in heap k will produce t = xk ⊕ yk from (*). This number is nonzero, since xk ≠ yk.
Lemma 2. If s ≠ 0, it is possible to make a move so that t = 0.
Proof: Let d be the position of the leftmost (most significant) nonzero bit in the binary representation of s, and choose k such that the dth bit of xk is also nonzero. (Such a k must exist, since otherwise the dth bit of s would be 0.)
Then letting yk = s ⊕ xk, we claim that yk < xk: all bits to the left of d are the same in xk and yk, bit d decreases from 1 to 0 (decreasing the value by 2d), and any change in the remaining bits will amount to at most 2d−1. The first player can thus make a move by taking xk − yk objects from heap k, then
 ''t'' = ''s'' ⊕ ''x<sub>k</sub>'' ⊕ ''y<sub>k</sub>''           (by (*))
   = ''s'' ⊕ ''x<sub>k</sub>'' ⊕ (''s'' ⊕ ''x<sub>k</sub>'')
   = 0.
The modification for misère play is demonstrated by noting that the modification first arises in a position that has only one heap of size 2 or more.   Notice that in such a position s ≠ 0, therefore this situation has to arise when it is the turn of the player following the winning strategy.  The normal play strategy is for the player to reduce this to size 0 or 1, leaving an even number of heaps with size 1, and the misère strategy is to do the opposite.  From that point on, all moves are forced.

==Other variations of Nim==

===The subtraction game S(1,2,...,k)===

In another game which is commonly known as Nim (but is better called the subtraction game S (1,2,...,k)), an upper bound is imposed on the number of objects that can be removed in a turn.  Instead of removing arbitrarily many objects, a player can only remove 1 or 2 or ... or k at a time.  This game is commonly played in practice with only one heap (for instance with k = 3 in the game Thai 21 on Survivor: Thailand, where it appeared as an Immunity Challenge).
Bouton's analysis carries over easily to the general multiple-heap version of this game.  The only difference is that as a first step, before computing the Nim-sums, we must reduce the sizes of the heaps modulo k + 1.  If this makes all the heaps of size zero (in misère play), the winning move is to take k objects from one of the heaps.  In particular, in ideal play from a single heap of n objects, the second player can win if and only if
This follows from calculating the nim-sequence of S(1,2,...,k),
from which the strategy above follows by the Sprague–Grundy theorem.

===The 21 game===

The game "21" is played as a misère game with any number of players who take turns saying a number.  The first player says "1" and each player in turn increases the number by 1, 2, or 3, but may not exceed 21; the player forced to say "21" loses.  This can be modeled as a subtraction game with a heap of 21–n objects. The winning strategy for the two-player version of this game is to always say a multiple of 4; it is then guaranteed that the other player will ultimately have to say 21 – so in the standard version where the first player opens with "1", they start with a losing move.
The 21 game can also be played with different numbers, like "Add at most 5; lose on 34".
A sample game of 21 in which the second player follows the winning strategy:
 Player     Number
   1           1
   2           4
   1        5, 6 or 7
   2           8
   1       9, 10 or 11
   2          12
   1      13, 14 or 15
   2          16
   1      17, 18 or 19
   2          20
   1          21

===The 100 game===

A similar version is the "100 game": two players start from 0 and alternatively add a number from 1 to 10 to the sum. The player who reaches 100 wins. The winning strategy is to reach a number in which the digits are subsequent (e.g. 01, 12, 23, 34,...) and control the game by jumping through all the numbers of this sequence. Once reached 89, the opponent has lost (he can only tell numbers from 90 to 99, and the next answer can in any case be 100).

===A multiple-heap rule===

In another variation of Nim, besides removing any number of objects from a single heap, one is permitted to remove the same number of objects from each heap.

===Circular Nim===

Yet another variation of Nim is 'Circular Nim', where any number of objects are placed in a circle, and two players alternately remove one, two or three adjacent objects.  For example, starting with a circle of ten objects,
. . . . . . . . . .
three objects be taken in the first move
_ . . . . . . . _ _
then another three
_ . _ _ _ . . . _ _
then one
_ . _ _ _ . . _ _ _
but then three objects cannot be taken out in one move.

===Grundy's game===

In Grundy's game, another variation of Nim, a number of objects are placed in an initial heap, and two players alternately divide a heap into two nonempty heaps of different sizes. Thus, six objects may be divided into piles of 5+1 or 4+2, but not 3+3.  Grundy's game can be played as either misère or normal play.

===Greedy Nim===

See Greedy Nim.

==See also==

==References==

==Additional reading==

==External links==


