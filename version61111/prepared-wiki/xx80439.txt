[[Dartmouth BASIC]]

CATEGORIES: Dartmouth College history, Programming languages created in 1964, Discontinued BASICs, BASIC compilers

Dartmouth BASIC is the original version of the BASIC programming language.  It is so named because it was designed and implemented at Dartmouth College. The language was designed by John Kemeny and Thomas Kurtz as part of the Dartmouth Time Sharing System (DTSS) and was one of the first programming languages intended to be used interactively.
Several versions were produced at Dartmouth over the years, all implemented as compile and go compilers, unlike many of the versions of the language implemented elsewhere, which were interpreters.  The first compiler was produced before the time-sharing system was ready.  Known as CardBASIC, it was intended for the standard card-reader based batch processing system.  Like all the following versions, it was implemented by a team of undergraduate programmers working under the direction of Kemeny and Kurtz.  The first interactive version was made available to general users in June 1964; the second in October, 1964; the third in 1966; the fourth in 1969; the fifth in 1970; the sixth in 1971; and the seventh in 1979.

==Development history==

Work on the compiler and the operating system was done concurrently, and so the first BASIC programs were run in batch mode as part of the development process during early 1964. However on May 1, 1964 at 4 a.m. ET, John Kemeny and John McGeachie ran the first BASIC programs to be executed successfully from terminals by the DTSS system.Author unknown (2007-08-08). Dartmouth Time Sharing System (DTSS) timeline (archived 2007). "Portions reprinted without permission from the Dartmouth Alumni Magazine, March 1995."  Retrieved from http://web.archive.org/web/20070808230138/http://www.dtss.org/timeline.php. It is not completely clear what the first programs were. However, the programs either consisted of the single line:
 PRINT 2 + 2
or were implementations of the Sieve of Eratosthenes, according to a 1974 interview in which Kemeny and McGeachie took part.[tpl]Citation needed|date=December 2010[/tpl]
The second version of BASIC only made minimal changes, adding the semicolon operator to the PRINT statement and zero subscripts to arrays.[tpl]Citation needed|date=December 2010[/tpl]
For the third version, the INPUT statement was introduced along with the powerful MAT statements for matrix manipulation and the RESTORE statement for use with READ/DATA. Development continued with the introduction of text manipulation and variables, also known as string variables, for version 4 and true file handling in version 5.  Version 6 saw the introduction of separately compilable procedures with parameters; this is the version from which most later BASIC dialects descend.  In 1976, Steve Garland added structured programming features to create Dartmouth SBASIC, a precompiler which produced version 6 output (and which formed the basis of ANSI BASIC). In 1979 Kemeny and Kurtz released an ANSI BASIC compiler as the seventh and final version of BASIC at Dartmouth before leaving the college to concentrate on the further development of ANSI BASIC in the form of True BASIC.[tpl]Citation needed|date=December 2010[/tpl]
The early versions of BASIC were used and tested by other Dartmouth students working in the College Psychology labs in early 1964.[tpl]Citation needed|date=April 2007[/tpl]  The departments shared several IBM card punch machines that were used to run batch statistical analysis programs.[tpl]Citation needed|date=December 2010[/tpl]
Students working on NSF grants in both departments lived in the same rural New Hampshire farmhouse during the summer of 1964.[tpl]Citation needed|date=April 2007[/tpl] They often met to share ideas. A notable contribution of these late night sessions was the GOTO statement. The earliest printed versions of the users' manual were mimeographed (with the typical purple print of Ditto machines of the era) and had a pink cover.
Dr. Kemeny, an immigrant from Hungary and chairman of the Mathematics department at the time, eventually went on to serve with great distinction as president of the college. Mr. McGeachie, an undergraduate at the time, was called "Geach" by his friends and colleagues.[tpl]Citation needed|date=December 2010[/tpl]

==User interface==

DTSS implemented an early  integrated development environment (IDE): an interactive command line interface. There was no need to log out.  If users did not respond, they were logged out after a short delay.
Any line typed in by the user, and beginning with a line number, was added to the program, replacing any previously stored line with the same number; anything else was assumed to be a DTSS command and immediately executed.  Lines which consisted solely of a line number weren't stored but did remove any previously stored line with the same number. This method of editing was necessary due to use of teleprinters as the terminal units for the Dartmouth Timesharing system.

===List of commands===

The commands were often believed to be part of the BASIC language by users, but, in fact, were part of the time sharing system and were also used when preparing ALGOL or FORTRAN programs via the DTSS terminals.

==Keywords==

The first interactive version implemented the following statement types, taking some of its operators and keywords from FORTRAN II and some from ALGOL 60.

===List of BASIC statements===

It also implemented floating-point numeric variables and arithmetic. Variable names were limited to A to Z, A0 to A9, B0 to B9,Â ..., Z0 to Z9, giving a maximum of 286 possible distinct variables.  Array names were restricted to A to Z only. Arrays did not need to be defined, but in the absence of a DIM statement they defaulted to 10 elements, subscripted from 1 to 10.

===List of operators===

===List of functions===

==References==

==Bibliography==

==External links==


