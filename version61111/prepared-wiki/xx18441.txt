[[Turing tarpit]]

CATEGORIES: 1982 introductions, Esoteric programming languages, Theory of computation, Alan Turing

A Turing tarpit (or tar-pit) is any programming language or computer interface that allows for flexibility in function but is difficult to learn and use because it offers little or no support for common tasks.[tpl]cite web| url=http://c2.com/cgi/wiki?TuringTarpit | title=Turing Tarpit | publisher=Cunningham & Cunningham, Inc. | date=10 March 2010 | accessdate=7 November 2012 [/tpl] The phrase was coined in 1982 by Alan Perlis in Epigrams on Programming

==Overview==

In any Turing complete language, it is possible to write any computer program, so in a very rigorous sense nearly all programming languages are equally capable. Turing tarpits show that theoretical ability is not the same as usefulness in practice.
Turing tarpits are characterized by having a simple abstract machine which requires the user to deal with many details in the solution of a problem.[tpl]cite web| url=https://practicingruby.com/articles/shared/bwgflabwncjv | title=Exploring the depths of a Turing tarpit | publisher=Practicing Ruby | date=7 February 2013 [/tpl] At the extreme opposite are interfaces which can perform very complex tasks with little human intervention but become obsolete if requirements change slightly.
Some esoteric programming languages, such as Brainfuck, are specifically referred to as "Turing tarpits", because they purposely implement the minimum functionality necessary to be classified as Turing complete languages. Using such languages is a form of mathematical recreation: programmers can work out how to achieve basic programming constructs in an extremely difficult but mathematically Turing-equivalent language.Esoteric Topics in Computer Programming, Cat's Eye Technologies, Canada. ("They present the programmer with the challenge, intrigue, and entertainment of looking at known algorithms and concepts in a whole new light.")

==Examples==

===TSC===

TSC, which stands for Text SCript, is a language used inside the Cave Story game engine for controlling non-player characters, events, and animated cutscenes.
TSC is a Turing Tarpit because it contains about 8000 boolean variables total, all of which are global variables, and does not have basic data types such as integers, floats, strings, bytes, and so forth. It is notoriously difficult to use for large programs. There is only 1 control flow command, which implements an if-goto statement that can only check if a certain boolean value is true. All numbers are base ten numbers, and they can be a maximum of 4 digits long. Numbers cannot be stored inside variables, because only boolean variables exist.[tpl]cite web|url=http://cavestory.org/guides/basicmodding/guide/flags.html|title=How to Program Useful Things using TSC - The Turing Tarpit Scripting Language[/tpl]

==See also==

==References==

==Further reading==


