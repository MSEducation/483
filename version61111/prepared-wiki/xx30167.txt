[[IBM 704]]

CATEGORIES: IBM vacuum tube computers, IBM 700/7000 series, 1954 introductions

The IBM 704, the first mass-produced computer with floating point arithmetic hardware, was introduced by IBM in 1954.IBM Archives: 704 Data Processing System Product Profile The IBM 704 Manual of operation states:IBM Type 704 Manual of operation, Form 24-66661-1, IBM, 1956, http://www.cs.virginia.edu/brochure/images/manuals/IBM_704/IBM_704.html IBM 704 Manual of Operation
 
 The type 704 Electronic Data-Processing Machine is a large-scale, high-speed  electronic calculator controlled by an internally stored program of the single address type.

The 704 was a significant improvement over the earlier IBM 701 in terms of architecture and implementation. Like the 701, the 704 used vacuum tube logic circuitry.  Changes from the 701 included the use of core memory instead of Williams tubes and the addition of three index registers. To support these new features, the instructions were expanded to use the full 36-bit word. The new instruction set, which was not compatible with the 701, became the base for the "scientific architecture" subclass of the IBM 700/7000 series computers.
The 704 could execute up to 12,000 floating-point additions per second. IBM sold 140 type 704 systems between 1955 and 1960.was 123; edit comment suggests Amdahl, IEEE Computer, volume ?, issue?, date?, p 40.

==Landmarks==

The programming languages FORTRANhttp://www.softwarepreservation.org/projects/FORTRAN/ and LISPhttp://www-formal.stanford.edu/jmc/history/lisp/node2.html LISP Prehistory, John McCarthy, 1996 were first developed for the 704.
MUSIC, the first computer music program, was developed on the IBM 704 by Max Mathews.
In 1962 physicist John Larry Kelly, Jr created one of the most famous moments in the history of Bell Labs by using an IBM 704 computer to synthesize speech. Kelly's voice recorder synthesizer vocoder recreated the song Daisy Bell, with musical accompaniment from Max Mathews. Author Arthur C. Clarke was coincidentally visiting friend and colleague John Pierce at the Bell Labs Murray Hill facility at the time of this speech synthesis demonstration, and Clarke was so impressed that he used it in the climactic scene of his novel and screenplay for 2001: A Space Odyssey,Arthur C. Clarke  online Biography where the HAL 9000 computer sings the same song.Bell Labs: Where "HAL" First Spoke (Bell Labs Speech Synthesis website)[tpl]Contradict-inline|article=IBM_7090#Notable_applications|date=December 2009[/tpl]
Edward O. Thorp, a math instructor at MIT, used the IBM 704 as a research tool to investigate the probabilities of winning while developing his blackjack gaming theory.Discovery channel documentary with interviews by Ed and Vivian Thorp[tpl]Cite journal |first=Jeff |last=Levinger |url=http://tech.mit.edu/archives/VOL_081/TECH_V081_S0000_P001.pdf |journal=The Tech |publisher=Massachusetts Institute of Technology |title=Math Instructor Programs Computor: Thorpe, 704 Beat Blackjack |volume=81 |issue=1 |page=1 |location=Cambridge, MA |date=February 10, 1961[/tpl] He used FORTRAN to formulate the equations of his research model.
The IBM 704 was used as the official tracker for the Smithsonian Astrophysical Observatory Operation Moonwatch in the fall of 1957. See The M.I.T. Computation Center and Operation Moonwatch. IBM provided four staff scientists to aid Smithsonian Astrophysical Observatory scientists and mathematicians in the calculation of satellite orbits: Dr. Giampiero Rossoni, Dr. John Greenstadt, Thomas Apple and Richard Hatch.

==Registers==

The IBM 704 had a 38-bit accumulator, a 36-bit multiplier quotient register, and three 15-bit index registers.  The contents of the index registers were subtracted from the base address, so the index registers were also called "decrement registers".  All three index registers could participate in an instruction: the 3-bit tag field in the instruction was a bit map specifying which of the registers would participate in the operation. However, when more than one index register was selected, then their contents were or'ed – not added – together before the decrement took place. This behavior persisted in later Scientific Architecture machines (such as the IBM 709 and IBM 7090) until the IBM 7094.  The IBM 7094, introduced in 1962, increased the number of index registers to seven and only selected one at a time; the "or" behavior remained available in a compatibility mode of the IBM 7094.[tpl]Citation |url=http://bitsavers.trailing-edge.com/pdf/ibm/7094/A22-6703-4_7094_PoO_Oct66.pdf |title=IBM 7094 Principles of Operation |edition=fifth |year=1962 |page=8 |id=A22-6703-4 |publisher=IBM |date= |series=IBM Systems Reference Library [/tpl]

==Instruction and data formats==

There were two instruction formats, referred to as "Type A" and "Type B".[tpl]Cite journal | title=From the IBM 704 to the IBM 7094 | author=John Savard | url=http://www.quadibloc.com/comp/cp0309.htm | accessdate=2009-11-15[/tpl]  Most instructions were of type B.
Type A instructions had, in sequence, a three bit prefix (instruction code), a 15 bit decrement field, a 3 bit tag field, and a 15 bit address field.  There were conditional jump operations based on the values in the index registers specified in the tag field.  Some instructions also subtracted the decrement field from the contents of the index registers.  The implementation required that the second two bits of the instruction code be non-zero, giving a total of six possible type A instructions.  One (STR, instruction code binary 101) was not implemented until the IBM 709.
Type B instructions had, in sequence, a 12 bit instruction code (with the second and third bits set to 0 to distinguish them from type A instructions), a two bit flag field, four unused bits, a 3 bit tag field, and a 15 bit address field.
The instruction set implicitly subdivided the data format into the same fields as type A instructions: prefix, decrement, tag and address.  Instructions existed to modify each of these fields in a data word without changing the remainder of the word though the Store Tag instruction was not implemented on the IBM 704.  The original Lisp used the address and decrement fields to store, respectively, the head and tail of a linked list. The primitive functions car ("contents of the address part of register") and cdr ("contents of the decrement part of register") were named after these fields.[tpl]Cite journal |title=Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I |first=John |last=McCarthy |url=http://www-formal.stanford.edu/jmc/recursive.html |year=1960 |accessdate=2009-02-14 |ref=harv[/tpl] p. 28.  The term "register" in this context refers to "memory location".[tpl]harvtxt|McCarthy|1960|pp=26–27[/tpl] discusses registers on the free list and in garbage collection.[tpl]Citation |last1=McCarthy |first1=John |last2=Abrahams |first2=Paul W. |last3=Edwards |first3=Daniel J. |last4=Hart |first4=Timothy P. |last5=Levin |first5=Michael I. |title=LISP 1.5 Programmer's Manual |publisher=MIT Press |location=Cambridge, MA |year=1985 |edition=second |isbn=0-262-13011-4[/tpl], page 36, describes cons cells as words with 15-bit "address" and "decrement" fields.  The simplified explanation that car and cdr stand for "contents of the address register" and "contents of the decrement register"See, for example, [tpl]Citation |last=Mitchell |first=John C. |title=Concepts in Programming Languages |publisher=Cambridge University Press |edition= |year=2003 |isbn=9781139433488 |url=http://books.google.com/books?id=7Uh8XGfJbEIC&pg=PA29&lpg=PA29&hl=en |pages=28–29[/tpl], Section 3.4, Innovations in the Design of Lisp. The reference identifies the IBM 704 and correctly explains the address and decrement part of a cons cell, but then it omits the "part of" in McCarthy's explanation. does not match the IBM 704 architecture; the IBM 704 did not have a programmer-accessible address register and the three address modification registers were call "index registers" by IBM.

==Memory and peripherals==

Controls were included in the 704 for: one 711 Punched Card Reader, one 716 Alphabetic Printer, one 721 Punched Card Recorder, five 727 Magnetic Tape Units and one 753 Tape Control Unit, one 733 Magnetic Drum Reader and Recorder, and one 737 Magnetic Core Storage Unit. The 704 itself came with a control console which had 36 assorted control switches or buttons and 36 data input switches, one for each bit in a register. The control console essentially allowed only setting the binary values of the registers with switches and seeing the binary state of the registers displayed in the pattern of many small neon tubes, appearing much like modern LEDs. For human interaction with the computer, programs would be entered on punched cards initially rather than at the console, and human-readable output would be directed to the printer. The IBM 740 Cathode Ray Tube Output Recorder was also available, which was a 21-inch vector display with a very long phosphor persistence time of 20 seconds for human viewing, together with a 7-inch display receiving the same signal as the larger display but with a fast-decaying phosphor brightness designed to be photographed with an attached camera.[tpl]cite web|title=IBM Archives: 704 Cathode Ray Tube Output Recorder|url=http://www-03.ibm.com/ibm/history/exhibits/701/701_1415bx40.html|accessdate=10 December 2012[/tpl] 
The 737  Magnetic Core Storage Unit had 4,096 36-bit words, the equivalent of 18,432 bytes and served as RAM.[tpl]cite web|title=IBM Archives: IBM 737 Magnetic core storage unit|url=http://www-03.ibm.com/ibm/history/exhibits/701/701_1415bx37.html|accessdate=10 December 2012[/tpl] The 727 Magnetic Tape Units stored over five million six-bit characters per reel.

==Further reading==

==See also==

==References==

==External links==


