[[Compatible Time-Sharing System]]

CATEGORIES: Time-sharing operating systems, 1960s software, Massachusetts Institute of Technology, Discontinued operating systems

The Compatible Time-Sharing System (CTSS), was one of the first time-sharing operating systems; it was developed at MIT's Computation Center. CTSS was first demonstrated in 1961, and was operated at MIT until 1973.  During part of this time, MIT's Project MAC had a second copy of CTSS, but the system did not spread beyond two sites (though this applies to many early computer systems). CTSS was described in a paper presented at the 1962 Spring Joint Computer Conference.

==Overview==

The "Compatible" in the name refers to compatibility with the standard batch processing OS for the IBM 7094, the FORTRAN Monitor System (FMS). CTSS ran an unaltered copy of FMS, processing a standard batch stream, in a pseudo-virtual 7094 provided by its background facility. (The hardware was partly but not fully virtualized; see History of CP/CMS for further details.) Background FMS jobs could access tapes normally, but could not interfere with foreground time-sharing processes or the resources used to support them. 
CTSS was very influential. It showed that time-sharing was viable; it fostered important new applications for computers; it had a significant influence on the next generation of time-sharing systems (notably CP/CMS); and its direct successor, Multics, pioneered many core concepts of current operating systems.

==Characteristics==

==Implementation==

CTSS used a modified IBM 7094 mainframe computer that had two 32,768 36-bit word banks of core memory instead of the normal one; users had access to 27K of the total 32K, with the remaining 5K reserved for the monitor.[tpl]cite book |title=Operating System Concepts |chapter=13: Historical Perspective |page=514 |first1=Abraham |last1=Silberschatz |first2=James L. |last2=Peterson |date=June 1988 |isbn=0-201-18760-4[/tpl]  One bank was reserved for the time-sharing supervisory program, the other for user programs. Processor allocation scheduling was controlled by a multilevel feedback queue. It also had some special memory management hardware, a clock interrupt and the ability to trap certain instructions. Input-output hardware was mostly standard IBM peripherals. These included six data channels connecting to:

==Influences==

Multics, which was also developed by Project MAC, was started in the 1960s as a successor to CTSS, for future use in multiple-access computing. Multics inspired the development of Unix in 1969. One of technical terms inherited by these systems from CTSS is daemon.
ITS, the  ''Incompatible Timesharing System'', another early, revolutionary, and influential MIT time-sharing system, was produced by people who disagreed with the direction taken by Multics; the name was a parody of CTSS, as the name of Unix was later a parody of Multics.

==See also==

==References==

==External links==


