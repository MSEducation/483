[[Adenine (programming language)]]

CATEGORIES: Semantic Web, RDF data access, Scripting languages, Extensible syntax programming languages, Data-structured programming languages, Dynamic programming languages, Statically typed programming languages, Functional languages, Lisp programming language family, Multi-paradigm programming languages, Object-oriented programming languages, Term-rewriting programming languages

Adenine, named after the nucleobase adenine, is a scripting language that is cross-platform, which is developed in the context of project Haystack and Project Oxygen of the Massachusetts Institute of Technology (MIT) Computer Science and Artificial Intelligence Laboratory (CSAIL) in collaboration with Nippon Telegraph and Telephone (NTT).
Adenine was developed as the implementation language of the Haystack Semantic Desktop.[tpl]Cite conference | publisher = ACM | isbn = 1-58113-703-6 | pages = 777â€“778 | last = Karger | first = David R. |author2= Dennis Quan | title = Haystack: a user interface for creating, browsing, and organizing arbitrary semistructured information | booktitle = CHI '04 extended abstracts on Human factors in computing systems | location = Vienna, Austria | year = 2004 [/tpl]  It is the perhaps the earliest example of a homoiconic general graph (rather than list/tree) programming language.
A substantial characteristic of Adenine is that this language possesses native support for the Resource Description Framework (RDF). The language constructs of Adenine are derived from Python and Lisp.
Adenine is written in RDF and thus also can be represented and written with RDF based syntaxes such as Notation3 (N3). Also, as well as RDF, Adenine can be extended. The data type system corresponds to the data type system from RDF and XML Schema, and can be extended.

==References==

==External links==


