[[Emacs]]

CATEGORIES: Free integrated development environments, Free file comparison tools, Free text editors, GNU Project software, Unix text editors, OS X text editors, OpenVMS text editors, Windows text editors, Linux integrated development environments, Linux text editors, Hex editors, Free software programmed in C, Free software programmed in Lisp, Emacs, Text editors

Emacs [tpl]IPAc-en|ˈ|iː|m|æ|k|s[/tpl] and its derivatives are a family of text editors that are characterized by their extensibility. The manual for the most widely-used variant, GNU Emacs, describes it as "the extensible, customizable, self-documenting, real-time display editor".[tpl]cite web|title=GNU Emacs Manual|url=https://www.gnu.org/software/emacs/manual/html_node/emacs/index.html|work=GNU Emacs Manual|publisher=FSF|accessdate=24 November 2012[/tpl]  Development of the first Emacs began in the mid-1970s and continues actively [tpl]as of|2014|lc=on[/tpl]. Emacs has over 2,000 built-in commands and allows the user to combine these commands into macros to automate work. The use of Emacs Lisp, a variant of the Lisp programming language, provides a deep extension capability.
The original EMACS was written in 1976 by Richard Stallman and Guy L. Steele, Jr. as a set of Editor MACroS for the TECO editor.[tpl]cite web | url = http://www.multicians.org/mepap.html#secii | title = Multics Emacs: The History, Design and Implementation | author = Bernard S. Greenberg [/tpl][tpl]cite web |url=https://www.gnu.org/software/emacs/emacs-faq.html#Origin-of-the-term-Emacs | title = GNU Emacs FAQ [/tpl][tpl]cite web | url = http://www.jwz.org/doc/emacs-timeline.html | title = Emacs Timeline | author = Jamie Zawinski [/tpl][tpl]cite web |url=http://www.codeartnow.com/hacker-art-1/macsimizing-teco | title = MACSimizing TECO | author = Adrienne G. Thompson[/tpl] It was inspired by the ideas of the TECO-macro editors TECMAC and TMACS.[tpl]cite web|url=http://www.xemacs.org/Documentation/21.5/html/internals_3.html |title=A history of Emacs |accessdate=2007-08-22 |date=2006-12-11 |work=XEmacs Internals Manual [/tpl]
The most popular, and most ported, version of Emacs is GNU Emacs, which was created by Stallman for the GNU Project.[tpl]cite web |url=http://popcon.debian.org/main/editors/by_vote |title=Debian Popularity Contest |first=Bill |last=Allombert |publisher=Debian |work=Editors report |accessdate=22 November 2011[/tpl] XEmacs is a common variant that branched from GNU Emacs in 1991. Both of the variants use Emacs Lisp and are for the most part compatible with each other.
Emacs became, along with vi, one of the two main contenders in the traditional editor wars of Unix culture.

==History==

Emacs development began during the 1970s at the MIT AI Lab, whose PDP-6 and PDP-10 computers used the Incompatible Timesharing System (ITS) operating system that featured a default line editor known as Tape Editor and Corrector (TECO). Unlike most modern text editors, TECO used separate modes in which the user would either add text, edit existing text, or display the document. One could not place characters directly into a document by typing them into TECO, but rather one had enter a character ('i') in the TECO command language telling it to switch to input mode, enter the required characters, during which time the edited text was not displayed on the screen, and finally enter a character () to switch the editor back to command mode. (A similar technique was used to allow overtyping.) This behavior is similar to that of the program ed.
Richard Stallman visited the Stanford AI Lab in 1972 or 1974 and saw the lab's "E" editor, written by Fred Wright.[tpl]cite web | url = ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/80/796/CS-TR-80-796.pdf | title = Essential E | author = Arhur Samuel | accessdate=2011-08-01 | date = March 1980 [/tpl] He was impressed by the editor's intuitive WYSIWYG (What You See Is What You Get) behavior, which has since become the default behavior of most modern text editors. He returned to MIT where Carl Mikkelsen, a hacker at the AI Lab, had added to TECO a combined display/editing mode called "Control-R" that allowed the screen display to be updated each time the user entered a keystroke. Stallman reimplemented this mode to run efficiently and then added a macro feature to the TECO display-editing mode that allowed the user to redefine any keystroke to run a TECO program.
E had another feature that TECO lacked: random-access editing. TECO was a page-sequential editor that was designed for editing paper tape on the PDP-1 and typically allowed editing on only one page at a time, in the order of the pages in the file. Instead of adopting E's approach of structuring the file for page-random access on disk, Stallman modified TECO to handle large buffers more efficiently and changed its file-management method to read, edit, and write the entire file as a single buffer. Almost all modern editors use this approach.
The new version of TECO quickly became popular at the AI Lab, where there soon accumulated a large collection of custom macros whose names often ended in "MAC" or "MACS", which stood for "macro". Two years later, Guy Steele took on the project of unifying the overly diverse macros into a single set. Steele and Stallman's finished implementation included facilities for extending and documenting the new macro set. The resulting system was called EMACS, which stood for "Editing MACroS" or, alternatively, "E with MACroS". Stallman picked the name Emacs "because  was not in use as an abbreviation on ITS at the time."[tpl]cite web | last = Richard M. | first = Stallman | title = The EMACS Full-Screen Editor | url = http://www.lysator.liu.se/history/garb/txt/87-1-emacs.txt | accessdate = 2007-09-14 [/tpl] An apocryphal hacker koan alleges that the program was named after "Emack & Bolio's", a popular Cambridge ice cream store.[tpl]citation needed|date=June 2007[/tpl] The first operational EMACS system existed in late 1976.[tpl]cite techreport | first=Richard | last=Stallman | title=EMACS: The Extensible, Customizable, Self-Documenting, Display Editor | number=AI Memo 519a | institution=MIT AI Lab | date=March 26, 1981 | url=http://dspace.mit.edu/bitstream/handle/1721.1/5736/AIM-519A.pdf | accessdate = 2011-01-07 [/tpl]
Stallman saw a problem in too much customization and de facto forking and set certain conditions for usage.[tpl]citation needed|date=January 2011[/tpl] He later wrote:
The original Emacs, like TECO, ran only on the PDP line of computers. Its behavior was sufficiently different from that of TECO that it could be considered a text editor in its own right, and it quickly became the standard editing program on ITS. Michael McMahon ported Emacs from ITS to the Tenex and TOPS-20 operating systems. Other contributors to early versions of Emacs include Kent Pitman, Earl Killian, and Eugene Ciccarelli. By 1979, Emacs was the main editor used in MIT's AI lab and its Computer Science lab.[tpl]cite news | url=http://pogue.blogs.nytimes.com/2007/08/29/be-careful-what-you-joke-about/ | title=email quoted in "Be Careful What You Joke About" | author=Leigh Klotz | work=The New York Times | date=2007-08-29 | accessdate=2010-05-01 [/tpl]

===Other early implementations===

Programmers wrote many Emacs-like editors for other computer systems in the following years. These included EINE ("EINE Is Not EMACS") and ZWEI ("ZWEI Was EINE Initially"), which were written for the Lisp machine by Michael McMahon and Daniel Weinreb, and Sine ("Sine Is Not Eine"),[tpl]cite web | url = http://dspace.mit.edu/bitstream/handle/1721.1/16038/07332831.pdf?sequence=1 | title = The Design and Implementation of a Display-Oriented Editor Writing System  | author = Owen Theodore Anderson | accessdate=2012-09-09 | date = January 1979 [/tpl] which was written by Owen Theodore Anderson. Weinreb's EINE was the first Emacs written in Lisp. In 1978, Bernard Greenberg wrote Multics Emacs almost entirely in Multics Lisp at Honeywell's Cambridge Information Systems Lab. Multics Emacs was later maintained by Richard Soley, who went on to develop the NILE Emacs-like editor for the NIL Project, and by Barry Margolin. Many versions of Emacs, including GNU Emacs, would later adopt Lisp as an extension language.
James Gosling, who would later invent NeWS and the Java programming language, wrote Gosling Emacs in 1981. The first Emacs-like editor to run on Unix, Gosling Emacs was written in C and used Mocklisp, a language with Lisp-like syntax, as an extension language.

===GNU Emacs===

Richard Stallman began work on GNU Emacs in 1984 to produce a free software alternative to the proprietary Gosling Emacs. GNU Emacs was initially based on Gosling Emacs, but Stallman's replacement of its Mocklisp interpreter with a true Lisp interpreter required that nearly all of its code be rewritten. This became the first program released by the nascent GNU Project. GNU Emacs is written in C and provides Emacs Lisp, also implemented in C, as an extension language. Version 13, the first public release, was made on March 20, 1985. The first widely distributed version of GNU Emacs was version 15.34, released later in 1985. Early versions of GNU Emacs were numbered as "1.x.x", with the initial digit denoting the version of the C core. The "1" was dropped after version 1.12, as it was thought that the major number would never change, and thus the numbering skipped from "1" to "13".[tpl]citation needed|date=June 2009[/tpl]
GNU Emacs was later ported to Unix. It offered more features than Gosling Emacs, in particular a full-featured Lisp as its extension language, and soon replaced Gosling Emacs as the de facto Unix Emacs editor. Markus Hess exploited a security flaw in GNU Emacs' email subsystem in his 1986 cracking spree in which he gained superuser access to Unix computers.[tpl]cite journal | last=Stoll | first=Clifford | author-link=Clifford Stoll | title=Stalking the wily hacker | year=1988 | journal=Communications of the ACM | volume=31 | issue=5 | pages=484–497 | doi=10.1145/42411.42412 | postscript=[tpl]inconsistent citations[/tpl] [/tpl]
GNU Emacs development was relatively closed until 1999 and was used as an example of the "Cathedral" development style in The Cathedral and the Bazaar. The project has since adopted a public development mailing list and anonymous CVS access. Development took place in a single CVS trunk until 2008 and today uses the Bazaar DVCS.
Richard Stallman has remained the principal maintainer of GNU Emacs, but he has stepped back from the role at times. Stefan Monnier and Chong Yidong have overseen maintenance since 2008.[tpl]cite web|url=http://lists.gnu.org/archive/html/emacs-devel/2008-02/msg02140.html|title=Re: Looking for a new Emacs maintainer or team|publisher=gnu.org Mailing List|accessdate=2008-02-23[/tpl]; see also "Stallman on handing over GNU Emacs, its future and the importance of nomenclature"  As of early 2014, GNU Emacs has had 579 developers.[tpl]cite web|url=http://esr.ibiblio.org/?p=5634|title=Ugliest…repository…conversion…ever|quote=twenty-nine years of continuous development by no fewer than 579 people[/tpl]

===XEmacs===

Lucid Emacs, based on an early alpha version of GNU Emacs 19, was developed beginning in 1991 by Jamie Zawinski and others at Lucid Inc. One of the best-known early forks in free software development occurred when the codebases of the two Emacs versions diverged and the separate development teams ceased efforts to merge them back into a single program.[tpl]cite web | last = Stephen J. | first = Turnbull | title = XEmacs vs. GNU Emacs | url = http://www.xemacs.org/About/XEmacsVsGNUemacs.html | accessdate = 2012-10-02 [/tpl] Lucid Emacs has since been renamed XEmacs and remains the second most popular variety of Emacs, after GNU Emacs.[tpl]citation needed|date=January 2011[/tpl] XEmacs development has slowed, with the most recent stable version 21.4.22 released in January 2009, while GNU Emacs has implemented many formerly XEmacs-only features. This has led some users to proclaim XEmacs' death.[tpl]cite web|url=http://steve-yegge.blogspot.com/2008/04/xemacs-is-dead-long-live-xemacs.html|title=XEmacs is Dead. Long Live XEmacs![/tpl]

===Forks of GNU Emacs===

Other forks, less known than XEmacs, include:

===Various Emacs editors===

Emacs editors that are not based on GNU Emacs source code have proliferated, some as projects aimed at producing small versions of Emacs. GNU Emacs was initially targeted, in the 1980s, at computers with a 32-bit flat address space and at least 1 MiB of RAM.  Such computers were considered high end at the time, and this left a need for smaller reimplementations.  In more recent times, small clones have been designed to fit on software installation CDs.  Other projects aim to copy Emacs but with a different dialect of Lisp or a different programming language altogether.  Although not all are still actively maintained, these clones include:

===Editors with Emacs emulation===

==Features==

Emacs is primarily a text editor and is designed for manipulating pieces of text, although it is capable of formatting and printing documents like a word processor. Emacs provides commands to manipulate words and paragraphs, syntax highlighting for making source code easier to read, and "keyboard macros" for performing user-defined batches of editing commands.
GNU Emacs is a "real-time display" editor, as its edits are displayed onscreen as they occur. This is standard behavior for modern text editors but EMACS was among the earliest to implement this functionality as opposed to having to issue a separate command to insert new edits into the existing text as in vi.

===General Architecture===

Almost all of the functionality in Emacs, including basic editing operations such as the insertion of characters into a document, is achieved through scripts in a dialect of the Lisp programming language known as Emacs Lisp (Elisp), layered on a relatively small and stable core of basic services and platform abstraction written in the C programming language.
In this Lisp environment, variables and functions can be temporarily modified without the need to recompile or restart Emacs.
Emacs operates on buffers containing text with additional attributes; every buffer maintains its own point (cursor location) and mark (another location, delimiting the selected region together with the point), the name of the file it is visiting (if applicable) and the set of active modes (exactly one major mode and any number of minor modes), which control editor behaviour through variables.
Elisp code can be executed interactively through named commands, which can be bound to key presses or accessed by name; some commands evaluate arbitrary code from buffers (e.g. eval-region or eval-buffer).
Buffers are displayed in windows, which are tiled portions of the terminal screen or the GUI window (called a frame in Emacs terms; multiple frames are supported). Unless configured otherwise, windows include scroll bars, line numbers, an header line at the top (usually displaying the buffer title or filename) and a mode line at the bottom (usually listing the active modes and point position of the buffer).
Multiple windows can be opened for the same buffer, for example to see different parts of a long text, and multiple buffers can share the same text, for example to take advantage of different modes.

===Customizability===

===Portability===

Emacs uses a layered architecture, with a Turing complete language running on top of a smaller central core.  Because about three-fourths of the stock Emacs distribution (1270 kLOC as of 2013-09-19) is written in the Elisp extension language http://www.ohloh.net/p/emacs/analyses/latest/languages_summary, and the set of features implemented in Elisp code is automatically supported once the C core which implements the Elisp interpreter has been ported (aka temacs at 299 kLOC), porting Emacs—including the stock Elisp plus a large variety[tpl]citation needed|date=September 2013[/tpl] of third-party Elisp extensions—to a new platform is considerably less difficult than porting a project consisting of native code only.  Theoretically, only the core must be ported to the new platform; once the core is ported, the portions implemented in the language above that take minimal (but not zero http://www.update.uu.se/~ams/public_html/emacs/src/ChangeLog.3#1993-03-30) work to bring over.

===Self-documenting===

The first Emacs contained a "help" library that included documentation for every command, variable and internal function. Because of this, Emacs proponents described the software as "self-documenting" in that it presents the user with information on its normal features and its current state. Each function includes a documentation string that is displayed to the user on request, a practice that subsequently spread to programming languages such as Lisp and Java. This help system can take users to the actual code for each function, whether from a built-in library or an added third-party library.
Emacs also has a built-in tutorial. Emacs displays instructions for performing simple editing commands and invoking the tutorial when it is launched with no file to edit. The tutorial is by Stuart Cracraft and Richard Stallman.

==Culture==

===Church of Emacs===

The "Church of Emacs", formed by Richard Stallman, is a parody religion created for Emacs users.Saint IGNUcius - Richard Stallman While it refers to vi as the "editor of the beast" (vi-vi-vi being 6-6-6 in Roman numerals), it does not oppose the use of vi; rather, it calls proprietary software anathema. ("Using a free version of vi is not a sin but a penance."All about Linux: The unabridged selective transcript of Richard M Stallman's talk at the ANU) The Church of Emacs has its own newsgroup, alt.religion.emacs,alt.religion.emacs newsgroup that has posts purporting to support this parody religion. Supporters of vi have created an opposing "Cult of vi", argued by some Emacs users to be an attempt to "ape their betters".
Stallman has jokingly referred to himself as St IGNUcius, a saint in the Church of Emacs.Saint IGNUcius - Richard Stallman
Regarding vi's modal nature, some Emacs users joke that vi has two modes – "beep repeatedly" and "break everything". vi users enjoy joking that Emacs's key-sequences induce carpal tunnel syndrome, or mentioning one of many satirical expansions of the acronym EMACS, such as "Escape Meta Alt Control Shift" (a jab at Emacs's reliance on modifier keys).satirical expansions of EMACS As a poke at Emacs' extensive programmability, vi advocates have been known to describe Emacs as "a great operating system, lacking only a decent editor".

==="Emacs pinky"===

Many heavy Emacs users have experienced a repetitive strain injury[tpl]cite web|url=http://xahlee.org/emacs/emacs_pinky.html |title=How To Avoid The Emacs Pinky Problem |publisher=Xahlee.org |date= |accessdate=2009-11-08[/tpl] called "Emacs pinky" because of Emacs' strong dependence on Control and Meta keys and because of the position of the Control key in the modern IBM PC keyboard layout.
This problem has been addressed through both software and hardware. Software-side methods include:Repeated Strain Injury
Hardware solutions include special keyboards such as Kinesis's Contoured Keyboard, which places the modifier keys where they can easily be operated by the thumb, or the Microsoft Natural keyboard, whose large modifier keys are placed symmetrically on both sides of the keyboard and can be pressed with the palm of the hand. Foot pedals can also be used.
The "Emacs pinky" is a relatively recent development. The Space-cadet keyboard on which Emacs was developed had oversized Control keys that were adjacent to the space bar and were easy to reach with the thumb.[tpl]Citation needed|date=April 2014[/tpl]
Vim advocates often cite Emacs pinky as a reason to switch, although some Vim users transpose their mode change key with the caps lock key for similar reasons.[tpl]cite web|url=http://japan.zdnet.com/blog/komatsu/2007/10/14/entry_27016464/|title=VimとEmacsのあいだで小指痛を叫んだけもの|date=2007-10-14|language=Japanese[/tpl]

===Terminology===

The word "emacs" is sometimes pluralized as emacsen, by analogy with boxen and VAXen.[tpl]cite web|url=http://www.catb.org/~esr/jargon/html/V/VAXen.html |title=VAXen |publisher=Catb.org |date= |accessdate=2009-11-08[/tpl]

==See also==

==Notes==

==References==

==External links==


