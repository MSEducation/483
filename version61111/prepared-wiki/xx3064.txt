[[Entscheidungsproblem]]

CATEGORIES: Theory of computation, Computability theory, Gottfried Leibniz, Mathematical logic, Metatheorems

In mathematics and computer science, the [tpl]lang|de|Entscheidungsproblem[/tpl] ([tpl]IPA-de|ɛntˈʃaɪ̯dʊŋspʁoˌbleːm|pron[/tpl], German for 'decision problem') is a challenge posed by David Hilbert in 1928.[tpl]Citation needed|date=November 2013[/tpl] The [tpl]lang|de|Entscheidungsproblem[/tpl] asks for an algorithm that takes as input a statement of a first-order logic (possibly with a finite number of axioms beyond the usual axioms of first-order logic) and answers "Yes" or "No" according to whether the statement is universally valid, i.e., valid in every structure satisfying the axioms. By the completeness theorem of first-order logic, a statement is universally valid if and only if it can be deduced from the axioms, so the [tpl]lang|de|Entscheidungsproblem[/tpl] can also be viewed as asking for an algorithm to decide whether a given statement is provable from the axioms using the rules of logic.
In 1936, Alonzo Church and Alan Turing published independent papersChurch's paper was presented to the American Mathematical Society on 19 April 1935 and published on 15 April 1936. Turing, who had made substantial progress in writing up his own results, was disappointed to learn of Church's proof upon its publication (see correspondence between Max Newman and Church in Alonzo Church papers). Turing quickly completed his paper and rushed it to publication; it was received by the Proceedings of the London Mathematical Society on 28 May 1936, read on 12 November 1936, and published in series 2, volume 42 (1936-7); it appeared in two sections: in Part 3 (pages 230-240), issued on Nov 30, 1936 and in Part 4 (pages 241-265), issued on Dec 23, 1936; Turing added corrections in volume 43(1937) pp. 544–546. See the footnote at the end of Soare:1996. showing that a general solution to the Entscheidungsproblem is impossible, assuming that the intuitive notation of "effectively calculable" is captured by the functions computable by a Turing machine (or equivalently, by those expressible in the lambda calculus). This assumption is now known as the Church–Turing thesis.

==History of the problem==

The origin of the [tpl]lang|de|Entscheidungsproblem[/tpl] goes back to Gottfried Leibniz, who in the seventeenth century, after having constructed a successful mechanical calculating machine, dreamt of building a machine that could manipulate symbols in order to determine the truth values of mathematical statements.Davis 2000: pp. 3–20  He realized that the first step would have to be a clean formal language, and much of his subsequent work was directed towards that goal.  In 1928, David Hilbert and Wilhelm Ackermann posed the question in the form outlined above.
In continuation of his "program," Hilbert posed three questions at an international conference in 1928,  the third of which became known as "Hilbert's [tpl]lang|de|Entscheidungsproblem[/tpl]."Hodges p. 91 As late as 1930, he believed that there would be no such thing as an unsolvable problem.Hodges p. 92, quoting from Hilbert

==Negative answer==

Before the question could be answered, the notion of "algorithm" had to be formally defined.  This was done by Alonzo Church in 1936 with the concept of "effective calculability" based on his λ calculus and by Alan Turing in the same year with his concept of Turing machines.  It was recognized immediately by Turing that these are equivalent models of computation. 
The negative answer to the [tpl]lang|de|Entscheidungsproblem[/tpl] was then given by Alonzo Church in 1935–36 and independently shortly thereafter by Alan Turing in 1936.  Church proved that there is no computable function which decides for two given λ calculus expressions whether they are equivalent or not.  He relied heavily on earlier work by Stephen Kleene. Turing reduced the halting problem for Turing machines to the [tpl]lang|de|Entscheidungsproblem[/tpl].  The work of both authors was heavily influenced by Kurt Gödel's earlier work on his incompleteness theorem, especially by the method of assigning numbers (a Gödel numbering) to logical formulas in order to reduce logic to arithmetic.
The [tpl]lang|de|Entscheidungsproblem[/tpl] is related to Hilbert's tenth problem, which asks for an algorithm to decide whether Diophantine equations have a solution.  The non-existence of such an algorithm, established by Yuri Matiyasevich in 1970, also implies a negative answer to the Entscheidungsproblem.
Some first-order theories are algorithmically decidable; examples of this include Presburger arithmetic, real closed fields and static type systems of many programming languages. The general first-order theory of the natural numbers expressed in Peano's axioms cannot be decided with such an algorithm, however.

==See also==

==Notes==

==References==


